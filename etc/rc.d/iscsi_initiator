#!/bin/sh
#
# Part of XigmaNAS (https://www.xigmanas.com).
# Copyright (c) 2018-2019 XigmaNAS <info@xigmanas.com>.
# All rights reserved.
#
# Deamon iscsi_initiator

# PROVIDE: iscsi_initiator
# REQUIRE: NETWORKING netwait
# BEFORE: mountcritremote
# KEYWORD: shutdown
# XQUERY: -i "count(//iscsiinit/vdisk) > 0" -o "0" -b
# RCVAR: iscsi_initiator

. /etc/rc.subr
. /etc/configxml.subr

name="iscsi_initiator"
desc="Deamon iscsi_initiator"
rcvar=iscsi_initiator_enable

load_rc_config "$name"

# Custom commands
mkconf_cmd="iscsi_initiator_mkconf"
start_precmd="iscsi_initiator_prestart"
start_cmd="iscsi_initiator_start"
stop_cmd="iscsi_initiator_stop"
extra_commands="mkconf"

# Defaults
iscsi_initiator_enable="${iscsi_initiator_enable:=NO}"
#command="/sbin/iscontrol"
command="/usr/bin/iscsictl"
iscsi_initiator_conf="/etc/iscsi.conf"

iscsi_initiator_mkconf()
{
	cat /dev/null > ${iscsi_initiator_conf}
	chmod 600 ${iscsi_initiator_conf}

	/usr/local/bin/xml sel --template \
		--match '//iscsiinit/vdisk' \
			--if 'string-length(name) > 0' \
				--value-of 'normalize-space(name)' \
				--output ' {' --nl \
				--if 'string-length(authmethod) > 0' \
					--value-of 'concat("authmethod = ",authmethod)' --nl \
					--if 'authmethod="CHAP"' \
						--if 'string-length(chapiname) > 0 and string-length(chapsecret) > 0' \
							--if "contains(chapiname,'\"')" \
								--output '# invalid character(s) were removed from chap name:' --nl \
							--break \
							--if "contains(chapsecret,'\"')" \
								--output '# invalid character(s) were removed from chap secret:' --nl \
							--break \
							--value-of "concat('chapiname = \"',str:replace(chapiname,'\"',''),'\"')" --nl \
							--value-of "concat('chapsecret = \"',str:replace(chapsecret,'\"',''),'\"')" --nl \
							--if 'string-length(tgtchapname) > 0 and string-length(tgtchapsecret) > 0' \
								--if "contains(tgtchapname,'\"')" \
									--output '# invalid character(s) were removed from mutual chap name:' --nl \
								--break \
								--if "contains(tgtchapsecret,'\"')" \
									--output '# invalid character(s) were removed from mutual chap secret:' --nl \
								--break \
								--value-of "concat('tgtchapname = \"',str:replace(tgtchapname,'\"',''),'\"')" --nl \
								--value-of "concat('tgtchapsecret = \"',str:replace(tgtchapsecret,'\"',''),'\"')" --nl \
							--break \
						--break \
					--break \
				--break \
				--if 'string-length(headerdigest) > 0' \
					--value-of 'concat("headerdigest = ",headerdigest)' --nl \
				--break \
				--if 'string-length(datadigest) > 0' \
					--value-of 'concat("datadigest = ",datadigest)' --nl \
				--break \
				--if 'string-length(initiatorname) > 0' \
					--value-of 'concat("initiatorname = ",initiatorname)' --nl \
				--break \
				--if 'string-length(targetname) > 0' \
					--value-of 'concat("targetname = ",targetname)' --nl \
				--break \
				--if 'string-length(targetaddress) > 0' \
					--value-of 'concat("targetaddress = ",targetaddress)' --nl \
				--break \
				--if 'string-length(sessiontype) > 0' \
					--value-of 'concat("sessiontype = ",sessiontype)' --nl \
				--break \
				--if 'string-length(enable) > 0' \
					--value-of 'concat("enable = ",enable)' --nl \
				--break \
				--if 'string-length(offload) > 0' \
					--value-of 'concat("offload = ",offload)' --nl \
				--break \
				--if 'string-length(protocol) > 0' \
					--value-of 'concat("protocol = ",protocol)' --nl \
				--break \
				--match 'auxparam' \
					--if 'position() < last() or string-length(.) > 0' \
						--value-of '.' --nl \
					--break \
				--break \
				--output '}' --nl \
			--break \
		--break \
		${configxml_file} | /usr/local/bin/xml unesc >> ${iscsi_initiator_conf}
}

iscsi_initiator_prestart()
{
	iscsi_initiator_mkconf

	# Load kernel module
	#load_kld -e iscsi_initiator -m iscsi_initiator iscsi_initiator.ko

	# Disable debugging
	#/sbin/sysctl debug.iscsi_initiator=0 > /dev/null

	if [ -z "`pgrep iscsid`" ]; then
		/etc/rc.d/iscsid onestart
	fi
}

iscsi_initiator_start()
{
	local _command_args

	echo "Starting ${name}."

	# Iterate over all configured disks
	#/usr/local/bin/xml sel -t -m "//iscsiinit/vdisk" \
	#	-v "concat('targetaddress=',targetaddress,' targetname=',targetname,' initiatorname=',initiatorname)" \
	#	-i "position() <= last()" -n -b \
	#	${configxml_file} | /usr/local/bin/xml unesc | \
	#	while read _command_args; do
	#		eval ${command} ${_command_args}
	#	done

	# Add all targets
	eval ${command} -Aa
}

iscsi_initiator_stop()
{
	echo "Stopping ${name}."
	#/usr/bin/killall -HUP iscontrol > /dev/null 2>&1

	#retry=20
	#echo "Wait for iSCSI session end"
	#while [ $retry -ne 0 ]; do
	#	num=`/sbin/sysctl -q -n net.iscsi_initiator.sessions`
	#	[ -z "$num" ] && break;
	#	[ $num -eq 0 ] && break;
	#	echo -n "."
	#	sleep 1
	#	retry=`/bin/expr $retry - 1`
	#done
	#if [ $retry -eq 0 ]; then
	#	echo ".Give up"
	#else
	#	echo ".OK"
	#fi

	# Remove all targets
	eval ${command} -Ra
}

run_rc_command "$1"
