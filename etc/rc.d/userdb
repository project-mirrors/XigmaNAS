#!/bin/sh
#
# Part of XigmaNAS (https://www.xigmanas.com).
# Copyright (c) 2018-2019 XigmaNAS <info@xigmanas.com>.
# All rights reserved.
#
# Configure userdb
#

# PROVIDE: userdb
# BEFORE: CONFIG
# REQUIRE: SYSTEMINIT

. /etc/rc.subr
. /etc/configxml.subr

name="userdb"
desc="Configure userdb"
load_rc_config "$name"

#	defaults
userdb_group=${userdb_group:-"/etc/group"}
userdb_passwd=${userdb_passwd:-"/etc/passwd"}
userdb_masterpasswd=${userdb_masterpasswd:-"/etc/master.passwd"}

echo "Generating user database(s)."

#	create the /etc/group file
/usr/local/bin/xml sel --template \
	--output 'wheel:*:0:root' --nl \
	--output 'daemon:*:1:' --nl \
	--output 'kmem:*:2:' --nl \
	--output 'sys:*:3:' --nl \
	--output 'tty:*:4:' --nl \
	--output 'operator:*:5:root' --nl \
	--output 'mail:*:6:' --nl \
	--output 'bin:*:7:' --nl \
	--output 'news:*:8:' --nl \
	--output 'man:*:9:' --nl \
	--output 'games:*:13:' --nl \
	--output 'staff:*:20:' --nl \
	--output 'sshd:*:22:' --nl \
	--output 'smmsp:*:25:' --nl \
	--output 'mailnull:*:26:' --nl \
	--output 'guest:*:31:' --nl \
	--output 'bind:*:53:' --nl \
	--output 'unbound:*:59:' --nl \
	--output 'proxy:*:62:' --nl \
	--output 'authpf:*:63:' --nl \
	--output '_pflogd:*:64:' --nl \
	--output '_dhcp:*:65:' --nl \
	--output 'uucp:*:66:' --nl \
	--output 'dialer:*:68:' --nl \
	--output 'network:*:69:' --nl \
	--output 'audit:*:77:' --nl \
	--output 'www:*:80:' --nl \
	--output 'hast:*:845:' --nl \
	--output 'nogroup:*:65533:' --nl \
	--output 'nobody:*:65534:' --nl \
	--output 'ftp:*:50:' --nl \
	--match '//system/usermanagement/group' \
		--value-of "concat(name,':*:',id,':')" --nl \
	--break \
	--match '//access/group' \
		--value-of "concat(name,':*:',id,':')" --nl \
	--break \
	 ${configxml_file} | /usr/local/bin/xml unesc > ${userdb_group}

#	wipe /etc/passwd file
cat /dev/null > ${userdb_passwd}

#	get encrypted root password
_password=`configxml_get "//system/password"`

#	create the /etc/master.passwd file
echo "root:${_password}:0:0::0:0:Charlie &:/root:/bin/tcsh
toor:*:0:0::0:0:Bourne-again Superuser:/root:
daemon:*:1:1::0:0:Owner of many system processes:/root:/usr/sbin/nologin
operator:*:2:5::0:0:System &:/:/usr/sbin/nologin
bin:*:3:7::0:0:Binaries Commands and Source:/:/usr/sbin/nologin
tty:*:4:65533::0:0:Tty Sandbox:/:/usr/sbin/nologin
kmem:*:5:65533::0:0:KMem Sandbox:/:/usr/sbin/nologin
games:*:7:13::0:0:Games pseudo-user:/usr/games:/usr/sbin/nologin
news:*:8:8::0:0:News Subsystem:/:/usr/sbin/nologin
man:*:9:9::0:0:Mister Man Pages:/usr/share/man:/usr/sbin/nologin
sshd:*:22:22::0:0:Secure Shell Daemon:/var/empty:/usr/sbin/nologin
smmsp:*:25:25::0:0:Sendmail Submission User:/var/spool/clientmqueue:/usr/sbin/nologin
mailnull:*:26:26::0:0:Sendmail Default User:/var/spool/mqueue:/usr/sbin/nologin
bind:*:53:53::0:0:Bind Sandbox:/:/usr/sbin/nologin
unbound:*:59:59::0:0:Unbound DNS Resolver:/var/empty:/usr/sbin/nologin
proxy:*:62:62::0:0:Packet Filter pseudo-user:/nonexistent:/usr/sbin/nologin
_pflogd:*:64:64::0:0:pflogd privsep user:/var/empty:/usr/sbin/nologin
_dhcp:*:65:65::0:0:dhcp programs:/var/empty:/usr/sbin/nologin
pop:*:68:6::0:0:Post Office Owner:/nonexistent:/usr/sbin/nologin
www:*:80:80::0:0:World Wide Web Owner:/nonexistent:/usr/sbin/nologin
hast:*:845:845::0:0:HAST unprivileged user:/var/empty:/usr/sbin/nologin
nobody:*:65534:65534::0:0:Unprivileged user:/nonexistent:/usr/sbin/nologin
ftp:*:21:50::0:0:FTP user:/mnt:/sbin/nologin
uucp:*:66:66::0:0:UUCP pseudo-user:/var/empty:/usr/sbin/nologin" > ${userdb_masterpasswd}

#	generate the /etc/passwd, pwd.db and spwd.db files
/usr/sbin/pwd_mkdb -p ${userdb_masterpasswd} > /dev/null 2>&1

#	pw user add
#	-n login
#	-u id
#	-g primarygroup
#	-c full name [quoted]
#	-G secondary groups [comma separated], logic skips primary group
#	-s shell
#	-m [attempt to create home directory]
#	-d homedir [quoted]
#	-H 0 [read encrypted password from stdin]

#	process system users
_index=`configxml_get_count '//system/usermanagement/user'`
while [ ${_index} -gt 0 ]; do
	_cmdarg=`/usr/local/bin/xml sel --template \
		--match "//system/usermanagement/user[${_index}]" \
			--var filteruser='.' \
			--value-of "concat('-n ',name,' -u ',id,' -g ',primarygroup)" \
				--if 'count(group) > 0' \
					--match 'group[not(.=$filteruser/primarygroup)]' \
						--if 'position() > 1' \
							--output ',' \
						--else \
							--output ' -G ' \
						--break \
						--value-of  '.' \
					--break \
				--break \
			--if 'string-length(extraoptions) > 0' \
				--value-of "concat(' ',extraoptions)" \
			--break \
		--break \
		${configxml_file} | /usr/local/bin/xml unesc`
	eval "/usr/sbin/pw user add -q ${_cmdarg} > /dev/null"
	_index=$(( ${_index} - 1 ))
done

#	process configured users
_index=`configxml_get_count '//access/user'`
while [ ${_index} -gt 0 ]; do
	if configxml_isset "//access/user[${_index}]/enable"; then
		_cmdarg=`/usr/local/bin/xml sel --template \
			--match "//access/user[${_index}]" \
				--var filteruser='.' \
				--value-of "concat('-n ',login,' -u ',id,' -g ',primarygroup,' -c \"',fullname,'\"')" \
				--if "count(group) > 0" \
					--match 'group[not(.=$filteruser/primarygroup)]' \
						--if 'position() > 1' \
							--output ',' \
						--else \
							--output ' -G ' \
						--break \
						--value-of '.' \
					--break \
				--break \
				--if 'string-length(shell) > 0' \
					--value-of "concat(' -s ',shell)" \
				--else \
					--output ' -s nologin' \
				--break \
				--if 'string-length(homedir) > 0' \
					--if "homedir[. != '/mnt']" \
						--output ' -m' \
					--break \
					--value-of "concat(' -d \"',str:replace(homedir,'\"',''),'\"')" \
				--else \
					--output ' -d /mnt' \
				--break \
				--if 'string-length(passwordsha) > 0' \
					--output ' -H 0' \
				--break \
			--break \
			${configxml_file} | /usr/local/bin/xml unesc`
		_password=`configxml_get "//access/user[${_index}]/passwordsha"`
		eval "(/bin/echo "'${_password}'") | /usr/sbin/pw user add -q ${_cmdarg} > /dev/null"
	fi
	_index=$(( ${_index} - 1 ))
done
