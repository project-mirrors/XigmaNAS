#!/bin/sh
#
# Part of XigmaNAS® (https://www.xigmanas.com).
# Copyright © 2018-2023 XigmaNAS® <info@xigmanas.com>.
# All rights reserved.
#
# GELI disk encryption
#

# PROVIDE: disks
# KEYWORD: nojail shutdown

. /etc/rc.subr
. /etc/configxml.subr

name="geli"
desc="GELI disk encryption"
start_precmd='[ -n "$(geli_make_list)" -o -n "${geli_groups}" -o -n "$(geli_make_list_xml)" ]'
start_cmd="geli_start"
stop_cmd="geli_stop"
required_modules="geom_eli:g_eli"

# Creates a list of providers for GELI encryption
geli_make_list_xml()
{
	local _devices

	_devices=$(/usr/local/bin/xml sel -t -m "//geli/vdisk" \
		-v devicespecialfile -n \
		${configxml_file} | /usr/local/bin/xml unesc |
		while read _provider; do
			_provider=${_provider#/dev/}
			_provider=${_provider%.eli}
			echo "${_provider} "
		done)

	echo $_devices
}

geli_start()
{
	devices=$(geli_make_list)

	# Process rc.conf providers
	if [ -n "${devices}" ]; then

		if [ -z "${geli_tries}" ]; then
			if [ -n "${geli_attach_attempts}" ]; then
				# Compatibility with rc.d/gbde.
				geli_tries=${geli_attach_attempts}
			else
				geli_tries=$(${SYSCTL_N} kern.geom.eli.tries)
			fi
		fi

		for provider in ${devices}; do
			provider_=$(ltr ${provider} '/-' '_')

			eval "flags=\${geli_${provider_}_flags}"
			if [ -z "${flags}" ]; then
				flags=${geli_default_flags}
			fi
			if [ -e "/dev/${provider}" -a ! -e "/dev/${provider}.eli" ]; then
				echo "Configuring Disk Encryption for ${provider}."
				count=1
				while [ "${count}" -le "${geli_tries}" ]; do
					geli attach ${flags} ${provider}
					if [ -e "/dev/${provider}.eli" ]; then
						break
					fi
					echo "Attach failed; attempt ${count} of ${geli_tries}."
					count=$((count+1))
				done
			fi
		done

		for group in ${geli_groups}; do
			group_=$(ltr ${group} '/-' '_')

			eval "flags=\${geli_${group_}_flags}"
			if [ -z "${flags}" ]; then
				flags=${geli_default_flags}
			fi

			eval "providers=\${geli_${group_}_devices}"
			if [ -z "${providers}" ]; then
				echo "No devices listed in geli group ${group}."
				continue
			fi

			if [ -e "/dev/${providers%% *}" -a ! -e "/dev/${providers%% *}.eli" ]; then
				echo "Configuring Disk Encryption for geli group ${group}, containing ${providers}."
				count=1
				while [ "${count}" -le "${geli_tries}" ]; do
					geli attach ${flags} ${providers}
					if [ -e "/dev/${providers%% *}.eli" ]; then
						break
					fi
					echo "Attach failed; attempt ${count} of ${geli_tries}."
					count=$((count+1))
				done
			fi
		done

	fi
}

geli_stop()
{
	devices=$(geli_make_list)
	devices2=$(geli_make_list_xml)

	# Process rc.conf providers
	if [ -n "${devices}" ]; then
		for group in ${geli_groups}; do
			group_=$(ltr ${group} '/-' '_')

			eval "providers=\${geli_${group_}_devices}"

			devices="${devices} ${providers}"
		done

		for provider in ${devices}; do
			if [ -e "/dev/${provider}.eli" ]; then
				umount "/dev/${provider}.eli" 2>/dev/null
				geli detach "${provider}"
			fi
		done
	fi

	# Process config.xml providers as standalone devices
	if [ -n "${devices2}" ]; then
		for provider in ${devices2}; do
			if [ -e "/dev/${provider}.eli" ]; then
				umount "/dev/${provider}.eli" 2>/dev/null
				geli detach "${provider}"
			fi
		done
	fi
}

load_rc_config $name
run_rc_command "$1"
