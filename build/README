# Part of NAS4Free (http://www.nas4free.org).
# Copyright (c) 2012-2018 The NAS4Free Project <info@nas4free.org>.
# All rights reserved.
#

============== SUMMARY =========

1. Files and directories listing
2. Generate an NAS4Free ISO or IMG  file
3. Building NAS4Free from the latest sources
4. Building the kernel

================================
1. Files and directories listing

- /nas4free/bootloader:  This contains the FreeBSD boot loader files
- /nas4free/rootfs: Minimum FreeBSD root filesystem and NAS4FREE script/WebGUI
- /nas4free/svn: Contains all released files and scripts

================================
2. Generate an NAS4Free ISO or IMG file

Copy make.conf to /etc.

#cp /nas4free/svn/build/make.conf /etc

Delete all ports built without make.conf.

#pkg delete -f \*

Edit the script '/nas4free/svn/build/make.sh' and adapt the directory
variables with your local ones.

Now install the following ports:

#cd /usr/ports/shells/bash
#make install clean

#cd /usr/ports/ports-mgmt/portupgrade
#make install clean

#cd /usr/ports/sysutils/cdrtools
#make install clean

#cd /usr/ports/devel/subversion
#make install clean

Start /nas4free/svn/build/make.sh and follow the steps.

=================================
3. Building NAS4Free from the latest sources (normally possible with make.sh)

Here is how to build NAS4Free from the latest sources:

- It's really important to use only root user-account on your FreeBSD installed development system!

3.1 Update your NAS4Free scripts/WebGUI code with the SVN:
(this creates the svn directory)

- cd /usr/local/nas4free
- svn co https://svn.code.sf.net/p/nas4free/code/trunk svn

You should now have these directories:
/usr/local/nas4free
/usr/local/nas4free/svn

3.2 Update your ports collection:

Using portsnap the first time:
portsnap fetch extract

To update the ports collection next time:
portsnap fetch update

3.3 Use the building script:

svn/build/make.sh

Execute all menus in '2' - Compile NAS4Free from Scratch' to compile your NAS4Free sources from scratch.
When all is done, use one of the following options:

10 - Create 'Embedded.img.xz' File. (Firmware Update)
11 - Create 'LiveUSB.img.gz' File. (Rawrite to USB Key)
12 - Create 'LiveCD' (ISO) File.
13 - Create 'LiveCD-Tin' (ISO) without 'Embedded' File.
14 - Create 'Full' (TGZ) Update File.

=================================
4. Building kernel

Before building the kernel it is recommended to delete the directory /usr/src completely.
Next, run the build scripts and update the kernel sources via subversion + freebsd-update.
Continue building using the 'Build kernel' menu in the build script.

Hint! 
  You can create a backup from the kernel source to revert them quickly.
  # cp -r /usr/src /usr/src.orig

(Kernel patches should be applied only once. Multiple times will fail (e.g. when using patch command by ./make.sh file.)
