--- endpoints/lib/vboxweb-5.0.wsdl	2016-05-19 14:34:22.000000000 +0200
+++ endpoints/lib/vboxweb-5.2.wsdl	2017-10-18 07:14:57.000000000 +0200
@@ -38,6 +38,8 @@
             v1_13: 15 -
             v1_14: 16 -
             v1_15: 17 -
+            v1_16: 18 -
+            v1_17: 19 -
             Future: 99999 -
             -->
       <xsd:simpleType name="SettingsVersion">
@@ -60,6 +62,8 @@
           <xsd:enumeration value="v1_13"/>
           <xsd:enumeration value="v1_14"/>
           <xsd:enumeration value="v1_15"/>
+          <xsd:enumeration value="v1_16"/>
+          <xsd:enumeration value="v1_17"/>
           <xsd:enumeration value="Future"/>
         </xsd:restriction>
       </xsd:simpleType>
@@ -156,6 +160,8 @@
             PAE: 1 -
             LongMode: 2 -
             TripleFaultReset: 3 -
+            APIC: 4 -
+            X2APIC: 5 -
             -->
       <xsd:simpleType name="CPUPropertyType">
         <xsd:restriction base="xsd:string">
@@ -163,6 +169,8 @@
           <xsd:enumeration value="PAE"/>
           <xsd:enumeration value="LongMode"/>
           <xsd:enumeration value="TripleFaultReset"/>
+          <xsd:enumeration value="APIC"/>
+          <xsd:enumeration value="X2APIC"/>
         </xsd:restriction>
       </xsd:simpleType>
       <!-- enum: HWVirtExPropertyType -
@@ -331,6 +339,18 @@
           <xsd:enumeration value="MessageAndMenu"/>
         </xsd:restriction>
       </xsd:simpleType>
+      <!-- enum: APICMode -
+            Disabled: 0 -
+            APIC: 1 -
+            X2APIC: 2 -
+            -->
+      <xsd:simpleType name="APICMode">
+        <xsd:restriction base="xsd:string">
+          <xsd:enumeration value="Disabled"/>
+          <xsd:enumeration value="APIC"/>
+          <xsd:enumeration value="X2APIC"/>
+        </xsd:restriction>
+      </xsd:simpleType>
       <!-- enum: ProcessorFeature -
             HWVirtEx: 0 -
             PAE: 1 -
@@ -595,6 +615,20 @@
           <xsd:enumeration value="StripAllNonNATMACs"/>
         </xsd:restriction>
       </xsd:simpleType>
+      <!-- enum: CertificateVersion -
+            V1: 1 -
+            V2: 2 -
+            V3: 3 -
+            Unknown: 99 -
+            -->
+      <xsd:simpleType name="CertificateVersion">
+        <xsd:restriction base="xsd:string">
+          <xsd:enumeration value="V1"/>
+          <xsd:enumeration value="V2"/>
+          <xsd:enumeration value="V3"/>
+          <xsd:enumeration value="Unknown"/>
+        </xsd:restriction>
+      </xsd:simpleType>
       <!-- enum: VirtualSystemDescriptionType -
             Ignore: 1 -
             OS: 2 -
@@ -773,6 +807,7 @@
             VBoxTrayClient: 101 -
             Seamless: 1000 -
             Graphics: 1100 -
+            MonitorAttach: 1101 -
             All: 2147483646 -
             -->
       <xsd:simpleType name="AdditionsFacilityType">
@@ -784,6 +819,7 @@
           <xsd:enumeration value="VBoxTrayClient"/>
           <xsd:enumeration value="Seamless"/>
           <xsd:enumeration value="Graphics"/>
+          <xsd:enumeration value="MonitorAttach"/>
           <xsd:enumeration value="All"/>
         </xsd:restriction>
       </xsd:simpleType>
@@ -1102,7 +1138,7 @@
             WaitForProcessStartOnly: 1 -
             IgnoreOrphanedProcesses: 2 -
             Hidden: 4 -
-            NoProfile: 8 -
+            Profile: 8 -
             WaitForStdOut: 16 -
             WaitForStdErr: 32 -
             ExpandArguments: 64 -
@@ -1114,7 +1150,7 @@
           <xsd:enumeration value="WaitForProcessStartOnly"/>
           <xsd:enumeration value="IgnoreOrphanedProcesses"/>
           <xsd:enumeration value="Hidden"/>
-          <xsd:enumeration value="NoProfile"/>
+          <xsd:enumeration value="Profile"/>
           <xsd:enumeration value="WaitForStdOut"/>
           <xsd:enumeration value="WaitForStdErr"/>
           <xsd:enumeration value="ExpandArguments"/>
@@ -1442,7 +1478,9 @@
             Properties: 0x80 -
             TcpNetworking: 0x100 -
             VFS: 0x200 -
-            CapabilityMask: 0x3FF -
+            Discard: 0x400 -
+            Preferred: 0x800 -
+            CapabilityMask: 0xFFF -
             -->
       <xsd:simpleType name="MediumFormatCapabilities">
         <xsd:restriction base="xsd:string">
@@ -1456,6 +1494,8 @@
           <xsd:enumeration value="Properties"/>
           <xsd:enumeration value="TcpNetworking"/>
           <xsd:enumeration value="VFS"/>
+          <xsd:enumeration value="Discard"/>
+          <xsd:enumeration value="Preferred"/>
           <xsd:enumeration value="CapabilityMask"/>
         </xsd:restriction>
       </xsd:simpleType>
@@ -1522,11 +1562,25 @@
       <!-- enum: GuestMonitorStatus -
             Disabled: 0 -
             Enabled: 1 -
+            Blank: 2 -
             -->
       <xsd:simpleType name="GuestMonitorStatus">
         <xsd:restriction base="xsd:string">
           <xsd:enumeration value="Disabled"/>
           <xsd:enumeration value="Enabled"/>
+          <xsd:enumeration value="Blank"/>
+        </xsd:restriction>
+      </xsd:simpleType>
+      <!-- enum: ScreenLayoutMode -
+            Apply: 0 -
+            Reset: 1 -
+            Attach: 2 -
+            -->
+      <xsd:simpleType name="ScreenLayoutMode">
+        <xsd:restriction base="xsd:string">
+          <xsd:enumeration value="Apply"/>
+          <xsd:enumeration value="Reset"/>
+          <xsd:enumeration value="Attach"/>
         </xsd:restriction>
       </xsd:simpleType>
       <!-- enum: NetworkAttachmentType -
@@ -1749,6 +1803,7 @@
             Floppy: 4 -
             SAS: 5 -
             USB: 6 -
+            PCIe: 7 -
             -->
       <xsd:simpleType name="StorageBus">
         <xsd:restriction base="xsd:string">
@@ -1759,6 +1814,7 @@
           <xsd:enumeration value="Floppy"/>
           <xsd:enumeration value="SAS"/>
           <xsd:enumeration value="USB"/>
+          <xsd:enumeration value="PCIe"/>
         </xsd:restriction>
       </xsd:simpleType>
       <!-- enum: StorageControllerType -
@@ -1772,6 +1828,7 @@
             I82078: 7 -
             LsiLogicSas: 8 -
             USB: 9 -
+            NVMe: 10 -
             -->
       <xsd:simpleType name="StorageControllerType">
         <xsd:restriction base="xsd:string">
@@ -1785,6 +1842,7 @@
           <xsd:enumeration value="I82078"/>
           <xsd:enumeration value="LsiLogicSas"/>
           <xsd:enumeration value="USB"/>
+          <xsd:enumeration value="NVMe"/>
         </xsd:restriction>
       </xsd:simpleType>
       <!-- enum: ChipsetType -
@@ -1906,7 +1964,10 @@
             OnHostNameResolutionConfigurationChange: 94 -
             OnSnapshotRestored: 95 -
             OnMediumConfigChanged: 96 -
-            Last: 97 -
+            OnAudioAdapterChanged: 97 -
+            OnProgressPercentageChanged: 98 -
+            OnProgressTaskCompleted: 99 -
+            Last: 100 -
             -->
       <xsd:simpleType name="VBoxEventType">
         <xsd:restriction base="xsd:string">
@@ -1982,6 +2043,9 @@
           <xsd:enumeration value="OnHostNameResolutionConfigurationChange"/>
           <xsd:enumeration value="OnSnapshotRestored"/>
           <xsd:enumeration value="OnMediumConfigChanged"/>
+          <xsd:enumeration value="OnAudioAdapterChanged"/>
+          <xsd:enumeration value="OnProgressPercentageChanged"/>
+          <xsd:enumeration value="OnProgressTaskCompleted"/>
           <xsd:enumeration value="Last"/>
         </xsd:restriction>
       </xsd:simpleType>
@@ -2072,7 +2136,9 @@
           <xsd:element name="recommendedAudioCodec" type="vbox:AudioCodecType"/>
           <xsd:element name="recommendedFloppy" type="xsd:boolean"/>
           <xsd:element name="recommendedUSB" type="xsd:boolean"/>
+          <xsd:element name="recommendedUSB3" type="xsd:boolean"/>
           <xsd:element name="recommendedTFReset" type="xsd:boolean"/>
+          <xsd:element name="recommendedX2APIC" type="xsd:boolean"/>
         </xsd:sequence>
       </xsd:complexType>
       <!-- interface IAdditionsFacility as struct: -->
@@ -3355,6 +3421,21 @@
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
+      <!-- method IVirtualBox::createUnattendedInstaller-->
+      <xsd:element name="IVirtualBox_createUnattendedInstaller">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVirtualBox_createUnattendedInstallerResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
       <!-- method IVirtualBox::createMedium-->
       <xsd:element name="IVirtualBox_createMedium">
         <xsd:complexType>
@@ -3738,17447 +3819,19114 @@
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IAppliance-->
-      <!-- readonly attribute IAppliance::path-->
-      <xsd:element name="IAppliance_getPath">
+      <!--Interface ICertificate-->
+      <!-- readonly attribute ICertificate::versionNumber-->
+      <xsd:element name="ICertificate_getVersionNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getPathResponse">
+      <xsd:element name="ICertificate_getVersionNumberResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:CertificateVersion"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IAppliance::disks-->
-      <xsd:element name="IAppliance_getDisks">
+      <!-- readonly attribute ICertificate::serialNumber-->
+      <xsd:element name="ICertificate_getSerialNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getDisksResponse">
+      <xsd:element name="ICertificate_getSerialNumberResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IAppliance::virtualSystemDescriptions-->
-      <xsd:element name="IAppliance_getVirtualSystemDescriptions">
+      <!-- readonly attribute ICertificate::signatureAlgorithmOID-->
+      <xsd:element name="ICertificate_getSignatureAlgorithmOID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getVirtualSystemDescriptionsResponse">
+      <xsd:element name="ICertificate_getSignatureAlgorithmOIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IAppliance::machines-->
-      <xsd:element name="IAppliance_getMachines">
+      <!-- readonly attribute ICertificate::signatureAlgorithmName-->
+      <xsd:element name="ICertificate_getSignatureAlgorithmName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getMachinesResponse">
+      <xsd:element name="ICertificate_getSignatureAlgorithmNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::read-->
-      <xsd:element name="IAppliance_read">
+      <!-- readonly attribute ICertificate::issuerName-->
+      <xsd:element name="ICertificate_getIssuerName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="file" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_readResponse">
+      <xsd:element name="ICertificate_getIssuerNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::interpret-->
-      <xsd:element name="IAppliance_interpret">
+      <!-- readonly attribute ICertificate::subjectName-->
+      <xsd:element name="ICertificate_getSubjectName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_interpretResponse">
+      <xsd:element name="ICertificate_getSubjectNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::importMachines-->
-      <xsd:element name="IAppliance_importMachines">
+      <!-- readonly attribute ICertificate::friendlyName-->
+      <xsd:element name="ICertificate_getFriendlyName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:ImportOptions"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_importMachinesResponse">
+      <xsd:element name="ICertificate_getFriendlyNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::createVFSExplorer-->
-      <xsd:element name="IAppliance_createVFSExplorer">
+      <!-- readonly attribute ICertificate::validityPeriodNotBefore-->
+      <xsd:element name="ICertificate_getValidityPeriodNotBefore">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="URI" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_createVFSExplorerResponse">
+      <xsd:element name="ICertificate_getValidityPeriodNotBeforeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::write-->
-      <xsd:element name="IAppliance_write">
+      <!-- readonly attribute ICertificate::validityPeriodNotAfter-->
+      <xsd:element name="ICertificate_getValidityPeriodNotAfter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="format" type="xsd:string"/>
-            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:ExportOptions"/>
-            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_writeResponse">
+      <xsd:element name="ICertificate_getValidityPeriodNotAfterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::getWarnings-->
-      <xsd:element name="IAppliance_getWarnings">
+      <!-- readonly attribute ICertificate::publicKeyAlgorithmOID-->
+      <xsd:element name="ICertificate_getPublicKeyAlgorithmOID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getWarningsResponse">
+      <xsd:element name="ICertificate_getPublicKeyAlgorithmOIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::getPasswordIds-->
-      <xsd:element name="IAppliance_getPasswordIds">
+      <!-- readonly attribute ICertificate::publicKeyAlgorithm-->
+      <xsd:element name="ICertificate_getPublicKeyAlgorithm">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getPasswordIdsResponse">
+      <xsd:element name="ICertificate_getPublicKeyAlgorithmResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::getMediumIdsForPasswordId-->
-      <xsd:element name="IAppliance_getMediumIdsForPasswordId">
+      <!-- readonly attribute ICertificate::subjectPublicKey-->
+      <xsd:element name="ICertificate_getSubjectPublicKey">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="passwordId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_getMediumIdsForPasswordIdResponse">
+      <xsd:element name="ICertificate_getSubjectPublicKeyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IAppliance::addPasswords-->
-      <xsd:element name="IAppliance_addPasswords">
+      <!-- readonly attribute ICertificate::issuerUniqueIdentifier-->
+      <xsd:element name="ICertificate_getIssuerUniqueIdentifier">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="identifiers" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="passwords" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAppliance_addPasswordsResponse">
+      <xsd:element name="ICertificate_getIssuerUniqueIdentifierResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVirtualSystemDescription-->
-      <!-- readonly attribute IVirtualSystemDescription::count-->
-      <xsd:element name="IVirtualSystemDescription_getCount">
+      <!-- readonly attribute ICertificate::subjectUniqueIdentifier-->
+      <xsd:element name="ICertificate_getSubjectUniqueIdentifier">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_getCountResponse">
+      <xsd:element name="ICertificate_getSubjectUniqueIdentifierResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVirtualSystemDescription::getDescription-->
-      <xsd:element name="IVirtualSystemDescription_getDescription">
+      <!-- readonly attribute ICertificate::certificateAuthority-->
+      <xsd:element name="ICertificate_getCertificateAuthority">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_getDescriptionResponse">
+      <xsd:element name="ICertificate_getCertificateAuthorityResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:VirtualSystemDescriptionType"/>
-            <xsd:element name="refs" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="OVFValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVirtualSystemDescription::getDescriptionByType-->
-      <xsd:element name="IVirtualSystemDescription_getDescriptionByType">
+      <!-- readonly attribute ICertificate::keyUsage-->
+      <xsd:element name="ICertificate_getKeyUsage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_getDescriptionByTypeResponse">
+      <xsd:element name="ICertificate_getKeyUsageResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:VirtualSystemDescriptionType"/>
-            <xsd:element name="refs" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="OVFValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVirtualSystemDescription::getValuesByType-->
-      <xsd:element name="IVirtualSystemDescription_getValuesByType">
+      <!-- readonly attribute ICertificate::extendedKeyUsage-->
+      <xsd:element name="ICertificate_getExtendedKeyUsage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
-            <xsd:element name="which" type="vbox:VirtualSystemDescriptionValueType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_getValuesByTypeResponse">
+      <xsd:element name="ICertificate_getExtendedKeyUsageResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVirtualSystemDescription::setFinalValues-->
-      <xsd:element name="IVirtualSystemDescription_setFinalValues">
+      <!-- readonly attribute ICertificate::rawCertData-->
+      <xsd:element name="ICertificate_getRawCertData">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
-            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_setFinalValuesResponse">
+      <xsd:element name="ICertificate_getRawCertDataResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVirtualSystemDescription::addDescription-->
-      <xsd:element name="IVirtualSystemDescription_addDescription">
+      <!-- readonly attribute ICertificate::selfSigned-->
+      <xsd:element name="ICertificate_getSelfSigned">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
-            <xsd:element name="VBoxValue" type="xsd:string"/>
-            <xsd:element name="extraConfigValue" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVirtualSystemDescription_addDescriptionResponse">
+      <xsd:element name="ICertificate_getSelfSignedResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IBIOSSettings-->
-      <!-- read/write attribute IBIOSSettings::logoFadeIn-->
-      <xsd:element name="IBIOSSettings_getLogoFadeIn">
+      <!-- readonly attribute ICertificate::trusted-->
+      <xsd:element name="ICertificate_getTrusted">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getLogoFadeInResponse">
+      <xsd:element name="ICertificate_getTrustedResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoFadeIn">
+      <!-- readonly attribute ICertificate::expired-->
+      <xsd:element name="ICertificate_getExpired">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logoFadeIn" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoFadeInResponse">
+      <xsd:element name="ICertificate_getExpiredResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::logoFadeOut-->
-      <xsd:element name="IBIOSSettings_getLogoFadeOut">
+      <!-- method ICertificate::isCurrentlyExpired-->
+      <xsd:element name="ICertificate_isCurrentlyExpired">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getLogoFadeOutResponse">
+      <xsd:element name="ICertificate_isCurrentlyExpiredResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoFadeOut">
+      <!-- method ICertificate::queryInfo-->
+      <xsd:element name="ICertificate_queryInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logoFadeOut" type="xsd:boolean"/>
+            <xsd:element name="what" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoFadeOutResponse">
+      <xsd:element name="ICertificate_queryInfoResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::logoDisplayTime-->
-      <xsd:element name="IBIOSSettings_getLogoDisplayTime">
+      <!--Interface IAppliance-->
+      <!-- readonly attribute IAppliance::path-->
+      <xsd:element name="IAppliance_getPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getLogoDisplayTimeResponse">
+      <xsd:element name="IAppliance_getPathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoDisplayTime">
+      <!-- readonly attribute IAppliance::disks-->
+      <xsd:element name="IAppliance_getDisks">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logoDisplayTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoDisplayTimeResponse">
+      <xsd:element name="IAppliance_getDisksResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::logoImagePath-->
-      <xsd:element name="IBIOSSettings_getLogoImagePath">
+      <!-- readonly attribute IAppliance::virtualSystemDescriptions-->
+      <xsd:element name="IAppliance_getVirtualSystemDescriptions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getLogoImagePathResponse">
+      <xsd:element name="IAppliance_getVirtualSystemDescriptionsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoImagePath">
+      <!-- readonly attribute IAppliance::machines-->
+      <xsd:element name="IAppliance_getMachines">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logoImagePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setLogoImagePathResponse">
+      <xsd:element name="IAppliance_getMachinesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::bootMenuMode-->
-      <xsd:element name="IBIOSSettings_getBootMenuMode">
+      <!-- readonly attribute IAppliance::certificate-->
+      <xsd:element name="IAppliance_getCertificate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getBootMenuModeResponse">
+      <xsd:element name="IAppliance_getCertificateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:BIOSBootMenuMode"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setBootMenuMode">
+      <!-- method IAppliance::read-->
+      <xsd:element name="IAppliance_read">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bootMenuMode" type="vbox:BIOSBootMenuMode"/>
+            <xsd:element name="file" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setBootMenuModeResponse">
+      <xsd:element name="IAppliance_readResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::ACPIEnabled-->
-      <xsd:element name="IBIOSSettings_getACPIEnabled">
+      <!-- method IAppliance::interpret-->
+      <xsd:element name="IAppliance_interpret">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getACPIEnabledResponse">
+      <xsd:element name="IAppliance_interpretResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setACPIEnabled">
+      <!-- method IAppliance::importMachines-->
+      <xsd:element name="IAppliance_importMachines">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="ACPIEnabled" type="xsd:boolean"/>
+            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:ImportOptions"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setACPIEnabledResponse">
+      <xsd:element name="IAppliance_importMachinesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::IOAPICEnabled-->
-      <xsd:element name="IBIOSSettings_getIOAPICEnabled">
+      <!-- method IAppliance::createVFSExplorer-->
+      <xsd:element name="IAppliance_createVFSExplorer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="URI" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getIOAPICEnabledResponse">
+      <xsd:element name="IAppliance_createVFSExplorerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setIOAPICEnabled">
+      <!-- method IAppliance::write-->
+      <xsd:element name="IAppliance_write">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IOAPICEnabled" type="xsd:boolean"/>
+            <xsd:element name="format" type="xsd:string"/>
+            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:ExportOptions"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setIOAPICEnabledResponse">
+      <xsd:element name="IAppliance_writeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::timeOffset-->
-      <xsd:element name="IBIOSSettings_getTimeOffset">
+      <!-- method IAppliance::getWarnings-->
+      <xsd:element name="IAppliance_getWarnings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getTimeOffsetResponse">
+      <xsd:element name="IAppliance_getWarningsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setTimeOffset">
+      <!-- method IAppliance::getPasswordIds-->
+      <xsd:element name="IAppliance_getPasswordIds">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="timeOffset" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setTimeOffsetResponse">
+      <xsd:element name="IAppliance_getPasswordIdsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBIOSSettings::PXEDebugEnabled-->
-      <xsd:element name="IBIOSSettings_getPXEDebugEnabled">
+      <!-- method IAppliance::getMediumIdsForPasswordId-->
+      <xsd:element name="IAppliance_getMediumIdsForPasswordId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="passwordId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getPXEDebugEnabledResponse">
+      <xsd:element name="IAppliance_getMediumIdsForPasswordIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setPXEDebugEnabled">
+      <!-- method IAppliance::addPasswords-->
+      <xsd:element name="IAppliance_addPasswords">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="PXEDebugEnabled" type="xsd:boolean"/>
+            <xsd:element name="identifiers" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="passwords" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_setPXEDebugEnabledResponse">
+      <xsd:element name="IAppliance_addPasswordsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IBIOSSettings::nonVolatileStorageFile-->
-      <xsd:element name="IBIOSSettings_getNonVolatileStorageFile">
+      <!--Interface IVirtualSystemDescription-->
+      <!-- readonly attribute IVirtualSystemDescription::count-->
+      <xsd:element name="IVirtualSystemDescription_getCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBIOSSettings_getNonVolatileStorageFileResponse">
+      <xsd:element name="IVirtualSystemDescription_getCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IPCIAddress-->
-      <!-- read/write attribute IPCIAddress::bus-->
-      <xsd:element name="IPCIAddress_getBus">
+      <!-- method IVirtualSystemDescription::getDescription-->
+      <xsd:element name="IVirtualSystemDescription_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_getBusResponse">
+      <xsd:element name="IVirtualSystemDescription_getDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:short"/>
+            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:VirtualSystemDescriptionType"/>
+            <xsd:element name="refs" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="OVFValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setBus">
+      <!-- method IVirtualSystemDescription::getDescriptionByType-->
+      <xsd:element name="IVirtualSystemDescription_getDescriptionByType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bus" type="xsd:short"/>
+            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setBusResponse">
+      <xsd:element name="IVirtualSystemDescription_getDescriptionByTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:VirtualSystemDescriptionType"/>
+            <xsd:element name="refs" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="OVFValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IPCIAddress::device-->
-      <xsd:element name="IPCIAddress_getDevice">
+      <!-- method IVirtualSystemDescription::getValuesByType-->
+      <xsd:element name="IVirtualSystemDescription_getValuesByType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
+            <xsd:element name="which" type="vbox:VirtualSystemDescriptionValueType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_getDeviceResponse">
+      <xsd:element name="IVirtualSystemDescription_getValuesByTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:short"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setDevice">
+      <!-- method IVirtualSystemDescription::setFinalValues-->
+      <xsd:element name="IVirtualSystemDescription_setFinalValues">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="device" type="xsd:short"/>
+            <xsd:element name="enabled" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
+            <xsd:element name="VBoxValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="extraConfigValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setDeviceResponse">
+      <xsd:element name="IVirtualSystemDescription_setFinalValuesResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IPCIAddress::devFunction-->
-      <xsd:element name="IPCIAddress_getDevFunction">
+      <!-- method IVirtualSystemDescription::addDescription-->
+      <xsd:element name="IVirtualSystemDescription_addDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:VirtualSystemDescriptionType"/>
+            <xsd:element name="VBoxValue" type="xsd:string"/>
+            <xsd:element name="extraConfigValue" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_getDevFunctionResponse">
+      <xsd:element name="IVirtualSystemDescription_addDescriptionResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:short"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setDevFunction">
+      <!--Interface IUnattended-->
+      <!-- read/write attribute IUnattended::isoPath-->
+      <xsd:element name="IUnattended_getIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="devFunction" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_setDevFunctionResponse">
+      <xsd:element name="IUnattended_getIsoPathResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPCIAddress::asLong-->
-      <xsd:element name="IPCIAddress_asLong">
+      <xsd:element name="IUnattended_setIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="isoPath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_asLongResponse">
+      <xsd:element name="IUnattended_setIsoPathResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPCIAddress::fromLong-->
-      <xsd:element name="IPCIAddress_fromLong">
+      <!-- read/write attribute IUnattended::machine-->
+      <xsd:element name="IUnattended_getMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="number" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPCIAddress_fromLongResponse">
+      <xsd:element name="IUnattended_getMachineResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachine-->
-      <!-- readonly attribute IMachine::parent-->
-      <xsd:element name="IMachine_getParent">
+      <xsd:element name="IUnattended_setMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="machine" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getParentResponse">
+      <xsd:element name="IUnattended_setMachineResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::icon-->
-      <xsd:element name="IMachine_getIcon">
+      <!-- read/write attribute IUnattended::user-->
+      <xsd:element name="IUnattended_getUser">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getIconResponse">
+      <xsd:element name="IUnattended_getUserResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIcon">
+      <xsd:element name="IUnattended_setUser">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="icon" type="xsd:string"/>
+            <xsd:element name="user" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIconResponse">
+      <xsd:element name="IUnattended_setUserResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::accessible-->
-      <xsd:element name="IMachine_getAccessible">
+      <!-- read/write attribute IUnattended::password-->
+      <xsd:element name="IUnattended_getPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAccessibleResponse">
+      <xsd:element name="IUnattended_getPasswordResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::accessError-->
-      <xsd:element name="IMachine_getAccessError">
+      <xsd:element name="IUnattended_setPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="password" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAccessErrorResponse">
+      <xsd:element name="IUnattended_setPasswordResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::name-->
-      <xsd:element name="IMachine_getName">
+      <!-- read/write attribute IUnattended::fullUserName-->
+      <xsd:element name="IUnattended_getFullUserName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getNameResponse">
+      <xsd:element name="IUnattended_getFullUserNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setName">
+      <xsd:element name="IUnattended_setFullUserName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="fullUserName" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setNameResponse">
+      <xsd:element name="IUnattended_setFullUserNameResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::description-->
-      <xsd:element name="IMachine_getDescription">
+      <!-- read/write attribute IUnattended::productKey-->
+      <xsd:element name="IUnattended_getProductKey">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getDescriptionResponse">
+      <xsd:element name="IUnattended_getProductKeyResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDescription">
+      <xsd:element name="IUnattended_setProductKey">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="description" type="xsd:string"/>
+            <xsd:element name="productKey" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDescriptionResponse">
+      <xsd:element name="IUnattended_setProductKeyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::id-->
-      <xsd:element name="IMachine_getId">
+      <!-- read/write attribute IUnattended::additionsIsoPath-->
+      <xsd:element name="IUnattended_getAdditionsIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getIdResponse">
+      <xsd:element name="IUnattended_getAdditionsIsoPathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::groups-->
-      <xsd:element name="IMachine_getGroups">
+      <xsd:element name="IUnattended_setAdditionsIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="additionsIsoPath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getGroupsResponse">
+      <xsd:element name="IUnattended_setAdditionsIsoPathResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute IUnattended::installGuestAdditions-->
+      <xsd:element name="IUnattended_getInstallGuestAdditions">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGroups">
+      <xsd:element name="IUnattended_getInstallGuestAdditionsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IUnattended_setInstallGuestAdditions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="groups" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="installGuestAdditions" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGroupsResponse">
+      <xsd:element name="IUnattended_setInstallGuestAdditionsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::OSTypeId-->
-      <xsd:element name="IMachine_getOSTypeId">
+      <!-- read/write attribute IUnattended::validationKitIsoPath-->
+      <xsd:element name="IUnattended_getValidationKitIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getOSTypeIdResponse">
+      <xsd:element name="IUnattended_getValidationKitIsoPathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setOSTypeId">
+      <xsd:element name="IUnattended_setValidationKitIsoPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="OSTypeId" type="xsd:string"/>
+            <xsd:element name="validationKitIsoPath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setOSTypeIdResponse">
+      <xsd:element name="IUnattended_setValidationKitIsoPathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::hardwareVersion-->
-      <xsd:element name="IMachine_getHardwareVersion">
+      <!-- read/write attribute IUnattended::installTestExecService-->
+      <xsd:element name="IUnattended_getInstallTestExecService">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getHardwareVersionResponse">
+      <xsd:element name="IUnattended_getInstallTestExecServiceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHardwareVersion">
+      <xsd:element name="IUnattended_setInstallTestExecService">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hardwareVersion" type="xsd:string"/>
+            <xsd:element name="installTestExecService" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHardwareVersionResponse">
+      <xsd:element name="IUnattended_setInstallTestExecServiceResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::hardwareUUID-->
-      <xsd:element name="IMachine_getHardwareUUID">
+      <!-- read/write attribute IUnattended::timeZone-->
+      <xsd:element name="IUnattended_getTimeZone">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getHardwareUUIDResponse">
+      <xsd:element name="IUnattended_getTimeZoneResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHardwareUUID">
+      <xsd:element name="IUnattended_setTimeZone">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hardwareUUID" type="xsd:string"/>
+            <xsd:element name="timeZone" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHardwareUUIDResponse">
+      <xsd:element name="IUnattended_setTimeZoneResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::CPUCount-->
-      <xsd:element name="IMachine_getCPUCount">
+      <!-- read/write attribute IUnattended::locale-->
+      <xsd:element name="IUnattended_getLocale">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUCountResponse">
+      <xsd:element name="IUnattended_getLocaleResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUCount">
+      <xsd:element name="IUnattended_setLocale">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="CPUCount" type="xsd:unsignedInt"/>
+            <xsd:element name="locale" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUCountResponse">
+      <xsd:element name="IUnattended_setLocaleResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::CPUHotPlugEnabled-->
-      <xsd:element name="IMachine_getCPUHotPlugEnabled">
+      <!-- read/write attribute IUnattended::language-->
+      <xsd:element name="IUnattended_getLanguage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUHotPlugEnabledResponse">
+      <xsd:element name="IUnattended_getLanguageResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUHotPlugEnabled">
+      <xsd:element name="IUnattended_setLanguage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="CPUHotPlugEnabled" type="xsd:boolean"/>
+            <xsd:element name="language" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUHotPlugEnabledResponse">
+      <xsd:element name="IUnattended_setLanguageResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::CPUExecutionCap-->
-      <xsd:element name="IMachine_getCPUExecutionCap">
+      <!-- read/write attribute IUnattended::country-->
+      <xsd:element name="IUnattended_getCountry">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUExecutionCapResponse">
+      <xsd:element name="IUnattended_getCountryResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUExecutionCap">
+      <xsd:element name="IUnattended_setCountry">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="CPUExecutionCap" type="xsd:unsignedInt"/>
+            <xsd:element name="country" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUExecutionCapResponse">
+      <xsd:element name="IUnattended_setCountryResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::CPUIDPortabilityLevel-->
-      <xsd:element name="IMachine_getCPUIDPortabilityLevel">
+      <!-- read/write attribute IUnattended::proxy-->
+      <xsd:element name="IUnattended_getProxy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUIDPortabilityLevelResponse">
+      <xsd:element name="IUnattended_getProxyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUIDPortabilityLevel">
+      <xsd:element name="IUnattended_setProxy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="CPUIDPortabilityLevel" type="xsd:unsignedInt"/>
+            <xsd:element name="proxy" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUIDPortabilityLevelResponse">
+      <xsd:element name="IUnattended_setProxyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::memorySize-->
-      <xsd:element name="IMachine_getMemorySize">
+      <!-- read/write attribute IUnattended::packageSelectionAdjustments-->
+      <xsd:element name="IUnattended_getPackageSelectionAdjustments">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMemorySizeResponse">
+      <xsd:element name="IUnattended_getPackageSelectionAdjustmentsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMemorySize">
+      <xsd:element name="IUnattended_setPackageSelectionAdjustments">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="memorySize" type="xsd:unsignedInt"/>
+            <xsd:element name="packageSelectionAdjustments" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMemorySizeResponse">
+      <xsd:element name="IUnattended_setPackageSelectionAdjustmentsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::memoryBalloonSize-->
-      <xsd:element name="IMachine_getMemoryBalloonSize">
+      <!-- read/write attribute IUnattended::hostname-->
+      <xsd:element name="IUnattended_getHostname">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMemoryBalloonSizeResponse">
+      <xsd:element name="IUnattended_getHostnameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMemoryBalloonSize">
+      <xsd:element name="IUnattended_setHostname">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="memoryBalloonSize" type="xsd:unsignedInt"/>
+            <xsd:element name="hostname" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMemoryBalloonSizeResponse">
+      <xsd:element name="IUnattended_setHostnameResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::pageFusionEnabled-->
-      <xsd:element name="IMachine_getPageFusionEnabled">
+      <!-- read/write attribute IUnattended::auxiliaryBasePath-->
+      <xsd:element name="IUnattended_getAuxiliaryBasePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getPageFusionEnabledResponse">
+      <xsd:element name="IUnattended_getAuxiliaryBasePathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setPageFusionEnabled">
+      <xsd:element name="IUnattended_setAuxiliaryBasePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pageFusionEnabled" type="xsd:boolean"/>
+            <xsd:element name="auxiliaryBasePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setPageFusionEnabledResponse">
+      <xsd:element name="IUnattended_setAuxiliaryBasePathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::graphicsControllerType-->
-      <xsd:element name="IMachine_getGraphicsControllerType">
+      <!-- read/write attribute IUnattended::imageIndex-->
+      <xsd:element name="IUnattended_getImageIndex">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getGraphicsControllerTypeResponse">
+      <xsd:element name="IUnattended_getImageIndexResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GraphicsControllerType"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGraphicsControllerType">
+      <xsd:element name="IUnattended_setImageIndex">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="graphicsControllerType" type="vbox:GraphicsControllerType"/>
+            <xsd:element name="imageIndex" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGraphicsControllerTypeResponse">
+      <xsd:element name="IUnattended_setImageIndexResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::VRAMSize-->
-      <xsd:element name="IMachine_getVRAMSize">
+      <!-- read/write attribute IUnattended::scriptTemplatePath-->
+      <xsd:element name="IUnattended_getScriptTemplatePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVRAMSizeResponse">
+      <xsd:element name="IUnattended_getScriptTemplatePathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVRAMSize">
+      <xsd:element name="IUnattended_setScriptTemplatePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="VRAMSize" type="xsd:unsignedInt"/>
+            <xsd:element name="scriptTemplatePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVRAMSizeResponse">
+      <xsd:element name="IUnattended_setScriptTemplatePathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::accelerate3DEnabled-->
-      <xsd:element name="IMachine_getAccelerate3DEnabled">
+      <!-- read/write attribute IUnattended::postInstallScriptTemplatePath-->
+      <xsd:element name="IUnattended_getPostInstallScriptTemplatePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAccelerate3DEnabledResponse">
+      <xsd:element name="IUnattended_getPostInstallScriptTemplatePathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAccelerate3DEnabled">
+      <xsd:element name="IUnattended_setPostInstallScriptTemplatePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="accelerate3DEnabled" type="xsd:boolean"/>
+            <xsd:element name="postInstallScriptTemplatePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAccelerate3DEnabledResponse">
+      <xsd:element name="IUnattended_setPostInstallScriptTemplatePathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::accelerate2DVideoEnabled-->
-      <xsd:element name="IMachine_getAccelerate2DVideoEnabled">
+      <!-- read/write attribute IUnattended::postInstallCommand-->
+      <xsd:element name="IUnattended_getPostInstallCommand">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAccelerate2DVideoEnabledResponse">
+      <xsd:element name="IUnattended_getPostInstallCommandResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAccelerate2DVideoEnabled">
+      <xsd:element name="IUnattended_setPostInstallCommand">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="accelerate2DVideoEnabled" type="xsd:boolean"/>
+            <xsd:element name="postInstallCommand" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAccelerate2DVideoEnabledResponse">
+      <xsd:element name="IUnattended_setPostInstallCommandResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::monitorCount-->
-      <xsd:element name="IMachine_getMonitorCount">
+      <!-- read/write attribute IUnattended::extraInstallKernelParameters-->
+      <xsd:element name="IUnattended_getExtraInstallKernelParameters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMonitorCountResponse">
+      <xsd:element name="IUnattended_getExtraInstallKernelParametersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMonitorCount">
+      <xsd:element name="IUnattended_setExtraInstallKernelParameters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="monitorCount" type="xsd:unsignedInt"/>
+            <xsd:element name="extraInstallKernelParameters" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setMonitorCountResponse">
+      <xsd:element name="IUnattended_setExtraInstallKernelParametersResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureEnabled-->
-      <xsd:element name="IMachine_getVideoCaptureEnabled">
+      <!-- readonly attribute IUnattended::detectedOSTypeId-->
+      <xsd:element name="IUnattended_getDetectedOSTypeId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureEnabledResponse">
+      <xsd:element name="IUnattended_getDetectedOSTypeIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureEnabled">
+      <!-- readonly attribute IUnattended::detectedOSVersion-->
+      <xsd:element name="IUnattended_getDetectedOSVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureEnabledResponse">
+      <xsd:element name="IUnattended_getDetectedOSVersionResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureScreens-->
-      <xsd:element name="IMachine_getVideoCaptureScreens">
+      <!-- readonly attribute IUnattended::detectedOSFlavor-->
+      <xsd:element name="IUnattended_getDetectedOSFlavor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureScreensResponse">
+      <xsd:element name="IUnattended_getDetectedOSFlavorResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureScreens">
+      <!-- readonly attribute IUnattended::detectedOSLanguages-->
+      <xsd:element name="IUnattended_getDetectedOSLanguages">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureScreens" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureScreensResponse">
+      <xsd:element name="IUnattended_getDetectedOSLanguagesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureFile-->
-      <xsd:element name="IMachine_getVideoCaptureFile">
+      <!-- readonly attribute IUnattended::detectedOSHints-->
+      <xsd:element name="IUnattended_getDetectedOSHints">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureFileResponse">
+      <xsd:element name="IUnattended_getDetectedOSHintsResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureFile">
+      <!-- method IUnattended::detectIsoOS-->
+      <xsd:element name="IUnattended_detectIsoOS">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureFileResponse">
+      <xsd:element name="IUnattended_detectIsoOSResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureWidth-->
-      <xsd:element name="IMachine_getVideoCaptureWidth">
+      <!-- method IUnattended::prepare-->
+      <xsd:element name="IUnattended_prepare">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureWidthResponse">
+      <xsd:element name="IUnattended_prepareResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureWidth">
+      <!-- method IUnattended::constructMedia-->
+      <xsd:element name="IUnattended_constructMedia">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureWidth" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureWidthResponse">
+      <xsd:element name="IUnattended_constructMediaResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureHeight-->
-      <xsd:element name="IMachine_getVideoCaptureHeight">
+      <!-- method IUnattended::reconfigureVM-->
+      <xsd:element name="IUnattended_reconfigureVM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureHeightResponse">
+      <xsd:element name="IUnattended_reconfigureVMResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureHeight">
+      <!-- method IUnattended::done-->
+      <xsd:element name="IUnattended_done">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureHeight" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureHeightResponse">
+      <xsd:element name="IUnattended_doneResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureRate-->
-      <xsd:element name="IMachine_getVideoCaptureRate">
+      <!--Interface IBIOSSettings-->
+      <!-- read/write attribute IBIOSSettings::logoFadeIn-->
+      <xsd:element name="IBIOSSettings_getLogoFadeIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureRateResponse">
+      <xsd:element name="IBIOSSettings_getLogoFadeInResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureRate">
+      <xsd:element name="IBIOSSettings_setLogoFadeIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureRate" type="xsd:unsignedInt"/>
+            <xsd:element name="logoFadeIn" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureRateResponse">
+      <xsd:element name="IBIOSSettings_setLogoFadeInResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureFPS-->
-      <xsd:element name="IMachine_getVideoCaptureFPS">
+      <!-- read/write attribute IBIOSSettings::logoFadeOut-->
+      <xsd:element name="IBIOSSettings_getLogoFadeOut">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureFPSResponse">
+      <xsd:element name="IBIOSSettings_getLogoFadeOutResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureFPS">
+      <xsd:element name="IBIOSSettings_setLogoFadeOut">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureFPS" type="xsd:unsignedInt"/>
+            <xsd:element name="logoFadeOut" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureFPSResponse">
+      <xsd:element name="IBIOSSettings_setLogoFadeOutResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureMaxTime-->
-      <xsd:element name="IMachine_getVideoCaptureMaxTime">
+      <!-- read/write attribute IBIOSSettings::logoDisplayTime-->
+      <xsd:element name="IBIOSSettings_getLogoDisplayTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureMaxTimeResponse">
+      <xsd:element name="IBIOSSettings_getLogoDisplayTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureMaxTime">
+      <xsd:element name="IBIOSSettings_setLogoDisplayTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureMaxTime" type="xsd:unsignedInt"/>
+            <xsd:element name="logoDisplayTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureMaxTimeResponse">
+      <xsd:element name="IBIOSSettings_setLogoDisplayTimeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureMaxFileSize-->
-      <xsd:element name="IMachine_getVideoCaptureMaxFileSize">
+      <!-- read/write attribute IBIOSSettings::logoImagePath-->
+      <xsd:element name="IBIOSSettings_getLogoImagePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureMaxFileSizeResponse">
+      <xsd:element name="IBIOSSettings_getLogoImagePathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureMaxFileSize">
+      <xsd:element name="IBIOSSettings_setLogoImagePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureMaxFileSize" type="xsd:unsignedInt"/>
+            <xsd:element name="logoImagePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureMaxFileSizeResponse">
+      <xsd:element name="IBIOSSettings_setLogoImagePathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::videoCaptureOptions-->
-      <xsd:element name="IMachine_getVideoCaptureOptions">
+      <!-- read/write attribute IBIOSSettings::bootMenuMode-->
+      <xsd:element name="IBIOSSettings_getBootMenuMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVideoCaptureOptionsResponse">
+      <xsd:element name="IBIOSSettings_getBootMenuModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:BIOSBootMenuMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureOptions">
+      <xsd:element name="IBIOSSettings_setBootMenuMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="videoCaptureOptions" type="xsd:string"/>
+            <xsd:element name="bootMenuMode" type="vbox:BIOSBootMenuMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVideoCaptureOptionsResponse">
+      <xsd:element name="IBIOSSettings_setBootMenuModeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::BIOSSettings-->
-      <xsd:element name="IMachine_getBIOSSettings">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <xsd:element name="IMachine_getBIOSSettingsResponse">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute IMachine::firmwareType-->
-      <xsd:element name="IMachine_getFirmwareType">
+      <!-- read/write attribute IBIOSSettings::ACPIEnabled-->
+      <xsd:element name="IBIOSSettings_getACPIEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFirmwareTypeResponse">
+      <xsd:element name="IBIOSSettings_getACPIEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FirmwareType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFirmwareType">
+      <xsd:element name="IBIOSSettings_setACPIEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="firmwareType" type="vbox:FirmwareType"/>
+            <xsd:element name="ACPIEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFirmwareTypeResponse">
+      <xsd:element name="IBIOSSettings_setACPIEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::pointingHIDType-->
-      <xsd:element name="IMachine_getPointingHIDType">
+      <!-- read/write attribute IBIOSSettings::IOAPICEnabled-->
+      <xsd:element name="IBIOSSettings_getIOAPICEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getPointingHIDTypeResponse">
+      <xsd:element name="IBIOSSettings_getIOAPICEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:PointingHIDType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setPointingHIDType">
+      <xsd:element name="IBIOSSettings_setIOAPICEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pointingHIDType" type="vbox:PointingHIDType"/>
+            <xsd:element name="IOAPICEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setPointingHIDTypeResponse">
+      <xsd:element name="IBIOSSettings_setIOAPICEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::keyboardHIDType-->
-      <xsd:element name="IMachine_getKeyboardHIDType">
+      <!-- read/write attribute IBIOSSettings::APICMode-->
+      <xsd:element name="IBIOSSettings_getAPICMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getKeyboardHIDTypeResponse">
+      <xsd:element name="IBIOSSettings_getAPICModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:KeyboardHIDType"/>
+            <xsd:element name="returnval" type="vbox:APICMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setKeyboardHIDType">
+      <xsd:element name="IBIOSSettings_setAPICMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="keyboardHIDType" type="vbox:KeyboardHIDType"/>
+            <xsd:element name="APICMode" type="vbox:APICMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setKeyboardHIDTypeResponse">
+      <xsd:element name="IBIOSSettings_setAPICModeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::HPETEnabled-->
-      <xsd:element name="IMachine_getHPETEnabled">
+      <!-- read/write attribute IBIOSSettings::timeOffset-->
+      <xsd:element name="IBIOSSettings_getTimeOffset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getHPETEnabledResponse">
+      <xsd:element name="IBIOSSettings_getTimeOffsetResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHPETEnabled">
+      <xsd:element name="IBIOSSettings_setTimeOffset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="HPETEnabled" type="xsd:boolean"/>
+            <xsd:element name="timeOffset" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHPETEnabledResponse">
+      <xsd:element name="IBIOSSettings_setTimeOffsetResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::chipsetType-->
-      <xsd:element name="IMachine_getChipsetType">
+      <!-- read/write attribute IBIOSSettings::PXEDebugEnabled-->
+      <xsd:element name="IBIOSSettings_getPXEDebugEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getChipsetTypeResponse">
+      <xsd:element name="IBIOSSettings_getPXEDebugEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ChipsetType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setChipsetType">
+      <xsd:element name="IBIOSSettings_setPXEDebugEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="chipsetType" type="vbox:ChipsetType"/>
+            <xsd:element name="PXEDebugEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setChipsetTypeResponse">
+      <xsd:element name="IBIOSSettings_setPXEDebugEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::snapshotFolder-->
-      <xsd:element name="IMachine_getSnapshotFolder">
+      <!-- readonly attribute IBIOSSettings::nonVolatileStorageFile-->
+      <xsd:element name="IBIOSSettings_getNonVolatileStorageFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSnapshotFolderResponse">
+      <xsd:element name="IBIOSSettings_getNonVolatileStorageFileResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setSnapshotFolder">
+      <!--Interface IPCIAddress-->
+      <!-- read/write attribute IPCIAddress::bus-->
+      <xsd:element name="IPCIAddress_getBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="snapshotFolder" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setSnapshotFolderResponse">
+      <xsd:element name="IPCIAddress_getBusResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:short"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::VRDEServer-->
-      <xsd:element name="IMachine_getVRDEServer">
+      <xsd:element name="IPCIAddress_setBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="bus" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVRDEServerResponse">
+      <xsd:element name="IPCIAddress_setBusResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::emulatedUSBCardReaderEnabled-->
-      <xsd:element name="IMachine_getEmulatedUSBCardReaderEnabled">
+      <!-- read/write attribute IPCIAddress::device-->
+      <xsd:element name="IPCIAddress_getDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getEmulatedUSBCardReaderEnabledResponse">
+      <xsd:element name="IPCIAddress_getDeviceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setEmulatedUSBCardReaderEnabled">
+      <xsd:element name="IPCIAddress_setDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="emulatedUSBCardReaderEnabled" type="xsd:boolean"/>
+            <xsd:element name="device" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setEmulatedUSBCardReaderEnabledResponse">
+      <xsd:element name="IPCIAddress_setDeviceResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::mediumAttachments-->
-      <xsd:element name="IMachine_getMediumAttachments">
+      <!-- read/write attribute IPCIAddress::devFunction-->
+      <xsd:element name="IPCIAddress_getDevFunction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMediumAttachmentsResponse">
+      <xsd:element name="IPCIAddress_getDevFunctionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IMediumAttachment"/>
+            <xsd:element name="returnval" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::USBControllers-->
-      <xsd:element name="IMachine_getUSBControllers">
+      <xsd:element name="IPCIAddress_setDevFunction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="devFunction" type="xsd:short"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getUSBControllersResponse">
+      <xsd:element name="IPCIAddress_setDevFunctionResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::USBDeviceFilters-->
-      <xsd:element name="IMachine_getUSBDeviceFilters">
+      <!-- method IPCIAddress::asLong-->
+      <xsd:element name="IPCIAddress_asLong">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getUSBDeviceFiltersResponse">
+      <xsd:element name="IPCIAddress_asLongResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::audioAdapter-->
-      <xsd:element name="IMachine_getAudioAdapter">
+      <!-- method IPCIAddress::fromLong-->
+      <xsd:element name="IPCIAddress_fromLong">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="number" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAudioAdapterResponse">
+      <xsd:element name="IPCIAddress_fromLongResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::storageControllers-->
-      <xsd:element name="IMachine_getStorageControllers">
+      <!--Interface IMachine-->
+      <!-- readonly attribute IMachine::parent-->
+      <xsd:element name="IMachine_getParent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getStorageControllersResponse">
+      <xsd:element name="IMachine_getParentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::settingsFilePath-->
-      <xsd:element name="IMachine_getSettingsFilePath">
+      <!-- read/write attribute IMachine::icon-->
+      <xsd:element name="IMachine_getIcon">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSettingsFilePathResponse">
+      <xsd:element name="IMachine_getIconResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::settingsModified-->
-      <xsd:element name="IMachine_getSettingsModified">
+      <xsd:element name="IMachine_setIcon">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="icon" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSettingsModifiedResponse">
+      <xsd:element name="IMachine_setIconResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::sessionState-->
-      <xsd:element name="IMachine_getSessionState">
+      <!-- readonly attribute IMachine::accessible-->
+      <xsd:element name="IMachine_getAccessible">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSessionStateResponse">
+      <xsd:element name="IMachine_getAccessibleResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:SessionState"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::sessionName-->
-      <xsd:element name="IMachine_getSessionName">
+      <!-- readonly attribute IMachine::accessError-->
+      <xsd:element name="IMachine_getAccessError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSessionNameResponse">
+      <xsd:element name="IMachine_getAccessErrorResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::sessionPID-->
-      <xsd:element name="IMachine_getSessionPID">
+      <!-- read/write attribute IMachine::name-->
+      <xsd:element name="IMachine_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSessionPIDResponse">
+      <xsd:element name="IMachine_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::state-->
-      <xsd:element name="IMachine_getState">
+      <xsd:element name="IMachine_setName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getStateResponse">
+      <xsd:element name="IMachine_setNameResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MachineState"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::lastStateChange-->
-      <xsd:element name="IMachine_getLastStateChange">
+      <!-- read/write attribute IMachine::description-->
+      <xsd:element name="IMachine_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getLastStateChangeResponse">
+      <xsd:element name="IMachine_getDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::stateFilePath-->
-      <xsd:element name="IMachine_getStateFilePath">
+      <xsd:element name="IMachine_setDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="description" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getStateFilePathResponse">
+      <xsd:element name="IMachine_setDescriptionResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::logFolder-->
-      <xsd:element name="IMachine_getLogFolder">
+      <!-- readonly attribute IMachine::id-->
+      <xsd:element name="IMachine_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getLogFolderResponse">
+      <xsd:element name="IMachine_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::currentSnapshot-->
-      <xsd:element name="IMachine_getCurrentSnapshot">
+      <!-- read/write attribute IMachine::groups-->
+      <xsd:element name="IMachine_getGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCurrentSnapshotResponse">
+      <xsd:element name="IMachine_getGroupsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::snapshotCount-->
-      <xsd:element name="IMachine_getSnapshotCount">
+      <xsd:element name="IMachine_setGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="groups" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSnapshotCountResponse">
+      <xsd:element name="IMachine_setGroupsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::currentStateModified-->
-      <xsd:element name="IMachine_getCurrentStateModified">
+      <!-- read/write attribute IMachine::OSTypeId-->
+      <xsd:element name="IMachine_getOSTypeId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCurrentStateModifiedResponse">
+      <xsd:element name="IMachine_getOSTypeIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::sharedFolders-->
-      <xsd:element name="IMachine_getSharedFolders">
+      <xsd:element name="IMachine_setOSTypeId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="OSTypeId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSharedFoldersResponse">
+      <xsd:element name="IMachine_setOSTypeIdResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:ISharedFolder"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::clipboardMode-->
-      <xsd:element name="IMachine_getClipboardMode">
+      <!-- read/write attribute IMachine::hardwareVersion-->
+      <xsd:element name="IMachine_getHardwareVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getClipboardModeResponse">
+      <xsd:element name="IMachine_getHardwareVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ClipboardMode"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setClipboardMode">
+      <xsd:element name="IMachine_setHardwareVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="clipboardMode" type="vbox:ClipboardMode"/>
+            <xsd:element name="hardwareVersion" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setClipboardModeResponse">
+      <xsd:element name="IMachine_setHardwareVersionResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::dnDMode-->
-      <xsd:element name="IMachine_getDnDMode">
+      <!-- read/write attribute IMachine::hardwareUUID-->
+      <xsd:element name="IMachine_getHardwareUUID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getDnDModeResponse">
+      <xsd:element name="IMachine_getHardwareUUIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DnDMode"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDnDMode">
+      <xsd:element name="IMachine_setHardwareUUID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="dnDMode" type="vbox:DnDMode"/>
+            <xsd:element name="hardwareUUID" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDnDModeResponse">
+      <xsd:element name="IMachine_setHardwareUUIDResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::teleporterEnabled-->
-      <xsd:element name="IMachine_getTeleporterEnabled">
+      <!-- read/write attribute IMachine::CPUCount-->
+      <xsd:element name="IMachine_getCPUCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTeleporterEnabledResponse">
+      <xsd:element name="IMachine_getCPUCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterEnabled">
+      <xsd:element name="IMachine_setCPUCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="teleporterEnabled" type="xsd:boolean"/>
+            <xsd:element name="CPUCount" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterEnabledResponse">
+      <xsd:element name="IMachine_setCPUCountResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::teleporterPort-->
-      <xsd:element name="IMachine_getTeleporterPort">
+      <!-- read/write attribute IMachine::CPUHotPlugEnabled-->
+      <xsd:element name="IMachine_getCPUHotPlugEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTeleporterPortResponse">
+      <xsd:element name="IMachine_getCPUHotPlugEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterPort">
+      <xsd:element name="IMachine_setCPUHotPlugEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="teleporterPort" type="xsd:unsignedInt"/>
+            <xsd:element name="CPUHotPlugEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterPortResponse">
+      <xsd:element name="IMachine_setCPUHotPlugEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::teleporterAddress-->
-      <xsd:element name="IMachine_getTeleporterAddress">
+      <!-- read/write attribute IMachine::CPUExecutionCap-->
+      <xsd:element name="IMachine_getCPUExecutionCap">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTeleporterAddressResponse">
+      <xsd:element name="IMachine_getCPUExecutionCapResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterAddress">
+      <xsd:element name="IMachine_setCPUExecutionCap">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="teleporterAddress" type="xsd:string"/>
+            <xsd:element name="CPUExecutionCap" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterAddressResponse">
+      <xsd:element name="IMachine_setCPUExecutionCapResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::teleporterPassword-->
-      <xsd:element name="IMachine_getTeleporterPassword">
+      <!-- read/write attribute IMachine::CPUIDPortabilityLevel-->
+      <xsd:element name="IMachine_getCPUIDPortabilityLevel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTeleporterPasswordResponse">
+      <xsd:element name="IMachine_getCPUIDPortabilityLevelResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterPassword">
+      <xsd:element name="IMachine_setCPUIDPortabilityLevel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="teleporterPassword" type="xsd:string"/>
+            <xsd:element name="CPUIDPortabilityLevel" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTeleporterPasswordResponse">
+      <xsd:element name="IMachine_setCPUIDPortabilityLevelResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::paravirtProvider-->
-      <xsd:element name="IMachine_getParavirtProvider">
+      <!-- read/write attribute IMachine::memorySize-->
+      <xsd:element name="IMachine_getMemorySize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getParavirtProviderResponse">
+      <xsd:element name="IMachine_getMemorySizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ParavirtProvider"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setParavirtProvider">
+      <xsd:element name="IMachine_setMemorySize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="paravirtProvider" type="vbox:ParavirtProvider"/>
+            <xsd:element name="memorySize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setParavirtProviderResponse">
+      <xsd:element name="IMachine_setMemorySizeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::faultToleranceState-->
-      <xsd:element name="IMachine_getFaultToleranceState">
+      <!-- read/write attribute IMachine::memoryBalloonSize-->
+      <xsd:element name="IMachine_getMemoryBalloonSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFaultToleranceStateResponse">
+      <xsd:element name="IMachine_getMemoryBalloonSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FaultToleranceState"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceState">
+      <xsd:element name="IMachine_setMemoryBalloonSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="faultToleranceState" type="vbox:FaultToleranceState"/>
+            <xsd:element name="memoryBalloonSize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceStateResponse">
+      <xsd:element name="IMachine_setMemoryBalloonSizeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::faultTolerancePort-->
-      <xsd:element name="IMachine_getFaultTolerancePort">
+      <!-- read/write attribute IMachine::pageFusionEnabled-->
+      <xsd:element name="IMachine_getPageFusionEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFaultTolerancePortResponse">
+      <xsd:element name="IMachine_getPageFusionEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultTolerancePort">
+      <xsd:element name="IMachine_setPageFusionEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="faultTolerancePort" type="xsd:unsignedInt"/>
+            <xsd:element name="pageFusionEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultTolerancePortResponse">
+      <xsd:element name="IMachine_setPageFusionEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::faultToleranceAddress-->
-      <xsd:element name="IMachine_getFaultToleranceAddress">
+      <!-- read/write attribute IMachine::graphicsControllerType-->
+      <xsd:element name="IMachine_getGraphicsControllerType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFaultToleranceAddressResponse">
+      <xsd:element name="IMachine_getGraphicsControllerTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:GraphicsControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceAddress">
+      <xsd:element name="IMachine_setGraphicsControllerType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="faultToleranceAddress" type="xsd:string"/>
+            <xsd:element name="graphicsControllerType" type="vbox:GraphicsControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceAddressResponse">
+      <xsd:element name="IMachine_setGraphicsControllerTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::faultTolerancePassword-->
-      <xsd:element name="IMachine_getFaultTolerancePassword">
+      <!-- read/write attribute IMachine::VRAMSize-->
+      <xsd:element name="IMachine_getVRAMSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFaultTolerancePasswordResponse">
+      <xsd:element name="IMachine_getVRAMSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultTolerancePassword">
+      <xsd:element name="IMachine_setVRAMSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="faultTolerancePassword" type="xsd:string"/>
+            <xsd:element name="VRAMSize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultTolerancePasswordResponse">
+      <xsd:element name="IMachine_setVRAMSizeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::faultToleranceSyncInterval-->
-      <xsd:element name="IMachine_getFaultToleranceSyncInterval">
+      <!-- read/write attribute IMachine::accelerate3DEnabled-->
+      <xsd:element name="IMachine_getAccelerate3DEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getFaultToleranceSyncIntervalResponse">
+      <xsd:element name="IMachine_getAccelerate3DEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceSyncInterval">
+      <xsd:element name="IMachine_setAccelerate3DEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="faultToleranceSyncInterval" type="xsd:unsignedInt"/>
+            <xsd:element name="accelerate3DEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setFaultToleranceSyncIntervalResponse">
+      <xsd:element name="IMachine_setAccelerate3DEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::RTCUseUTC-->
-      <xsd:element name="IMachine_getRTCUseUTC">
+      <!-- read/write attribute IMachine::accelerate2DVideoEnabled-->
+      <xsd:element name="IMachine_getAccelerate2DVideoEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getRTCUseUTCResponse">
+      <xsd:element name="IMachine_getAccelerate2DVideoEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setRTCUseUTC">
+      <xsd:element name="IMachine_setAccelerate2DVideoEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="RTCUseUTC" type="xsd:boolean"/>
+            <xsd:element name="accelerate2DVideoEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setRTCUseUTCResponse">
+      <xsd:element name="IMachine_setAccelerate2DVideoEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::IOCacheEnabled-->
-      <xsd:element name="IMachine_getIOCacheEnabled">
+      <!-- read/write attribute IMachine::monitorCount-->
+      <xsd:element name="IMachine_getMonitorCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getIOCacheEnabledResponse">
+      <xsd:element name="IMachine_getMonitorCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIOCacheEnabled">
+      <xsd:element name="IMachine_setMonitorCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IOCacheEnabled" type="xsd:boolean"/>
+            <xsd:element name="monitorCount" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIOCacheEnabledResponse">
+      <xsd:element name="IMachine_setMonitorCountResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::IOCacheSize-->
-      <xsd:element name="IMachine_getIOCacheSize">
+      <!-- read/write attribute IMachine::videoCaptureEnabled-->
+      <xsd:element name="IMachine_getVideoCaptureEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getIOCacheSizeResponse">
+      <xsd:element name="IMachine_getVideoCaptureEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIOCacheSize">
+      <xsd:element name="IMachine_setVideoCaptureEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IOCacheSize" type="xsd:unsignedInt"/>
+            <xsd:element name="videoCaptureEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setIOCacheSizeResponse">
+      <xsd:element name="IMachine_setVideoCaptureEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::PCIDeviceAssignments-->
-      <xsd:element name="IMachine_getPCIDeviceAssignments">
+      <!-- read/write attribute IMachine::videoCaptureScreens-->
+      <xsd:element name="IMachine_getVideoCaptureScreens">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getPCIDeviceAssignmentsResponse">
+      <xsd:element name="IMachine_getVideoCaptureScreensResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IPCIDeviceAttachment"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::bandwidthControl-->
-      <xsd:element name="IMachine_getBandwidthControl">
+      <xsd:element name="IMachine_setVideoCaptureScreens">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="videoCaptureScreens" minOccurs="0" maxOccurs="unbounded" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getBandwidthControlResponse">
+      <xsd:element name="IMachine_setVideoCaptureScreensResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::tracingEnabled-->
-      <xsd:element name="IMachine_getTracingEnabled">
+      <!-- read/write attribute IMachine::videoCaptureFile-->
+      <xsd:element name="IMachine_getVideoCaptureFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTracingEnabledResponse">
+      <xsd:element name="IMachine_getVideoCaptureFileResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTracingEnabled">
+      <xsd:element name="IMachine_setVideoCaptureFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="tracingEnabled" type="xsd:boolean"/>
+            <xsd:element name="videoCaptureFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTracingEnabledResponse">
+      <xsd:element name="IMachine_setVideoCaptureFileResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::tracingConfig-->
-      <xsd:element name="IMachine_getTracingConfig">
+      <!-- read/write attribute IMachine::videoCaptureWidth-->
+      <xsd:element name="IMachine_getVideoCaptureWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getTracingConfigResponse">
+      <xsd:element name="IMachine_getVideoCaptureWidthResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTracingConfig">
+      <xsd:element name="IMachine_setVideoCaptureWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="tracingConfig" type="xsd:string"/>
+            <xsd:element name="videoCaptureWidth" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setTracingConfigResponse">
+      <xsd:element name="IMachine_setVideoCaptureWidthResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::allowTracingToAccessVM-->
-      <xsd:element name="IMachine_getAllowTracingToAccessVM">
+      <!-- read/write attribute IMachine::videoCaptureHeight-->
+      <xsd:element name="IMachine_getVideoCaptureHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAllowTracingToAccessVMResponse">
+      <xsd:element name="IMachine_getVideoCaptureHeightResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAllowTracingToAccessVM">
+      <xsd:element name="IMachine_setVideoCaptureHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="allowTracingToAccessVM" type="xsd:boolean"/>
+            <xsd:element name="videoCaptureHeight" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAllowTracingToAccessVMResponse">
+      <xsd:element name="IMachine_setVideoCaptureHeightResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::autostartEnabled-->
-      <xsd:element name="IMachine_getAutostartEnabled">
+      <!-- read/write attribute IMachine::videoCaptureRate-->
+      <xsd:element name="IMachine_getVideoCaptureRate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAutostartEnabledResponse">
+      <xsd:element name="IMachine_getVideoCaptureRateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostartEnabled">
+      <xsd:element name="IMachine_setVideoCaptureRate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="autostartEnabled" type="xsd:boolean"/>
+            <xsd:element name="videoCaptureRate" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostartEnabledResponse">
+      <xsd:element name="IMachine_setVideoCaptureRateResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::autostartDelay-->
-      <xsd:element name="IMachine_getAutostartDelay">
+      <!-- read/write attribute IMachine::videoCaptureFPS-->
+      <xsd:element name="IMachine_getVideoCaptureFPS">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAutostartDelayResponse">
+      <xsd:element name="IMachine_getVideoCaptureFPSResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostartDelay">
+      <xsd:element name="IMachine_setVideoCaptureFPS">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="autostartDelay" type="xsd:unsignedInt"/>
+            <xsd:element name="videoCaptureFPS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostartDelayResponse">
+      <xsd:element name="IMachine_setVideoCaptureFPSResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::autostopType-->
-      <xsd:element name="IMachine_getAutostopType">
+      <!-- read/write attribute IMachine::videoCaptureMaxTime-->
+      <xsd:element name="IMachine_getVideoCaptureMaxTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getAutostopTypeResponse">
+      <xsd:element name="IMachine_getVideoCaptureMaxTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AutostopType"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostopType">
+      <xsd:element name="IMachine_setVideoCaptureMaxTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="autostopType" type="vbox:AutostopType"/>
+            <xsd:element name="videoCaptureMaxTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutostopTypeResponse">
+      <xsd:element name="IMachine_setVideoCaptureMaxTimeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::defaultFrontend-->
-      <xsd:element name="IMachine_getDefaultFrontend">
+      <!-- read/write attribute IMachine::videoCaptureMaxFileSize-->
+      <xsd:element name="IMachine_getVideoCaptureMaxFileSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getDefaultFrontendResponse">
+      <xsd:element name="IMachine_getVideoCaptureMaxFileSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDefaultFrontend">
+      <xsd:element name="IMachine_setVideoCaptureMaxFileSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultFrontend" type="xsd:string"/>
+            <xsd:element name="videoCaptureMaxFileSize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setDefaultFrontendResponse">
+      <xsd:element name="IMachine_setVideoCaptureMaxFileSizeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachine::USBProxyAvailable-->
-      <xsd:element name="IMachine_getUSBProxyAvailable">
+      <!-- read/write attribute IMachine::videoCaptureOptions-->
+      <xsd:element name="IMachine_getVideoCaptureOptions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getUSBProxyAvailableResponse">
+      <xsd:element name="IMachine_getVideoCaptureOptionsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachine::VMProcessPriority-->
-      <xsd:element name="IMachine_getVMProcessPriority">
+      <xsd:element name="IMachine_setVideoCaptureOptions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="videoCaptureOptions" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getVMProcessPriorityResponse">
+      <xsd:element name="IMachine_setVideoCaptureOptionsResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IMachine::BIOSSettings-->
+      <xsd:element name="IMachine_getBIOSSettings">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IMachine_getBIOSSettingsResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVMProcessPriority">
+      <!-- read/write attribute IMachine::firmwareType-->
+      <xsd:element name="IMachine_getFirmwareType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="VMProcessPriority" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setVMProcessPriorityResponse">
+      <xsd:element name="IMachine_getFirmwareTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:FirmwareType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::lockMachine-->
-      <xsd:element name="IMachine_lockMachine">
+      <xsd:element name="IMachine_setFirmwareType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="session" type="xsd:string"/>
-            <xsd:element name="lockType" type="vbox:LockType"/>
+            <xsd:element name="firmwareType" type="vbox:FirmwareType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_lockMachineResponse">
+      <xsd:element name="IMachine_setFirmwareTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::launchVMProcess-->
-      <xsd:element name="IMachine_launchVMProcess">
+      <!-- read/write attribute IMachine::pointingHIDType-->
+      <xsd:element name="IMachine_getPointingHIDType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="session" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="environment" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_launchVMProcessResponse">
+      <xsd:element name="IMachine_getPointingHIDTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:PointingHIDType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setBootOrder-->
-      <xsd:element name="IMachine_setBootOrder">
+      <xsd:element name="IMachine_setPointingHIDType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
-            <xsd:element name="device" type="vbox:DeviceType"/>
+            <xsd:element name="pointingHIDType" type="vbox:PointingHIDType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setBootOrderResponse">
+      <xsd:element name="IMachine_setPointingHIDTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getBootOrder-->
-      <xsd:element name="IMachine_getBootOrder">
+      <!-- read/write attribute IMachine::keyboardHIDType-->
+      <xsd:element name="IMachine_getKeyboardHIDType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getBootOrderResponse">
+      <xsd:element name="IMachine_getKeyboardHIDTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DeviceType"/>
+            <xsd:element name="returnval" type="vbox:KeyboardHIDType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::attachDevice-->
-      <xsd:element name="IMachine_attachDevice">
+      <xsd:element name="IMachine_setKeyboardHIDType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="type" type="vbox:DeviceType"/>
-            <xsd:element name="medium" type="xsd:string"/>
+            <xsd:element name="keyboardHIDType" type="vbox:KeyboardHIDType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_attachDeviceResponse">
+      <xsd:element name="IMachine_setKeyboardHIDTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::attachDeviceWithoutMedium-->
-      <xsd:element name="IMachine_attachDeviceWithoutMedium">
+      <!-- read/write attribute IMachine::HPETEnabled-->
+      <xsd:element name="IMachine_getHPETEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="type" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_attachDeviceWithoutMediumResponse">
+      <xsd:element name="IMachine_getHPETEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::detachDevice-->
-      <xsd:element name="IMachine_detachDevice">
+      <xsd:element name="IMachine_setHPETEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="HPETEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_detachDeviceResponse">
+      <xsd:element name="IMachine_setHPETEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::passthroughDevice-->
-      <xsd:element name="IMachine_passthroughDevice">
+      <!-- read/write attribute IMachine::chipsetType-->
+      <xsd:element name="IMachine_getChipsetType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="passthrough" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_passthroughDeviceResponse">
+      <xsd:element name="IMachine_getChipsetTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:ChipsetType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::temporaryEjectDevice-->
-      <xsd:element name="IMachine_temporaryEjectDevice">
+      <xsd:element name="IMachine_setChipsetType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="temporaryEject" type="xsd:boolean"/>
+            <xsd:element name="chipsetType" type="vbox:ChipsetType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_temporaryEjectDeviceResponse">
+      <xsd:element name="IMachine_setChipsetTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::nonRotationalDevice-->
-      <xsd:element name="IMachine_nonRotationalDevice">
+      <!-- read/write attribute IMachine::snapshotFolder-->
+      <xsd:element name="IMachine_getSnapshotFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="nonRotational" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_nonRotationalDeviceResponse">
+      <xsd:element name="IMachine_getSnapshotFolderResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setAutoDiscardForDevice-->
-      <xsd:element name="IMachine_setAutoDiscardForDevice">
+      <xsd:element name="IMachine_setSnapshotFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="discard" type="xsd:boolean"/>
+            <xsd:element name="snapshotFolder" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setAutoDiscardForDeviceResponse">
+      <xsd:element name="IMachine_setSnapshotFolderResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setHotPluggableForDevice-->
-      <xsd:element name="IMachine_setHotPluggableForDevice">
+      <!-- readonly attribute IMachine::VRDEServer-->
+      <xsd:element name="IMachine_getVRDEServer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="hotPluggable" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHotPluggableForDeviceResponse">
+      <xsd:element name="IMachine_getVRDEServerResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setBandwidthGroupForDevice-->
-      <xsd:element name="IMachine_setBandwidthGroupForDevice">
+      <!-- read/write attribute IMachine::emulatedUSBCardReaderEnabled-->
+      <xsd:element name="IMachine_getEmulatedUSBCardReaderEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="bandwidthGroup" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setBandwidthGroupForDeviceResponse">
+      <xsd:element name="IMachine_getEmulatedUSBCardReaderEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setNoBandwidthGroupForDevice-->
-      <xsd:element name="IMachine_setNoBandwidthGroupForDevice">
+      <xsd:element name="IMachine_setEmulatedUSBCardReaderEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="emulatedUSBCardReaderEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setNoBandwidthGroupForDeviceResponse">
+      <xsd:element name="IMachine_setEmulatedUSBCardReaderEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::unmountMedium-->
-      <xsd:element name="IMachine_unmountMedium">
+      <!-- readonly attribute IMachine::mediumAttachments-->
+      <xsd:element name="IMachine_getMediumAttachments">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="force" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_unmountMediumResponse">
+      <xsd:element name="IMachine_getMediumAttachmentsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IMediumAttachment"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::mountMedium-->
-      <xsd:element name="IMachine_mountMedium">
+      <!-- readonly attribute IMachine::USBControllers-->
+      <xsd:element name="IMachine_getUSBControllers">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
-            <xsd:element name="medium" type="xsd:string"/>
-            <xsd:element name="force" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_mountMediumResponse">
+      <xsd:element name="IMachine_getUSBControllersResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getMedium-->
-      <xsd:element name="IMachine_getMedium">
+      <!-- readonly attribute IMachine::USBDeviceFilters-->
+      <xsd:element name="IMachine_getUSBDeviceFilters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMediumResponse">
+      <xsd:element name="IMachine_getUSBDeviceFiltersResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getMediumAttachmentsOfController-->
-      <xsd:element name="IMachine_getMediumAttachmentsOfController">
+      <!-- readonly attribute IMachine::audioAdapter-->
+      <xsd:element name="IMachine_getAudioAdapter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMediumAttachmentsOfControllerResponse">
+      <xsd:element name="IMachine_getAudioAdapterResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IMediumAttachment"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getMediumAttachment-->
-      <xsd:element name="IMachine_getMediumAttachment">
+      <!-- readonly attribute IMachine::storageControllers-->
+      <xsd:element name="IMachine_getStorageControllers">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="controllerPort" type="xsd:int"/>
-            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getMediumAttachmentResponse">
+      <xsd:element name="IMachine_getStorageControllersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::attachHostPCIDevice-->
-      <xsd:element name="IMachine_attachHostPCIDevice">
-        <xsd:complexType>
+      <!-- readonly attribute IMachine::settingsFilePath-->
+      <xsd:element name="IMachine_getSettingsFilePath">
+        <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostAddress" type="xsd:int"/>
-            <xsd:element name="desiredGuestAddress" type="xsd:int"/>
-            <xsd:element name="tryToUnbind" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_attachHostPCIDeviceResponse">
+      <xsd:element name="IMachine_getSettingsFilePathResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::detachHostPCIDevice-->
-      <xsd:element name="IMachine_detachHostPCIDevice">
+      <!-- readonly attribute IMachine::settingsAuxFilePath-->
+      <xsd:element name="IMachine_getSettingsAuxFilePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostAddress" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_detachHostPCIDeviceResponse">
+      <xsd:element name="IMachine_getSettingsAuxFilePathResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getNetworkAdapter-->
-      <xsd:element name="IMachine_getNetworkAdapter">
+      <!-- readonly attribute IMachine::settingsModified-->
+      <xsd:element name="IMachine_getSettingsModified">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getNetworkAdapterResponse">
+      <xsd:element name="IMachine_getSettingsModifiedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::addStorageController-->
-      <xsd:element name="IMachine_addStorageController">
+      <!-- readonly attribute IMachine::sessionState-->
+      <xsd:element name="IMachine_getSessionState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="connectionType" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_addStorageControllerResponse">
+      <xsd:element name="IMachine_getSessionStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:SessionState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getStorageControllerByName-->
-      <xsd:element name="IMachine_getStorageControllerByName">
+      <!-- readonly attribute IMachine::sessionName-->
+      <xsd:element name="IMachine_getSessionName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getStorageControllerByNameResponse">
+      <xsd:element name="IMachine_getSessionNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getStorageControllerByInstance-->
-      <xsd:element name="IMachine_getStorageControllerByInstance">
+      <!-- readonly attribute IMachine::sessionPID-->
+      <xsd:element name="IMachine_getSessionPID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="connectionType" type="vbox:StorageBus"/>
-            <xsd:element name="instance" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getStorageControllerByInstanceResponse">
+      <xsd:element name="IMachine_getSessionPIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::removeStorageController-->
-      <xsd:element name="IMachine_removeStorageController">
+      <!-- readonly attribute IMachine::state-->
+      <xsd:element name="IMachine_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_removeStorageControllerResponse">
+      <xsd:element name="IMachine_getStateResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:MachineState"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setStorageControllerBootable-->
-      <xsd:element name="IMachine_setStorageControllerBootable">
+      <!-- readonly attribute IMachine::lastStateChange-->
+      <xsd:element name="IMachine_getLastStateChange">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="bootable" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setStorageControllerBootableResponse">
+      <xsd:element name="IMachine_getLastStateChangeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::addUSBController-->
-      <xsd:element name="IMachine_addUSBController">
+      <!-- readonly attribute IMachine::stateFilePath-->
+      <xsd:element name="IMachine_getStateFilePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_addUSBControllerResponse">
+      <xsd:element name="IMachine_getStateFilePathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::removeUSBController-->
-      <xsd:element name="IMachine_removeUSBController">
+      <!-- readonly attribute IMachine::logFolder-->
+      <xsd:element name="IMachine_getLogFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_removeUSBControllerResponse">
+      <xsd:element name="IMachine_getLogFolderResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getUSBControllerByName-->
-      <xsd:element name="IMachine_getUSBControllerByName">
+      <!-- readonly attribute IMachine::currentSnapshot-->
+      <xsd:element name="IMachine_getCurrentSnapshot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getUSBControllerByNameResponse">
+      <xsd:element name="IMachine_getCurrentSnapshotResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getUSBControllerCountByType-->
-      <xsd:element name="IMachine_getUSBControllerCountByType">
+      <!-- readonly attribute IMachine::snapshotCount-->
+      <xsd:element name="IMachine_getSnapshotCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getUSBControllerCountByTypeResponse">
+      <xsd:element name="IMachine_getSnapshotCountResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getSerialPort-->
-      <xsd:element name="IMachine_getSerialPort">
+      <!-- readonly attribute IMachine::currentStateModified-->
+      <xsd:element name="IMachine_getCurrentStateModified">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getSerialPortResponse">
+      <xsd:element name="IMachine_getCurrentStateModifiedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getParallelPort-->
-      <xsd:element name="IMachine_getParallelPort">
+      <!-- readonly attribute IMachine::sharedFolders-->
+      <xsd:element name="IMachine_getSharedFolders">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getParallelPortResponse">
+      <xsd:element name="IMachine_getSharedFoldersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:ISharedFolder"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getExtraDataKeys-->
-      <xsd:element name="IMachine_getExtraDataKeys">
+      <!-- read/write attribute IMachine::clipboardMode-->
+      <xsd:element name="IMachine_getClipboardMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getExtraDataKeysResponse">
+      <xsd:element name="IMachine_getClipboardModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:ClipboardMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getExtraData-->
-      <xsd:element name="IMachine_getExtraData">
+      <xsd:element name="IMachine_setClipboardMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="clipboardMode" type="vbox:ClipboardMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getExtraDataResponse">
+      <xsd:element name="IMachine_setClipboardModeResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute IMachine::dnDMode-->
+      <xsd:element name="IMachine_getDnDMode">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setExtraData-->
-      <xsd:element name="IMachine_setExtraData">
+      <xsd:element name="IMachine_getDnDModeResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:DnDMode"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IMachine_setDnDMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="dnDMode" type="vbox:DnDMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setExtraDataResponse">
+      <xsd:element name="IMachine_setDnDModeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getCPUProperty-->
-      <xsd:element name="IMachine_getCPUProperty">
+      <!-- read/write attribute IMachine::teleporterEnabled-->
+      <xsd:element name="IMachine_getTeleporterEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="vbox:CPUPropertyType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUPropertyResponse">
+      <xsd:element name="IMachine_getTeleporterEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setCPUProperty-->
-      <xsd:element name="IMachine_setCPUProperty">
+      <xsd:element name="IMachine_setTeleporterEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="vbox:CPUPropertyType"/>
-            <xsd:element name="value" type="xsd:boolean"/>
+            <xsd:element name="teleporterEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUPropertyResponse">
+      <xsd:element name="IMachine_setTeleporterEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getCPUIDLeaf-->
-      <xsd:element name="IMachine_getCPUIDLeaf">
+      <!-- read/write attribute IMachine::teleporterPort-->
+      <xsd:element name="IMachine_getTeleporterPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUIDLeafResponse">
+      <xsd:element name="IMachine_getTeleporterPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="valEax" type="xsd:unsignedInt"/>
-            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setCPUIDLeaf-->
-      <xsd:element name="IMachine_setCPUIDLeaf">
+      <xsd:element name="IMachine_setTeleporterPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:unsignedInt"/>
-            <xsd:element name="valEax" type="xsd:unsignedInt"/>
-            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
+            <xsd:element name="teleporterPort" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setCPUIDLeafResponse">
+      <xsd:element name="IMachine_setTeleporterPortResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::removeCPUIDLeaf-->
-      <xsd:element name="IMachine_removeCPUIDLeaf">
+      <!-- read/write attribute IMachine::teleporterAddress-->
+      <xsd:element name="IMachine_getTeleporterAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_removeCPUIDLeafResponse">
+      <xsd:element name="IMachine_getTeleporterAddressResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::removeAllCPUIDLeaves-->
-      <xsd:element name="IMachine_removeAllCPUIDLeaves">
+      <xsd:element name="IMachine_setTeleporterAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="teleporterAddress" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_removeAllCPUIDLeavesResponse">
+      <xsd:element name="IMachine_setTeleporterAddressResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getHWVirtExProperty-->
-      <xsd:element name="IMachine_getHWVirtExProperty">
+      <!-- read/write attribute IMachine::teleporterPassword-->
+      <xsd:element name="IMachine_getTeleporterPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="vbox:HWVirtExPropertyType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getHWVirtExPropertyResponse">
+      <xsd:element name="IMachine_getTeleporterPasswordResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setHWVirtExProperty-->
-      <xsd:element name="IMachine_setHWVirtExProperty">
+      <xsd:element name="IMachine_setTeleporterPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="vbox:HWVirtExPropertyType"/>
-            <xsd:element name="value" type="xsd:boolean"/>
+            <xsd:element name="teleporterPassword" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setHWVirtExPropertyResponse">
+      <xsd:element name="IMachine_setTeleporterPasswordResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setSettingsFilePath-->
-      <xsd:element name="IMachine_setSettingsFilePath">
+      <!-- read/write attribute IMachine::paravirtProvider-->
+      <xsd:element name="IMachine_getParavirtProvider">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="settingsFilePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setSettingsFilePathResponse">
+      <xsd:element name="IMachine_getParavirtProviderResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:ParavirtProvider"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::saveSettings-->
-      <xsd:element name="IMachine_saveSettings">
+      <xsd:element name="IMachine_setParavirtProvider">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="paravirtProvider" type="vbox:ParavirtProvider"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_saveSettingsResponse">
+      <xsd:element name="IMachine_setParavirtProviderResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::discardSettings-->
-      <xsd:element name="IMachine_discardSettings">
+      <!-- read/write attribute IMachine::faultToleranceState-->
+      <xsd:element name="IMachine_getFaultToleranceState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_discardSettingsResponse">
+      <xsd:element name="IMachine_getFaultToleranceStateResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:FaultToleranceState"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::unregister-->
-      <xsd:element name="IMachine_unregister">
+      <xsd:element name="IMachine_setFaultToleranceState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cleanupMode" type="vbox:CleanupMode"/>
+            <xsd:element name="faultToleranceState" type="vbox:FaultToleranceState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_unregisterResponse">
+      <xsd:element name="IMachine_setFaultToleranceStateResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::deleteConfig-->
-      <xsd:element name="IMachine_deleteConfig">
+      <!-- read/write attribute IMachine::faultTolerancePort-->
+      <xsd:element name="IMachine_getFaultTolerancePort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="media" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_deleteConfigResponse">
+      <xsd:element name="IMachine_getFaultTolerancePortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::exportTo-->
-      <xsd:element name="IMachine_exportTo">
+      <xsd:element name="IMachine_setFaultTolerancePort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="appliance" type="xsd:string"/>
-            <xsd:element name="location" type="xsd:string"/>
+            <xsd:element name="faultTolerancePort" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_exportToResponse">
+      <xsd:element name="IMachine_setFaultTolerancePortResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::findSnapshot-->
-      <xsd:element name="IMachine_findSnapshot">
+      <!-- read/write attribute IMachine::faultToleranceAddress-->
+      <xsd:element name="IMachine_getFaultToleranceAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="nameOrId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_findSnapshotResponse">
+      <xsd:element name="IMachine_getFaultToleranceAddressResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::createSharedFolder-->
-      <xsd:element name="IMachine_createSharedFolder">
+      <xsd:element name="IMachine_setFaultToleranceAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="hostPath" type="xsd:string"/>
-            <xsd:element name="writable" type="xsd:boolean"/>
-            <xsd:element name="automount" type="xsd:boolean"/>
+            <xsd:element name="faultToleranceAddress" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_createSharedFolderResponse">
+      <xsd:element name="IMachine_setFaultToleranceAddressResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::removeSharedFolder-->
-      <xsd:element name="IMachine_removeSharedFolder">
+      <!-- read/write attribute IMachine::faultTolerancePassword-->
+      <xsd:element name="IMachine_getFaultTolerancePassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_removeSharedFolderResponse">
+      <xsd:element name="IMachine_getFaultTolerancePasswordResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::canShowConsoleWindow-->
-      <xsd:element name="IMachine_canShowConsoleWindow">
+      <xsd:element name="IMachine_setFaultTolerancePassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="faultTolerancePassword" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_canShowConsoleWindowResponse">
+      <xsd:element name="IMachine_setFaultTolerancePasswordResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::showConsoleWindow-->
-      <xsd:element name="IMachine_showConsoleWindow">
+      <!-- read/write attribute IMachine::faultToleranceSyncInterval-->
+      <xsd:element name="IMachine_getFaultToleranceSyncInterval">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_showConsoleWindowResponse">
+      <xsd:element name="IMachine_getFaultToleranceSyncIntervalResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getGuestProperty-->
-      <xsd:element name="IMachine_getGuestProperty">
+      <xsd:element name="IMachine_setFaultToleranceSyncInterval">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="faultToleranceSyncInterval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getGuestPropertyResponse">
+      <xsd:element name="IMachine_setFaultToleranceSyncIntervalResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="value" type="xsd:string"/>
-            <xsd:element name="timestamp" type="xsd:long"/>
-            <xsd:element name="flags" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getGuestPropertyValue-->
-      <xsd:element name="IMachine_getGuestPropertyValue">
+      <!-- read/write attribute IMachine::RTCUseUTC-->
+      <xsd:element name="IMachine_getRTCUseUTC">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getGuestPropertyValueResponse">
+      <xsd:element name="IMachine_getRTCUseUTCResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getGuestPropertyTimestamp-->
-      <xsd:element name="IMachine_getGuestPropertyTimestamp">
+      <xsd:element name="IMachine_setRTCUseUTC">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="xsd:string"/>
+            <xsd:element name="RTCUseUTC" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getGuestPropertyTimestampResponse">
+      <xsd:element name="IMachine_setRTCUseUTCResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setGuestProperty-->
-      <xsd:element name="IMachine_setGuestProperty">
+      <!-- read/write attribute IMachine::IOCacheEnabled-->
+      <xsd:element name="IMachine_getIOCacheEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
-            <xsd:element name="flags" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGuestPropertyResponse">
+      <xsd:element name="IMachine_getIOCacheEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::setGuestPropertyValue-->
-      <xsd:element name="IMachine_setGuestPropertyValue">
+      <xsd:element name="IMachine_setIOCacheEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="property" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="IOCacheEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_setGuestPropertyValueResponse">
+      <xsd:element name="IMachine_setIOCacheEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::deleteGuestProperty-->
-      <xsd:element name="IMachine_deleteGuestProperty">
+      <!-- read/write attribute IMachine::IOCacheSize-->
+      <xsd:element name="IMachine_getIOCacheSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_deleteGuestPropertyResponse">
+      <xsd:element name="IMachine_getIOCacheSizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::enumerateGuestProperties-->
-      <xsd:element name="IMachine_enumerateGuestProperties">
+      <xsd:element name="IMachine_setIOCacheSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="patterns" type="xsd:string"/>
+            <xsd:element name="IOCacheSize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_enumerateGuestPropertiesResponse">
+      <xsd:element name="IMachine_setIOCacheSizeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="timestamps" minOccurs="0" maxOccurs="unbounded" type="xsd:long"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::querySavedGuestScreenInfo-->
-      <xsd:element name="IMachine_querySavedGuestScreenInfo">
+      <!-- readonly attribute IMachine::PCIDeviceAssignments-->
+      <xsd:element name="IMachine_getPCIDeviceAssignments">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_querySavedGuestScreenInfoResponse">
+      <xsd:element name="IMachine_getPCIDeviceAssignmentsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="originX" type="xsd:unsignedInt"/>
-            <xsd:element name="originY" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IPCIDeviceAttachment"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::readSavedThumbnailToArray-->
-      <xsd:element name="IMachine_readSavedThumbnailToArray">
+      <!-- readonly attribute IMachine::bandwidthControl-->
+      <xsd:element name="IMachine_getBandwidthControl">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_readSavedThumbnailToArrayResponse">
+      <xsd:element name="IMachine_getBandwidthControlResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::querySavedScreenshotInfo-->
-      <xsd:element name="IMachine_querySavedScreenshotInfo">
+      <!-- read/write attribute IMachine::tracingEnabled-->
+      <xsd:element name="IMachine_getTracingEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_querySavedScreenshotInfoResponse">
+      <xsd:element name="IMachine_getTracingEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:BitmapFormat"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::readSavedScreenshotToArray-->
-      <xsd:element name="IMachine_readSavedScreenshotToArray">
+      <xsd:element name="IMachine_setTracingEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
+            <xsd:element name="tracingEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_readSavedScreenshotToArrayResponse">
+      <xsd:element name="IMachine_setTracingEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::hotPlugCPU-->
-      <xsd:element name="IMachine_hotPlugCPU">
+      <!-- read/write attribute IMachine::tracingConfig-->
+      <xsd:element name="IMachine_getTracingConfig">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpu" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_hotPlugCPUResponse">
+      <xsd:element name="IMachine_getTracingConfigResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::hotUnplugCPU-->
-      <xsd:element name="IMachine_hotUnplugCPU">
+      <xsd:element name="IMachine_setTracingConfig">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpu" type="xsd:unsignedInt"/>
+            <xsd:element name="tracingConfig" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_hotUnplugCPUResponse">
+      <xsd:element name="IMachine_setTracingConfigResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getCPUStatus-->
-      <xsd:element name="IMachine_getCPUStatus">
+      <!-- read/write attribute IMachine::allowTracingToAccessVM-->
+      <xsd:element name="IMachine_getAllowTracingToAccessVM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpu" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getCPUStatusResponse">
+      <xsd:element name="IMachine_getAllowTracingToAccessVMResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::getEffectiveParavirtProvider-->
-      <xsd:element name="IMachine_getEffectiveParavirtProvider">
+      <xsd:element name="IMachine_setAllowTracingToAccessVM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="allowTracingToAccessVM" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_getEffectiveParavirtProviderResponse">
+      <xsd:element name="IMachine_setAllowTracingToAccessVMResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ParavirtProvider"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::queryLogFilename-->
-      <xsd:element name="IMachine_queryLogFilename">
+      <!-- read/write attribute IMachine::autostartEnabled-->
+      <xsd:element name="IMachine_getAutostartEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="idx" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_queryLogFilenameResponse">
+      <xsd:element name="IMachine_getAutostartEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::readLog-->
-      <xsd:element name="IMachine_readLog">
+      <xsd:element name="IMachine_setAutostartEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="idx" type="xsd:unsignedInt"/>
-            <xsd:element name="offset" type="xsd:long"/>
-            <xsd:element name="size" type="xsd:long"/>
+            <xsd:element name="autostartEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_readLogResponse">
+      <xsd:element name="IMachine_setAutostartEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::cloneTo-->
-      <xsd:element name="IMachine_cloneTo">
+      <!-- read/write attribute IMachine::autostartDelay-->
+      <xsd:element name="IMachine_getAutostartDelay">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
-            <xsd:element name="mode" type="vbox:CloneMode"/>
-            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:CloneOptions"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_cloneToResponse">
+      <xsd:element name="IMachine_getAutostartDelayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::saveState-->
-      <xsd:element name="IMachine_saveState">
+      <xsd:element name="IMachine_setAutostartDelay">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="autostartDelay" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_saveStateResponse">
+      <xsd:element name="IMachine_setAutostartDelayResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::adoptSavedState-->
-      <xsd:element name="IMachine_adoptSavedState">
+      <!-- read/write attribute IMachine::autostopType-->
+      <xsd:element name="IMachine_getAutostopType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="savedStateFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_adoptSavedStateResponse">
+      <xsd:element name="IMachine_getAutostopTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:AutostopType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::discardSavedState-->
-      <xsd:element name="IMachine_discardSavedState">
+      <xsd:element name="IMachine_setAutostopType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="fRemoveFile" type="xsd:boolean"/>
+            <xsd:element name="autostopType" type="vbox:AutostopType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_discardSavedStateResponse">
+      <xsd:element name="IMachine_setAutostopTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::takeSnapshot-->
-      <xsd:element name="IMachine_takeSnapshot">
+      <!-- read/write attribute IMachine::defaultFrontend-->
+      <xsd:element name="IMachine_getDefaultFrontend">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="description" type="xsd:string"/>
-            <xsd:element name="pause" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_takeSnapshotResponse">
+      <xsd:element name="IMachine_getDefaultFrontendResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="id" type="xsd:string"/>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::deleteSnapshot-->
-      <xsd:element name="IMachine_deleteSnapshot">
+      <xsd:element name="IMachine_setDefaultFrontend">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="defaultFrontend" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_deleteSnapshotResponse">
+      <xsd:element name="IMachine_setDefaultFrontendResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::deleteSnapshotAndAllChildren-->
-      <xsd:element name="IMachine_deleteSnapshotAndAllChildren">
+      <!-- readonly attribute IMachine::USBProxyAvailable-->
+      <xsd:element name="IMachine_getUSBProxyAvailable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_deleteSnapshotAndAllChildrenResponse">
+      <xsd:element name="IMachine_getUSBProxyAvailableResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::deleteSnapshotRange-->
-      <xsd:element name="IMachine_deleteSnapshotRange">
+      <!-- read/write attribute IMachine::VMProcessPriority-->
+      <xsd:element name="IMachine_getVMProcessPriority">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="startId" type="xsd:string"/>
-            <xsd:element name="endId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_deleteSnapshotRangeResponse">
+      <xsd:element name="IMachine_getVMProcessPriorityResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::restoreSnapshot-->
-      <xsd:element name="IMachine_restoreSnapshot">
+      <xsd:element name="IMachine_setVMProcessPriority">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="snapshot" type="xsd:string"/>
+            <xsd:element name="VMProcessPriority" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_restoreSnapshotResponse">
+      <xsd:element name="IMachine_setVMProcessPriorityResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute IMachine::paravirtDebug-->
+      <xsd:element name="IMachine_getParavirtDebug">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IMachine_getParavirtDebugResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachine::applyDefaults-->
-      <xsd:element name="IMachine_applyDefaults">
+      <xsd:element name="IMachine_setParavirtDebug">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="flags" type="xsd:string"/>
+            <xsd:element name="paravirtDebug" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachine_applyDefaultsResponse">
+      <xsd:element name="IMachine_setParavirtDebugResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IEmulatedUSB-->
-      <!-- readonly attribute IEmulatedUSB::webcams-->
-      <xsd:element name="IEmulatedUSB_getWebcams">
+      <!-- read/write attribute IMachine::CPUProfile-->
+      <xsd:element name="IMachine_getCPUProfile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEmulatedUSB_getWebcamsResponse">
+      <xsd:element name="IMachine_getCPUProfileResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEmulatedUSB::webcamAttach-->
-      <xsd:element name="IEmulatedUSB_webcamAttach">
+      <xsd:element name="IMachine_setCPUProfile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="settings" type="xsd:string"/>
+            <xsd:element name="CPUProfile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEmulatedUSB_webcamAttachResponse">
+      <xsd:element name="IMachine_setCPUProfileResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEmulatedUSB::webcamDetach-->
-      <xsd:element name="IEmulatedUSB_webcamDetach">
+      <!-- method IMachine::lockMachine-->
+      <xsd:element name="IMachine_lockMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="session" type="xsd:string"/>
+            <xsd:element name="lockType" type="vbox:LockType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEmulatedUSB_webcamDetachResponse">
+      <xsd:element name="IMachine_lockMachineResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IConsole-->
-      <!-- readonly attribute IConsole::machine-->
-      <xsd:element name="IConsole_getMachine">
+      <!-- method IMachine::launchVMProcess-->
+      <xsd:element name="IMachine_launchVMProcess">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="session" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="environment" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getMachineResponse">
+      <xsd:element name="IMachine_launchVMProcessResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::state-->
-      <xsd:element name="IConsole_getState">
+      <!-- method IMachine::setBootOrder-->
+      <xsd:element name="IMachine_setBootOrder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
+            <xsd:element name="device" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getStateResponse">
+      <xsd:element name="IMachine_setBootOrderResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MachineState"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::guest-->
-      <xsd:element name="IConsole_getGuest">
+      <!-- method IMachine::getBootOrder-->
+      <xsd:element name="IMachine_getBootOrder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getGuestResponse">
+      <xsd:element name="IMachine_getBootOrderResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::keyboard-->
-      <xsd:element name="IConsole_getKeyboard">
+      <!-- method IMachine::attachDevice-->
+      <xsd:element name="IMachine_attachDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="type" type="vbox:DeviceType"/>
+            <xsd:element name="medium" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getKeyboardResponse">
+      <xsd:element name="IMachine_attachDeviceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::mouse-->
-      <xsd:element name="IConsole_getMouse">
+      <!-- method IMachine::attachDeviceWithoutMedium-->
+      <xsd:element name="IMachine_attachDeviceWithoutMedium">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="type" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getMouseResponse">
+      <xsd:element name="IMachine_attachDeviceWithoutMediumResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::display-->
-      <xsd:element name="IConsole_getDisplay">
+      <!-- method IMachine::detachDevice-->
+      <xsd:element name="IMachine_detachDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getDisplayResponse">
+      <xsd:element name="IMachine_detachDeviceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::debugger-->
-      <xsd:element name="IConsole_getDebugger">
+      <!-- method IMachine::passthroughDevice-->
+      <xsd:element name="IMachine_passthroughDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="passthrough" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getDebuggerResponse">
+      <xsd:element name="IMachine_passthroughDeviceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::USBDevices-->
-      <xsd:element name="IConsole_getUSBDevices">
+      <!-- method IMachine::temporaryEjectDevice-->
+      <xsd:element name="IMachine_temporaryEjectDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="temporaryEject" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getUSBDevicesResponse">
+      <xsd:element name="IMachine_temporaryEjectDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::nonRotationalDevice-->
+      <xsd:element name="IMachine_nonRotationalDevice">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="nonRotational" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::remoteUSBDevices-->
-      <xsd:element name="IConsole_getRemoteUSBDevices">
+      <xsd:element name="IMachine_nonRotationalDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::setAutoDiscardForDevice-->
+      <xsd:element name="IMachine_setAutoDiscardForDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="discard" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getRemoteUSBDevicesResponse">
+      <xsd:element name="IMachine_setAutoDiscardForDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::setHotPluggableForDevice-->
+      <xsd:element name="IMachine_setHotPluggableForDevice">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="hotPluggable" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::sharedFolders-->
-      <xsd:element name="IConsole_getSharedFolders">
+      <xsd:element name="IMachine_setHotPluggableForDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::setBandwidthGroupForDevice-->
+      <xsd:element name="IMachine_setBandwidthGroupForDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="bandwidthGroup" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getSharedFoldersResponse">
+      <xsd:element name="IMachine_setBandwidthGroupForDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::setNoBandwidthGroupForDevice-->
+      <xsd:element name="IMachine_setNoBandwidthGroupForDevice">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:ISharedFolder"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::VRDEServerInfo-->
-      <xsd:element name="IConsole_getVRDEServerInfo">
+      <xsd:element name="IMachine_setNoBandwidthGroupForDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::unmountMedium-->
+      <xsd:element name="IMachine_unmountMedium">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="force" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getVRDEServerInfoResponse">
+      <xsd:element name="IMachine_unmountMediumResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::mountMedium-->
+      <xsd:element name="IMachine_mountMedium">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:IVRDEServerInfo"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
+            <xsd:element name="medium" type="xsd:string"/>
+            <xsd:element name="force" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::eventSource-->
-      <xsd:element name="IConsole_getEventSource">
+      <xsd:element name="IMachine_mountMediumResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::getMedium-->
+      <xsd:element name="IMachine_getMedium">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getEventSourceResponse">
+      <xsd:element name="IMachine_getMediumResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::attachedPCIDevices-->
-      <xsd:element name="IConsole_getAttachedPCIDevices">
+      <!-- method IMachine::getMediumAttachmentsOfController-->
+      <xsd:element name="IMachine_getMediumAttachmentsOfController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getAttachedPCIDevicesResponse">
+      <xsd:element name="IMachine_getMediumAttachmentsOfControllerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IPCIDeviceAttachment"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IMediumAttachment"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IConsole::useHostClipboard-->
-      <xsd:element name="IConsole_getUseHostClipboard">
+      <!-- method IMachine::getMediumAttachment-->
+      <xsd:element name="IMachine_getMediumAttachment">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="controllerPort" type="xsd:int"/>
+            <xsd:element name="device" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getUseHostClipboardResponse">
+      <xsd:element name="IMachine_getMediumAttachmentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_setUseHostClipboard">
+      <!-- method IMachine::attachHostPCIDevice-->
+      <xsd:element name="IMachine_attachHostPCIDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="useHostClipboard" type="xsd:boolean"/>
+            <xsd:element name="hostAddress" type="xsd:int"/>
+            <xsd:element name="desiredGuestAddress" type="xsd:int"/>
+            <xsd:element name="tryToUnbind" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_setUseHostClipboardResponse">
+      <xsd:element name="IMachine_attachHostPCIDeviceResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IConsole::emulatedUSB-->
-      <xsd:element name="IConsole_getEmulatedUSB">
+      <!-- method IMachine::detachHostPCIDevice-->
+      <xsd:element name="IMachine_detachHostPCIDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="hostAddress" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getEmulatedUSBResponse">
+      <xsd:element name="IMachine_detachHostPCIDeviceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::powerUp-->
-      <xsd:element name="IConsole_powerUp">
+      <!-- method IMachine::getNetworkAdapter-->
+      <xsd:element name="IMachine_getNetworkAdapter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_powerUpResponse">
+      <xsd:element name="IMachine_getNetworkAdapterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::powerUpPaused-->
-      <xsd:element name="IConsole_powerUpPaused">
+      <!-- method IMachine::addStorageController-->
+      <xsd:element name="IMachine_addStorageController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="connectionType" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_powerUpPausedResponse">
+      <xsd:element name="IMachine_addStorageControllerResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::powerDown-->
-      <xsd:element name="IConsole_powerDown">
+      <!-- method IMachine::getStorageControllerByName-->
+      <xsd:element name="IMachine_getStorageControllerByName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_powerDownResponse">
+      <xsd:element name="IMachine_getStorageControllerByNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::reset-->
-      <xsd:element name="IConsole_reset">
+      <!-- method IMachine::getStorageControllerByInstance-->
+      <xsd:element name="IMachine_getStorageControllerByInstance">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="connectionType" type="vbox:StorageBus"/>
+            <xsd:element name="instance" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_resetResponse">
+      <xsd:element name="IMachine_getStorageControllerByInstanceResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::pause-->
-      <xsd:element name="IConsole_pause">
+      <!-- method IMachine::removeStorageController-->
+      <xsd:element name="IMachine_removeStorageController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_pauseResponse">
+      <xsd:element name="IMachine_removeStorageControllerResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::resume-->
-      <xsd:element name="IConsole_resume">
+      <!-- method IMachine::setStorageControllerBootable-->
+      <xsd:element name="IMachine_setStorageControllerBootable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="bootable" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_resumeResponse">
+      <xsd:element name="IMachine_setStorageControllerBootableResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::powerButton-->
-      <xsd:element name="IConsole_powerButton">
+      <!-- method IMachine::addUSBController-->
+      <xsd:element name="IMachine_addUSBController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_powerButtonResponse">
+      <xsd:element name="IMachine_addUSBControllerResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::sleepButton-->
-      <xsd:element name="IConsole_sleepButton">
+      <!-- method IMachine::removeUSBController-->
+      <xsd:element name="IMachine_removeUSBController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_sleepButtonResponse">
+      <xsd:element name="IMachine_removeUSBControllerResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::getPowerButtonHandled-->
-      <xsd:element name="IConsole_getPowerButtonHandled">
+      <!-- method IMachine::getUSBControllerByName-->
+      <xsd:element name="IMachine_getUSBControllerByName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getPowerButtonHandledResponse">
+      <xsd:element name="IMachine_getUSBControllerByNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::getGuestEnteredACPIMode-->
-      <xsd:element name="IConsole_getGuestEnteredACPIMode">
+      <!-- method IMachine::getUSBControllerCountByType-->
+      <xsd:element name="IMachine_getUSBControllerCountByType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getGuestEnteredACPIModeResponse">
+      <xsd:element name="IMachine_getUSBControllerCountByTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::getDeviceActivity-->
-      <xsd:element name="IConsole_getDeviceActivity">
+      <!-- method IMachine::getSerialPort-->
+      <xsd:element name="IMachine_getSerialPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
+            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_getDeviceActivityResponse">
+      <xsd:element name="IMachine_getSerialPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceActivity"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::attachUSBDevice-->
-      <xsd:element name="IConsole_attachUSBDevice">
+      <!-- method IMachine::getParallelPort-->
+      <xsd:element name="IMachine_getParallelPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
-            <xsd:element name="captureFilename" type="xsd:string"/>
+            <xsd:element name="slot" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_attachUSBDeviceResponse">
+      <xsd:element name="IMachine_getParallelPortResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::detachUSBDevice-->
-      <xsd:element name="IConsole_detachUSBDevice">
+      <!-- method IMachine::getExtraDataKeys-->
+      <xsd:element name="IMachine_getExtraDataKeys">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_detachUSBDeviceResponse">
+      <xsd:element name="IMachine_getExtraDataKeysResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::findUSBDeviceByAddress-->
-      <xsd:element name="IConsole_findUSBDeviceByAddress">
+      <!-- method IMachine::getExtraData-->
+      <xsd:element name="IMachine_getExtraData">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_findUSBDeviceByAddressResponse">
+      <xsd:element name="IMachine_getExtraDataResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::findUSBDeviceById-->
-      <xsd:element name="IConsole_findUSBDeviceById">
+      <!-- method IMachine::setExtraData-->
+      <xsd:element name="IMachine_setExtraData">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_findUSBDeviceByIdResponse">
+      <xsd:element name="IMachine_setExtraDataResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::createSharedFolder-->
-      <xsd:element name="IConsole_createSharedFolder">
+      <!-- method IMachine::getCPUProperty-->
+      <xsd:element name="IMachine_getCPUProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="hostPath" type="xsd:string"/>
-            <xsd:element name="writable" type="xsd:boolean"/>
-            <xsd:element name="automount" type="xsd:boolean"/>
+            <xsd:element name="property" type="vbox:CPUPropertyType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_createSharedFolderResponse">
+      <xsd:element name="IMachine_getCPUPropertyResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::removeSharedFolder-->
-      <xsd:element name="IConsole_removeSharedFolder">
+      <!-- method IMachine::setCPUProperty-->
+      <xsd:element name="IMachine_setCPUProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="property" type="vbox:CPUPropertyType"/>
+            <xsd:element name="value" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_removeSharedFolderResponse">
+      <xsd:element name="IMachine_setCPUPropertyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::teleport-->
-      <xsd:element name="IConsole_teleport">
+      <!-- method IMachine::getCPUIDLeafByOrdinal-->
+      <xsd:element name="IMachine_getCPUIDLeafByOrdinal">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostname" type="xsd:string"/>
-            <xsd:element name="tcpport" type="xsd:unsignedInt"/>
-            <xsd:element name="password" type="xsd:string"/>
-            <xsd:element name="maxDowntime" type="xsd:unsignedInt"/>
+            <xsd:element name="ordinal" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_teleportResponse">
+      <xsd:element name="IMachine_getCPUIDLeafByOrdinalResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
+            <xsd:element name="idxSub" type="xsd:unsignedInt"/>
+            <xsd:element name="valEax" type="xsd:unsignedInt"/>
+            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::addDiskEncryptionPassword-->
-      <xsd:element name="IConsole_addDiskEncryptionPassword">
+      <!-- method IMachine::getCPUIDLeaf-->
+      <xsd:element name="IMachine_getCPUIDLeaf">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
-            <xsd:element name="password" type="xsd:string"/>
-            <xsd:element name="clearOnSuspend" type="xsd:boolean"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
+            <xsd:element name="idxSub" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_addDiskEncryptionPasswordResponse">
+      <xsd:element name="IMachine_getCPUIDLeafResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="valEax" type="xsd:unsignedInt"/>
+            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::addDiskEncryptionPasswords-->
-      <xsd:element name="IConsole_addDiskEncryptionPasswords">
+      <!-- method IMachine::setCPUIDLeaf-->
+      <xsd:element name="IMachine_setCPUIDLeaf">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="ids" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="passwords" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="clearOnSuspend" type="xsd:boolean"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
+            <xsd:element name="idxSub" type="xsd:unsignedInt"/>
+            <xsd:element name="valEax" type="xsd:unsignedInt"/>
+            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_addDiskEncryptionPasswordsResponse">
+      <xsd:element name="IMachine_setCPUIDLeafResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::removeDiskEncryptionPassword-->
-      <xsd:element name="IConsole_removeDiskEncryptionPassword">
+      <!-- method IMachine::removeCPUIDLeaf-->
+      <xsd:element name="IMachine_removeCPUIDLeaf">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
+            <xsd:element name="idxSub" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_removeDiskEncryptionPasswordResponse">
+      <xsd:element name="IMachine_removeCPUIDLeafResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IConsole::clearAllDiskEncryptionPasswords-->
-      <xsd:element name="IConsole_clearAllDiskEncryptionPasswords">
+      <!-- method IMachine::removeAllCPUIDLeaves-->
+      <xsd:element name="IMachine_removeAllCPUIDLeaves">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IConsole_clearAllDiskEncryptionPasswordsResponse">
+      <xsd:element name="IMachine_removeAllCPUIDLeavesResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostNetworkInterface-->
-      <!-- readonly attribute IHostNetworkInterface::name-->
-      <xsd:element name="IHostNetworkInterface_getName">
+      <!-- method IMachine::getHWVirtExProperty-->
+      <xsd:element name="IMachine_getHWVirtExProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="property" type="vbox:HWVirtExPropertyType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getNameResponse">
+      <xsd:element name="IMachine_getHWVirtExPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::shortName-->
-      <xsd:element name="IHostNetworkInterface_getShortName">
+      <!-- method IMachine::setHWVirtExProperty-->
+      <xsd:element name="IMachine_setHWVirtExProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="property" type="vbox:HWVirtExPropertyType"/>
+            <xsd:element name="value" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getShortNameResponse">
+      <xsd:element name="IMachine_setHWVirtExPropertyResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::id-->
-      <xsd:element name="IHostNetworkInterface_getId">
+      <!-- method IMachine::setSettingsFilePath-->
+      <xsd:element name="IMachine_setSettingsFilePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="settingsFilePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getIdResponse">
+      <xsd:element name="IMachine_setSettingsFilePathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::networkName-->
-      <xsd:element name="IHostNetworkInterface_getNetworkName">
+      <!-- method IMachine::saveSettings-->
+      <xsd:element name="IMachine_saveSettings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getNetworkNameResponse">
+      <xsd:element name="IMachine_saveSettingsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::DHCPEnabled-->
-      <xsd:element name="IHostNetworkInterface_getDHCPEnabled">
+      <!-- method IMachine::discardSettings-->
+      <xsd:element name="IMachine_discardSettings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getDHCPEnabledResponse">
+      <xsd:element name="IMachine_discardSettingsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::IPAddress-->
-      <xsd:element name="IHostNetworkInterface_getIPAddress">
+      <!-- method IMachine::unregister-->
+      <xsd:element name="IMachine_unregister">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cleanupMode" type="vbox:CleanupMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getIPAddressResponse">
+      <xsd:element name="IMachine_unregisterResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::networkMask-->
-      <xsd:element name="IHostNetworkInterface_getNetworkMask">
+      <!-- method IMachine::deleteConfig-->
+      <xsd:element name="IMachine_deleteConfig">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="media" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getNetworkMaskResponse">
+      <xsd:element name="IMachine_deleteConfigResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::IPV6Supported-->
-      <xsd:element name="IHostNetworkInterface_getIPV6Supported">
+      <!-- method IMachine::exportTo-->
+      <xsd:element name="IMachine_exportTo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="appliance" type="xsd:string"/>
+            <xsd:element name="location" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getIPV6SupportedResponse">
+      <xsd:element name="IMachine_exportToResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::IPV6Address-->
-      <xsd:element name="IHostNetworkInterface_getIPV6Address">
+      <!-- method IMachine::findSnapshot-->
+      <xsd:element name="IMachine_findSnapshot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="nameOrId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getIPV6AddressResponse">
+      <xsd:element name="IMachine_findSnapshotResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::IPV6NetworkMaskPrefixLength-->
-      <xsd:element name="IHostNetworkInterface_getIPV6NetworkMaskPrefixLength">
+      <!-- method IMachine::createSharedFolder-->
+      <xsd:element name="IMachine_createSharedFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="hostPath" type="xsd:string"/>
+            <xsd:element name="writable" type="xsd:boolean"/>
+            <xsd:element name="automount" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthResponse">
+      <xsd:element name="IMachine_createSharedFolderResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::removeSharedFolder-->
+      <xsd:element name="IMachine_removeSharedFolder">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::hardwareAddress-->
-      <xsd:element name="IHostNetworkInterface_getHardwareAddress">
+      <xsd:element name="IMachine_removeSharedFolderResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IMachine::canShowConsoleWindow-->
+      <xsd:element name="IMachine_canShowConsoleWindow">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getHardwareAddressResponse">
+      <xsd:element name="IMachine_canShowConsoleWindowResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::mediumType-->
-      <xsd:element name="IHostNetworkInterface_getMediumType">
+      <!-- method IMachine::showConsoleWindow-->
+      <xsd:element name="IMachine_showConsoleWindow">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getMediumTypeResponse">
+      <xsd:element name="IMachine_showConsoleWindowResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceMediumType"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::status-->
-      <xsd:element name="IHostNetworkInterface_getStatus">
+      <!-- method IMachine::getGuestProperty-->
+      <xsd:element name="IMachine_getGuestProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getStatusResponse">
+      <xsd:element name="IMachine_getGuestPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceStatus"/>
+            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="timestamp" type="xsd:long"/>
+            <xsd:element name="flags" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostNetworkInterface::interfaceType-->
-      <xsd:element name="IHostNetworkInterface_getInterfaceType">
+      <!-- method IMachine::getGuestPropertyValue-->
+      <xsd:element name="IMachine_getGuestPropertyValue">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="property" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_getInterfaceTypeResponse">
+      <xsd:element name="IMachine_getGuestPropertyValueResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceType"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHostNetworkInterface::enableStaticIPConfig-->
-      <xsd:element name="IHostNetworkInterface_enableStaticIPConfig">
+      <!-- method IMachine::getGuestPropertyTimestamp-->
+      <xsd:element name="IMachine_getGuestPropertyTimestamp">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IPAddress" type="xsd:string"/>
-            <xsd:element name="networkMask" type="xsd:string"/>
+            <xsd:element name="property" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigResponse">
+      <xsd:element name="IMachine_getGuestPropertyTimestampResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHostNetworkInterface::enableStaticIPConfigV6-->
-      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigV6">
+      <!-- method IMachine::setGuestProperty-->
+      <xsd:element name="IMachine_setGuestProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IPV6Address" type="xsd:string"/>
-            <xsd:element name="IPV6NetworkMaskPrefixLength" type="xsd:unsignedInt"/>
+            <xsd:element name="property" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="flags" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigV6Response">
+      <xsd:element name="IMachine_setGuestPropertyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHostNetworkInterface::enableDynamicIPConfig-->
-      <xsd:element name="IHostNetworkInterface_enableDynamicIPConfig">
+      <!-- method IMachine::setGuestPropertyValue-->
+      <xsd:element name="IMachine_setGuestPropertyValue">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="property" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_enableDynamicIPConfigResponse">
+      <xsd:element name="IMachine_setGuestPropertyValueResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHostNetworkInterface::DHCPRediscover-->
-      <xsd:element name="IHostNetworkInterface_DHCPRediscover">
+      <!-- method IMachine::deleteGuestProperty-->
+      <xsd:element name="IMachine_deleteGuestProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNetworkInterface_DHCPRediscoverResponse">
+      <xsd:element name="IMachine_deleteGuestPropertyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostVideoInputDevice-->
-      <!-- readonly attribute IHostVideoInputDevice::name-->
-      <xsd:element name="IHostVideoInputDevice_getName">
+      <!-- method IMachine::enumerateGuestProperties-->
+      <xsd:element name="IMachine_enumerateGuestProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="patterns" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostVideoInputDevice_getNameResponse">
+      <xsd:element name="IMachine_enumerateGuestPropertiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="timestamps" minOccurs="0" maxOccurs="unbounded" type="xsd:long"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostVideoInputDevice::path-->
-      <xsd:element name="IHostVideoInputDevice_getPath">
+      <!-- method IMachine::querySavedGuestScreenInfo-->
+      <xsd:element name="IMachine_querySavedGuestScreenInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostVideoInputDevice_getPathResponse">
+      <xsd:element name="IMachine_querySavedGuestScreenInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="originX" type="xsd:unsignedInt"/>
+            <xsd:element name="originY" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostVideoInputDevice::alias-->
-      <xsd:element name="IHostVideoInputDevice_getAlias">
+      <!-- method IMachine::readSavedThumbnailToArray-->
+      <xsd:element name="IMachine_readSavedThumbnailToArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostVideoInputDevice_getAliasResponse">
+      <xsd:element name="IMachine_readSavedThumbnailToArrayResponse">
         <xsd:complexType>
           <xsd:sequence>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHost-->
-      <!-- readonly attribute IHost::DVDDrives-->
-      <xsd:element name="IHost_getDVDDrives">
+      <!-- method IMachine::querySavedScreenshotInfo-->
+      <xsd:element name="IMachine_querySavedScreenshotInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getDVDDrivesResponse">
+      <xsd:element name="IMachine_querySavedScreenshotInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::floppyDrives-->
-      <xsd:element name="IHost_getFloppyDrives">
+      <!-- method IMachine::readSavedScreenshotToArray-->
+      <xsd:element name="IMachine_readSavedScreenshotToArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getFloppyDrivesResponse">
+      <xsd:element name="IMachine_readSavedScreenshotToArrayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::USBDevices-->
-      <xsd:element name="IHost_getUSBDevices">
+      <!-- method IMachine::hotPlugCPU-->
+      <xsd:element name="IMachine_hotPlugCPU">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpu" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getUSBDevicesResponse">
+      <xsd:element name="IMachine_hotPlugCPUResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::USBDeviceFilters-->
-      <xsd:element name="IHost_getUSBDeviceFilters">
+      <!-- method IMachine::hotUnplugCPU-->
+      <xsd:element name="IMachine_hotUnplugCPU">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpu" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getUSBDeviceFiltersResponse">
+      <xsd:element name="IMachine_hotUnplugCPUResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::networkInterfaces-->
-      <xsd:element name="IHost_getNetworkInterfaces">
+      <!-- method IMachine::getCPUStatus-->
+      <xsd:element name="IMachine_getCPUStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpu" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getNetworkInterfacesResponse">
+      <xsd:element name="IMachine_getCPUStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::nameServers-->
-      <xsd:element name="IHost_getNameServers">
+      <!-- method IMachine::getEffectiveParavirtProvider-->
+      <xsd:element name="IMachine_getEffectiveParavirtProvider">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getNameServersResponse">
+      <xsd:element name="IMachine_getEffectiveParavirtProviderResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:ParavirtProvider"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::domainName-->
-      <xsd:element name="IHost_getDomainName">
+      <!-- method IMachine::queryLogFilename-->
+      <xsd:element name="IMachine_queryLogFilename">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getDomainNameResponse">
+      <xsd:element name="IMachine_queryLogFilenameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::searchStrings-->
-      <xsd:element name="IHost_getSearchStrings">
+      <!-- method IMachine::readLog-->
+      <xsd:element name="IMachine_readLog">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="idx" type="xsd:unsignedInt"/>
+            <xsd:element name="offset" type="xsd:long"/>
+            <xsd:element name="size" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getSearchStringsResponse">
+      <xsd:element name="IMachine_readLogResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::processorCount-->
-      <xsd:element name="IHost_getProcessorCount">
+      <!-- method IMachine::cloneTo-->
+      <xsd:element name="IMachine_cloneTo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
+            <xsd:element name="mode" type="vbox:CloneMode"/>
+            <xsd:element name="options" minOccurs="0" maxOccurs="unbounded" type="vbox:CloneOptions"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorCountResponse">
+      <xsd:element name="IMachine_cloneToResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::processorOnlineCount-->
-      <xsd:element name="IHost_getProcessorOnlineCount">
+      <!-- method IMachine::saveState-->
+      <xsd:element name="IMachine_saveState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorOnlineCountResponse">
+      <xsd:element name="IMachine_saveStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::processorCoreCount-->
-      <xsd:element name="IHost_getProcessorCoreCount">
+      <!-- method IMachine::adoptSavedState-->
+      <xsd:element name="IMachine_adoptSavedState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="savedStateFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorCoreCountResponse">
+      <xsd:element name="IMachine_adoptSavedStateResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::processorOnlineCoreCount-->
-      <xsd:element name="IHost_getProcessorOnlineCoreCount">
+      <!-- method IMachine::discardSavedState-->
+      <xsd:element name="IMachine_discardSavedState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="fRemoveFile" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorOnlineCoreCountResponse">
+      <xsd:element name="IMachine_discardSavedStateResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::memorySize-->
-      <xsd:element name="IHost_getMemorySize">
+      <!-- method IMachine::takeSnapshot-->
+      <xsd:element name="IMachine_takeSnapshot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="description" type="xsd:string"/>
+            <xsd:element name="pause" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getMemorySizeResponse">
+      <xsd:element name="IMachine_takeSnapshotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::memoryAvailable-->
-      <xsd:element name="IHost_getMemoryAvailable">
+      <!-- method IMachine::deleteSnapshot-->
+      <xsd:element name="IMachine_deleteSnapshot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getMemoryAvailableResponse">
+      <xsd:element name="IMachine_deleteSnapshotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::operatingSystem-->
-      <xsd:element name="IHost_getOperatingSystem">
+      <!-- method IMachine::deleteSnapshotAndAllChildren-->
+      <xsd:element name="IMachine_deleteSnapshotAndAllChildren">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getOperatingSystemResponse">
+      <xsd:element name="IMachine_deleteSnapshotAndAllChildrenResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::OSVersion-->
-      <xsd:element name="IHost_getOSVersion">
+      <!-- method IMachine::deleteSnapshotRange-->
+      <xsd:element name="IMachine_deleteSnapshotRange">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="startId" type="xsd:string"/>
+            <xsd:element name="endId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getOSVersionResponse">
+      <xsd:element name="IMachine_deleteSnapshotRangeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::UTCTime-->
-      <xsd:element name="IHost_getUTCTime">
+      <!-- method IMachine::restoreSnapshot-->
+      <xsd:element name="IMachine_restoreSnapshot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="snapshot" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getUTCTimeResponse">
+      <xsd:element name="IMachine_restoreSnapshotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::acceleration3DAvailable-->
-      <xsd:element name="IHost_getAcceleration3DAvailable">
+      <!-- method IMachine::applyDefaults-->
+      <xsd:element name="IMachine_applyDefaults">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="flags" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getAcceleration3DAvailableResponse">
+      <xsd:element name="IMachine_applyDefaultsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHost::videoInputDevices-->
-      <xsd:element name="IHost_getVideoInputDevices">
+      <!--Interface IEmulatedUSB-->
+      <!-- readonly attribute IEmulatedUSB::webcams-->
+      <xsd:element name="IEmulatedUSB_getWebcams">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getVideoInputDevicesResponse">
+      <xsd:element name="IEmulatedUSB_getWebcamsResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::getProcessorSpeed-->
-      <xsd:element name="IHost_getProcessorSpeed">
+      <!-- method IEmulatedUSB::webcamAttach-->
+      <xsd:element name="IEmulatedUSB_webcamAttach">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="settings" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorSpeedResponse">
+      <xsd:element name="IEmulatedUSB_webcamAttachResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::getProcessorFeature-->
-      <xsd:element name="IHost_getProcessorFeature">
+      <!-- method IEmulatedUSB::webcamDetach-->
+      <xsd:element name="IEmulatedUSB_webcamDetach">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="feature" type="vbox:ProcessorFeature"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorFeatureResponse">
+      <xsd:element name="IEmulatedUSB_webcamDetachResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::getProcessorDescription-->
-      <xsd:element name="IHost_getProcessorDescription">
+      <!--Interface IConsole-->
+      <!-- readonly attribute IConsole::machine-->
+      <xsd:element name="IConsole_getMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorDescriptionResponse">
+      <xsd:element name="IConsole_getMachineResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::getProcessorCPUIDLeaf-->
-      <xsd:element name="IHost_getProcessorCPUIDLeaf">
+      <!-- readonly attribute IConsole::state-->
+      <xsd:element name="IConsole_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="leaf" type="xsd:unsignedInt"/>
-            <xsd:element name="subLeaf" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_getProcessorCPUIDLeafResponse">
+      <xsd:element name="IConsole_getStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="valEax" type="xsd:unsignedInt"/>
-            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
-            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:MachineState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::createHostOnlyNetworkInterface-->
-      <xsd:element name="IHost_createHostOnlyNetworkInterface">
+      <!-- readonly attribute IConsole::guest-->
+      <xsd:element name="IConsole_getGuest">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_createHostOnlyNetworkInterfaceResponse">
+      <xsd:element name="IConsole_getGuestResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="hostInterface" type="xsd:string"/>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::removeHostOnlyNetworkInterface-->
-      <xsd:element name="IHost_removeHostOnlyNetworkInterface">
+      <!-- readonly attribute IConsole::keyboard-->
+      <xsd:element name="IConsole_getKeyboard">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_removeHostOnlyNetworkInterfaceResponse">
+      <xsd:element name="IConsole_getKeyboardResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::createUSBDeviceFilter-->
-      <xsd:element name="IHost_createUSBDeviceFilter">
+      <!-- readonly attribute IConsole::mouse-->
+      <xsd:element name="IConsole_getMouse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_createUSBDeviceFilterResponse">
+      <xsd:element name="IConsole_getMouseResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::insertUSBDeviceFilter-->
-      <xsd:element name="IHost_insertUSBDeviceFilter">
+      <!-- readonly attribute IConsole::display-->
+      <xsd:element name="IConsole_getDisplay">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
-            <xsd:element name="filter" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_insertUSBDeviceFilterResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IHost::removeUSBDeviceFilter-->
-      <xsd:element name="IHost_removeUSBDeviceFilter">
+      <xsd:element name="IConsole_getDisplayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_removeUSBDeviceFilterResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IHost::findHostDVDDrive-->
-      <xsd:element name="IHost_findHostDVDDrive">
+      <!-- readonly attribute IConsole::debugger-->
+      <xsd:element name="IConsole_getDebugger">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findHostDVDDriveResponse">
+      <xsd:element name="IConsole_getDebuggerResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findHostFloppyDrive-->
-      <xsd:element name="IHost_findHostFloppyDrive">
+      <!-- readonly attribute IConsole::USBDevices-->
+      <xsd:element name="IConsole_getUSBDevices">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findHostFloppyDriveResponse">
+      <xsd:element name="IConsole_getUSBDevicesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findHostNetworkInterfaceByName-->
-      <xsd:element name="IHost_findHostNetworkInterfaceByName">
+      <!-- readonly attribute IConsole::remoteUSBDevices-->
+      <xsd:element name="IConsole_getRemoteUSBDevices">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findHostNetworkInterfaceByNameResponse">
+      <xsd:element name="IConsole_getRemoteUSBDevicesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findHostNetworkInterfaceById-->
-      <xsd:element name="IHost_findHostNetworkInterfaceById">
+      <!-- readonly attribute IConsole::sharedFolders-->
+      <xsd:element name="IConsole_getSharedFolders">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findHostNetworkInterfaceByIdResponse">
+      <xsd:element name="IConsole_getSharedFoldersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:ISharedFolder"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findHostNetworkInterfacesOfType-->
-      <xsd:element name="IHost_findHostNetworkInterfacesOfType">
+      <!-- readonly attribute IConsole::VRDEServerInfo-->
+      <xsd:element name="IConsole_getVRDEServerInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:HostNetworkInterfaceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findHostNetworkInterfacesOfTypeResponse">
+      <xsd:element name="IConsole_getVRDEServerInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:IVRDEServerInfo"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findUSBDeviceById-->
-      <xsd:element name="IHost_findUSBDeviceById">
+      <!-- readonly attribute IConsole::eventSource-->
+      <xsd:element name="IConsole_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findUSBDeviceByIdResponse">
+      <xsd:element name="IConsole_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::findUSBDeviceByAddress-->
-      <xsd:element name="IHost_findUSBDeviceByAddress">
+      <!-- readonly attribute IConsole::attachedPCIDevices-->
+      <xsd:element name="IConsole_getAttachedPCIDevices">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_findUSBDeviceByAddressResponse">
+      <xsd:element name="IConsole_getAttachedPCIDevicesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IPCIDeviceAttachment"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IHost::generateMACAddress-->
-      <xsd:element name="IHost_generateMACAddress">
+      <!-- read/write attribute IConsole::useHostClipboard-->
+      <xsd:element name="IConsole_getUseHostClipboard">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHost_generateMACAddressResponse">
+      <xsd:element name="IConsole_getUseHostClipboardResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISystemProperties-->
-      <!-- readonly attribute ISystemProperties::minGuestRAM-->
-      <xsd:element name="ISystemProperties_getMinGuestRAM">
+      <xsd:element name="IConsole_setUseHostClipboard">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="useHostClipboard" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMinGuestRAMResponse">
+      <xsd:element name="IConsole_setUseHostClipboardResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::maxGuestRAM-->
-      <xsd:element name="ISystemProperties_getMaxGuestRAM">
+      <!-- readonly attribute IConsole::emulatedUSB-->
+      <xsd:element name="IConsole_getEmulatedUSB">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxGuestRAMResponse">
+      <xsd:element name="IConsole_getEmulatedUSBResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::minGuestVRAM-->
-      <xsd:element name="ISystemProperties_getMinGuestVRAM">
+      <!-- method IConsole::powerUp-->
+      <xsd:element name="IConsole_powerUp">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMinGuestVRAMResponse">
+      <xsd:element name="IConsole_powerUpResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::maxGuestVRAM-->
-      <xsd:element name="ISystemProperties_getMaxGuestVRAM">
+      <!-- method IConsole::powerUpPaused-->
+      <xsd:element name="IConsole_powerUpPaused">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxGuestVRAMResponse">
+      <xsd:element name="IConsole_powerUpPausedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::minGuestCPUCount-->
-      <xsd:element name="ISystemProperties_getMinGuestCPUCount">
+      <!-- method IConsole::powerDown-->
+      <xsd:element name="IConsole_powerDown">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMinGuestCPUCountResponse">
+      <xsd:element name="IConsole_powerDownResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::maxGuestCPUCount-->
-      <xsd:element name="ISystemProperties_getMaxGuestCPUCount">
+      <!-- method IConsole::reset-->
+      <xsd:element name="IConsole_reset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxGuestCPUCountResponse">
+      <xsd:element name="IConsole_resetResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::maxGuestMonitors-->
-      <xsd:element name="ISystemProperties_getMaxGuestMonitors">
+      <!-- method IConsole::pause-->
+      <xsd:element name="IConsole_pause">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxGuestMonitorsResponse">
+      <xsd:element name="IConsole_pauseResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::infoVDSize-->
-      <xsd:element name="ISystemProperties_getInfoVDSize">
+      <!-- method IConsole::resume-->
+      <xsd:element name="IConsole_resume">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getInfoVDSizeResponse">
+      <xsd:element name="IConsole_resumeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::serialPortCount-->
-      <xsd:element name="ISystemProperties_getSerialPortCount">
+      <!-- method IConsole::powerButton-->
+      <xsd:element name="IConsole_powerButton">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getSerialPortCountResponse">
+      <xsd:element name="IConsole_powerButtonResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::parallelPortCount-->
-      <xsd:element name="ISystemProperties_getParallelPortCount">
+      <!-- method IConsole::sleepButton-->
+      <xsd:element name="IConsole_sleepButton">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getParallelPortCountResponse">
+      <xsd:element name="IConsole_sleepButtonResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::maxBootPosition-->
-      <xsd:element name="ISystemProperties_getMaxBootPosition">
+      <!-- method IConsole::getPowerButtonHandled-->
+      <xsd:element name="IConsole_getPowerButtonHandled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxBootPositionResponse">
+      <xsd:element name="IConsole_getPowerButtonHandledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::rawModeSupported-->
-      <xsd:element name="ISystemProperties_getRawModeSupported">
+      <!-- method IConsole::getGuestEnteredACPIMode-->
+      <xsd:element name="IConsole_getGuestEnteredACPIMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getRawModeSupportedResponse">
+      <xsd:element name="IConsole_getGuestEnteredACPIModeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::exclusiveHwVirt-->
-      <xsd:element name="ISystemProperties_getExclusiveHwVirt">
+      <!-- method IConsole::getDeviceActivity-->
+      <xsd:element name="IConsole_getDeviceActivity">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getExclusiveHwVirtResponse">
+      <xsd:element name="IConsole_getDeviceActivityResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceActivity"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setExclusiveHwVirt">
+      <!-- method IConsole::attachUSBDevice-->
+      <xsd:element name="IConsole_attachUSBDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="exclusiveHwVirt" type="xsd:boolean"/>
+            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="captureFilename" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setExclusiveHwVirtResponse">
+      <xsd:element name="IConsole_attachUSBDeviceResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::defaultMachineFolder-->
-      <xsd:element name="ISystemProperties_getDefaultMachineFolder">
+      <!-- method IConsole::detachUSBDevice-->
+      <xsd:element name="IConsole_detachUSBDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultMachineFolderResponse">
+      <xsd:element name="IConsole_detachUSBDeviceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultMachineFolder">
+      <!-- method IConsole::findUSBDeviceByAddress-->
+      <xsd:element name="IConsole_findUSBDeviceByAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultMachineFolder" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultMachineFolderResponse">
+      <xsd:element name="IConsole_findUSBDeviceByAddressResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::loggingLevel-->
-      <xsd:element name="ISystemProperties_getLoggingLevel">
+      <!-- method IConsole::findUSBDeviceById-->
+      <xsd:element name="IConsole_findUSBDeviceById">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getLoggingLevelResponse">
+      <xsd:element name="IConsole_findUSBDeviceByIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setLoggingLevel">
+      <!-- method IConsole::createSharedFolder-->
+      <xsd:element name="IConsole_createSharedFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="loggingLevel" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="hostPath" type="xsd:string"/>
+            <xsd:element name="writable" type="xsd:boolean"/>
+            <xsd:element name="automount" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setLoggingLevelResponse">
+      <xsd:element name="IConsole_createSharedFolderResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::mediumFormats-->
-      <xsd:element name="ISystemProperties_getMediumFormats">
+      <!-- method IConsole::removeSharedFolder-->
+      <xsd:element name="IConsole_removeSharedFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMediumFormatsResponse">
+      <xsd:element name="IConsole_removeSharedFolderResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::defaultHardDiskFormat-->
-      <xsd:element name="ISystemProperties_getDefaultHardDiskFormat">
+      <!-- method IConsole::teleport-->
+      <xsd:element name="IConsole_teleport">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="hostname" type="xsd:string"/>
+            <xsd:element name="tcpport" type="xsd:unsignedInt"/>
+            <xsd:element name="password" type="xsd:string"/>
+            <xsd:element name="maxDowntime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultHardDiskFormatResponse">
+      <xsd:element name="IConsole_teleportResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultHardDiskFormat">
+      <!-- method IConsole::addDiskEncryptionPassword-->
+      <xsd:element name="IConsole_addDiskEncryptionPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultHardDiskFormat" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="password" type="xsd:string"/>
+            <xsd:element name="clearOnSuspend" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultHardDiskFormatResponse">
+      <xsd:element name="IConsole_addDiskEncryptionPasswordResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::freeDiskSpaceWarning-->
-      <xsd:element name="ISystemProperties_getFreeDiskSpaceWarning">
+      <!-- method IConsole::addDiskEncryptionPasswords-->
+      <xsd:element name="IConsole_addDiskEncryptionPasswords">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="ids" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="passwords" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="clearOnSuspend" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getFreeDiskSpaceWarningResponse">
+      <xsd:element name="IConsole_addDiskEncryptionPasswordsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpaceWarning">
+      <!-- method IConsole::removeDiskEncryptionPassword-->
+      <xsd:element name="IConsole_removeDiskEncryptionPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="freeDiskSpaceWarning" type="xsd:long"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpaceWarningResponse">
+      <xsd:element name="IConsole_removeDiskEncryptionPasswordResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::freeDiskSpacePercentWarning-->
-      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentWarning">
+      <!-- method IConsole::clearAllDiskEncryptionPasswords-->
+      <xsd:element name="IConsole_clearAllDiskEncryptionPasswords">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentWarningResponse">
+      <xsd:element name="IConsole_clearAllDiskEncryptionPasswordsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentWarning">
+      <!--Interface IHostNetworkInterface-->
+      <!-- readonly attribute IHostNetworkInterface::name-->
+      <xsd:element name="IHostNetworkInterface_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="freeDiskSpacePercentWarning" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentWarningResponse">
+      <xsd:element name="IHostNetworkInterface_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::freeDiskSpaceError-->
-      <xsd:element name="ISystemProperties_getFreeDiskSpaceError">
+      <!-- readonly attribute IHostNetworkInterface::shortName-->
+      <xsd:element name="IHostNetworkInterface_getShortName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getFreeDiskSpaceErrorResponse">
+      <xsd:element name="IHostNetworkInterface_getShortNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpaceError">
+      <!-- readonly attribute IHostNetworkInterface::id-->
+      <xsd:element name="IHostNetworkInterface_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="freeDiskSpaceError" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpaceErrorResponse">
+      <xsd:element name="IHostNetworkInterface_getIdResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::freeDiskSpacePercentError-->
-      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentError">
+      <!-- readonly attribute IHostNetworkInterface::networkName-->
+      <xsd:element name="IHostNetworkInterface_getNetworkName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentErrorResponse">
+      <xsd:element name="IHostNetworkInterface_getNetworkNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentError">
+      <!-- readonly attribute IHostNetworkInterface::DHCPEnabled-->
+      <xsd:element name="IHostNetworkInterface_getDHCPEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="freeDiskSpacePercentError" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentErrorResponse">
+      <xsd:element name="IHostNetworkInterface_getDHCPEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::VRDEAuthLibrary-->
-      <xsd:element name="ISystemProperties_getVRDEAuthLibrary">
+      <!-- readonly attribute IHostNetworkInterface::IPAddress-->
+      <xsd:element name="IHostNetworkInterface_getIPAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getVRDEAuthLibraryResponse">
+      <xsd:element name="IHostNetworkInterface_getIPAddressResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setVRDEAuthLibrary">
+      <!-- readonly attribute IHostNetworkInterface::networkMask-->
+      <xsd:element name="IHostNetworkInterface_getNetworkMask">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="VRDEAuthLibrary" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setVRDEAuthLibraryResponse">
+      <xsd:element name="IHostNetworkInterface_getNetworkMaskResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::webServiceAuthLibrary-->
-      <xsd:element name="ISystemProperties_getWebServiceAuthLibrary">
+      <!-- readonly attribute IHostNetworkInterface::IPV6Supported-->
+      <xsd:element name="IHostNetworkInterface_getIPV6Supported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getWebServiceAuthLibraryResponse">
+      <xsd:element name="IHostNetworkInterface_getIPV6SupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setWebServiceAuthLibrary">
+      <!-- readonly attribute IHostNetworkInterface::IPV6Address-->
+      <xsd:element name="IHostNetworkInterface_getIPV6Address">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="webServiceAuthLibrary" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setWebServiceAuthLibraryResponse">
+      <xsd:element name="IHostNetworkInterface_getIPV6AddressResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::defaultVRDEExtPack-->
-      <xsd:element name="ISystemProperties_getDefaultVRDEExtPack">
+      <!-- readonly attribute IHostNetworkInterface::IPV6NetworkMaskPrefixLength-->
+      <xsd:element name="IHostNetworkInterface_getIPV6NetworkMaskPrefixLength">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultVRDEExtPackResponse">
+      <xsd:element name="IHostNetworkInterface_getIPV6NetworkMaskPrefixLengthResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultVRDEExtPack">
+      <!-- readonly attribute IHostNetworkInterface::hardwareAddress-->
+      <xsd:element name="IHostNetworkInterface_getHardwareAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultVRDEExtPack" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultVRDEExtPackResponse">
+      <xsd:element name="IHostNetworkInterface_getHardwareAddressResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::logHistoryCount-->
-      <xsd:element name="ISystemProperties_getLogHistoryCount">
+      <!-- readonly attribute IHostNetworkInterface::mediumType-->
+      <xsd:element name="IHostNetworkInterface_getMediumType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getLogHistoryCountResponse">
+      <xsd:element name="IHostNetworkInterface_getMediumTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceMediumType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setLogHistoryCount">
+      <!-- readonly attribute IHostNetworkInterface::status-->
+      <xsd:element name="IHostNetworkInterface_getStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logHistoryCount" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setLogHistoryCountResponse">
+      <xsd:element name="IHostNetworkInterface_getStatusResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceStatus"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::defaultAudioDriver-->
-      <xsd:element name="ISystemProperties_getDefaultAudioDriver">
+      <!-- readonly attribute IHostNetworkInterface::interfaceType-->
+      <xsd:element name="IHostNetworkInterface_getInterfaceType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultAudioDriverResponse">
+      <xsd:element name="IHostNetworkInterface_getInterfaceTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AudioDriverType"/>
+            <xsd:element name="returnval" type="vbox:HostNetworkInterfaceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::autostartDatabasePath-->
-      <xsd:element name="ISystemProperties_getAutostartDatabasePath">
+      <!-- readonly attribute IHostNetworkInterface::wireless-->
+      <xsd:element name="IHostNetworkInterface_getWireless">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getAutostartDatabasePathResponse">
+      <xsd:element name="IHostNetworkInterface_getWirelessResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setAutostartDatabasePath">
+      <!-- method IHostNetworkInterface::enableStaticIPConfig-->
+      <xsd:element name="IHostNetworkInterface_enableStaticIPConfig">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="autostartDatabasePath" type="xsd:string"/>
+            <xsd:element name="IPAddress" type="xsd:string"/>
+            <xsd:element name="networkMask" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setAutostartDatabasePathResponse">
+      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::defaultAdditionsISO-->
-      <xsd:element name="ISystemProperties_getDefaultAdditionsISO">
+      <!-- method IHostNetworkInterface::enableStaticIPConfigV6-->
+      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigV6">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="IPV6Address" type="xsd:string"/>
+            <xsd:element name="IPV6NetworkMaskPrefixLength" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultAdditionsISOResponse">
+      <xsd:element name="IHostNetworkInterface_enableStaticIPConfigV6Response">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultAdditionsISO">
+      <!-- method IHostNetworkInterface::enableDynamicIPConfig-->
+      <xsd:element name="IHostNetworkInterface_enableDynamicIPConfig">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultAdditionsISO" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultAdditionsISOResponse">
+      <xsd:element name="IHostNetworkInterface_enableDynamicIPConfigResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISystemProperties::defaultFrontend-->
-      <xsd:element name="ISystemProperties_getDefaultFrontend">
+      <!-- method IHostNetworkInterface::DHCPRediscover-->
+      <xsd:element name="IHostNetworkInterface_DHCPRediscover">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultFrontendResponse">
+      <xsd:element name="IHostNetworkInterface_DHCPRediscoverResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultFrontend">
+      <!--Interface IHostVideoInputDevice-->
+      <!-- readonly attribute IHostVideoInputDevice::name-->
+      <xsd:element name="IHostVideoInputDevice_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="defaultFrontend" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_setDefaultFrontendResponse">
+      <xsd:element name="IHostVideoInputDevice_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISystemProperties::screenShotFormats-->
-      <xsd:element name="ISystemProperties_getScreenShotFormats">
+      <!-- readonly attribute IHostVideoInputDevice::path-->
+      <xsd:element name="IHostVideoInputDevice_getPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getScreenShotFormatsResponse">
+      <xsd:element name="IHostVideoInputDevice_getPathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:BitmapFormat"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxNetworkAdapters-->
-      <xsd:element name="ISystemProperties_getMaxNetworkAdapters">
+      <!-- readonly attribute IHostVideoInputDevice::alias-->
+      <xsd:element name="IHostVideoInputDevice_getAlias">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="chipset" type="vbox:ChipsetType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersResponse">
+      <xsd:element name="IHostVideoInputDevice_getAliasResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxNetworkAdaptersOfType-->
-      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersOfType">
+      <!--Interface IHost-->
+      <!-- readonly attribute IHost::DVDDrives-->
+      <xsd:element name="IHost_getDVDDrives">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="chipset" type="vbox:ChipsetType"/>
-            <xsd:element name="type" type="vbox:NetworkAttachmentType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersOfTypeResponse">
+      <xsd:element name="IHost_getDVDDrivesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxDevicesPerPortForStorageBus-->
-      <xsd:element name="ISystemProperties_getMaxDevicesPerPortForStorageBus">
+      <!-- readonly attribute IHost::floppyDrives-->
+      <xsd:element name="IHost_getFloppyDrives">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxDevicesPerPortForStorageBusResponse">
+      <xsd:element name="IHost_getFloppyDrivesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMinPortCountForStorageBus-->
-      <xsd:element name="ISystemProperties_getMinPortCountForStorageBus">
+      <!-- readonly attribute IHost::USBDevices-->
+      <xsd:element name="IHost_getUSBDevices">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMinPortCountForStorageBusResponse">
+      <xsd:element name="IHost_getUSBDevicesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxPortCountForStorageBus-->
-      <xsd:element name="ISystemProperties_getMaxPortCountForStorageBus">
+      <!-- readonly attribute IHost::USBDeviceFilters-->
+      <xsd:element name="IHost_getUSBDeviceFilters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxPortCountForStorageBusResponse">
+      <xsd:element name="IHost_getUSBDeviceFiltersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxInstancesOfStorageBus-->
-      <xsd:element name="ISystemProperties_getMaxInstancesOfStorageBus">
+      <!-- readonly attribute IHost::networkInterfaces-->
+      <xsd:element name="IHost_getNetworkInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="chipset" type="vbox:ChipsetType"/>
-            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxInstancesOfStorageBusResponse">
+      <xsd:element name="IHost_getNetworkInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getDeviceTypesForStorageBus-->
-      <xsd:element name="ISystemProperties_getDeviceTypesForStorageBus">
+      <!-- readonly attribute IHost::nameServers-->
+      <xsd:element name="IHost_getNameServers">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDeviceTypesForStorageBusResponse">
+      <xsd:element name="IHost_getNameServersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getDefaultIoCacheSettingForStorageController-->
-      <xsd:element name="ISystemProperties_getDefaultIoCacheSettingForStorageController">
+      <!-- readonly attribute IHost::domainName-->
+      <xsd:element name="IHost_getDomainName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getDefaultIoCacheSettingForStorageControllerResponse">
+      <xsd:element name="IHost_getDomainNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getStorageControllerHotplugCapable-->
-      <xsd:element name="ISystemProperties_getStorageControllerHotplugCapable">
+      <!-- readonly attribute IHost::searchStrings-->
+      <xsd:element name="IHost_getSearchStrings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getStorageControllerHotplugCapableResponse">
+      <xsd:element name="IHost_getSearchStringsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISystemProperties::getMaxInstancesOfUSBControllerType-->
-      <xsd:element name="ISystemProperties_getMaxInstancesOfUSBControllerType">
+      <!-- readonly attribute IHost::processorCount-->
+      <xsd:element name="IHost_getProcessorCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="chipset" type="vbox:ChipsetType"/>
-            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISystemProperties_getMaxInstancesOfUSBControllerTypeResponse">
+      <xsd:element name="IHost_getProcessorCountResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDnDBase-->
-      <!-- readonly attribute IDnDBase::formats-->
-      <xsd:element name="IDnDBase_getFormats">
+      <!-- readonly attribute IHost::processorOnlineCount-->
+      <xsd:element name="IHost_getProcessorOnlineCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDBase_getFormatsResponse">
+      <xsd:element name="IHost_getProcessorOnlineCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IDnDBase::protocolVersion-->
-      <xsd:element name="IDnDBase_getProtocolVersion">
+      <!-- readonly attribute IHost::processorCoreCount-->
+      <xsd:element name="IHost_getProcessorCoreCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDBase_getProtocolVersionResponse">
+      <xsd:element name="IHost_getProcessorCoreCountResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDBase::isFormatSupported-->
-      <xsd:element name="IDnDBase_isFormatSupported">
+      <!-- readonly attribute IHost::processorOnlineCoreCount-->
+      <xsd:element name="IHost_getProcessorOnlineCoreCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="format" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDBase_isFormatSupportedResponse">
+      <xsd:element name="IHost_getProcessorOnlineCoreCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDBase::addFormats-->
-      <xsd:element name="IDnDBase_addFormats">
+      <!-- readonly attribute IHost::memorySize-->
+      <xsd:element name="IHost_getMemorySize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDBase_addFormatsResponse">
+      <xsd:element name="IHost_getMemorySizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDBase::removeFormats-->
-      <xsd:element name="IDnDBase_removeFormats">
+      <!-- readonly attribute IHost::memoryAvailable-->
+      <xsd:element name="IHost_getMemoryAvailable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDBase_removeFormatsResponse">
+      <xsd:element name="IHost_getMemoryAvailableResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDnDSource-->
-      <!-- method IDnDSource::dragIsPending-->
-      <xsd:element name="IDnDSource_dragIsPending">
+      <!-- readonly attribute IHost::operatingSystem-->
+      <xsd:element name="IHost_getOperatingSystem">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDSource_dragIsPendingResponse">
+      <xsd:element name="IHost_getOperatingSystemResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
-            <xsd:element name="returnval" type="vbox:DnDAction"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDSource::drop-->
-      <xsd:element name="IDnDSource_drop">
+      <!-- readonly attribute IHost::OSVersion-->
+      <xsd:element name="IHost_getOSVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="format" type="xsd:string"/>
-            <xsd:element name="action" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDSource_dropResponse">
+      <xsd:element name="IHost_getOSVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDSource::receiveData-->
-      <xsd:element name="IDnDSource_receiveData">
+      <!-- readonly attribute IHost::UTCTime-->
+      <xsd:element name="IHost_getUTCTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDSource_receiveDataResponse">
+      <xsd:element name="IHost_getUTCTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestDnDSource-->
-      <!-- readonly attribute IGuestDnDSource::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute IHost::acceleration3DAvailable-->
+      <xsd:element name="IHost_getAcceleration3DAvailable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IHost_getAcceleration3DAvailableResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDnDTarget-->
-      <!-- method IDnDTarget::enter-->
-      <xsd:element name="IDnDTarget_enter">
+      <!-- readonly attribute IHost::videoInputDevices-->
+      <xsd:element name="IHost_getVideoInputDevices">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
-            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_enterResponse">
+      <xsd:element name="IHost_getVideoInputDevicesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DnDAction"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDTarget::move-->
-      <xsd:element name="IDnDTarget_move">
+      <!-- method IHost::getProcessorSpeed-->
+      <xsd:element name="IHost_getProcessorSpeed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
-            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_moveResponse">
+      <xsd:element name="IHost_getProcessorSpeedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DnDAction"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDTarget::leave-->
-      <xsd:element name="IDnDTarget_leave">
+      <!-- method IHost::getProcessorFeature-->
+      <xsd:element name="IHost_getProcessorFeature">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="feature" type="vbox:ProcessorFeature"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_leaveResponse">
+      <xsd:element name="IHost_getProcessorFeatureResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDTarget::drop-->
-      <xsd:element name="IDnDTarget_drop">
+      <!-- method IHost::getProcessorDescription-->
+      <xsd:element name="IHost_getProcessorDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
-            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
-            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_dropResponse">
+      <xsd:element name="IHost_getProcessorDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="format" type="xsd:string"/>
-            <xsd:element name="returnval" type="vbox:DnDAction"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDTarget::sendData-->
-      <xsd:element name="IDnDTarget_sendData">
+      <!-- method IHost::getProcessorCPUIDLeaf-->
+      <xsd:element name="IHost_getProcessorCPUIDLeaf">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="format" type="xsd:string"/>
-            <xsd:element name="data" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="leaf" type="xsd:unsignedInt"/>
+            <xsd:element name="subLeaf" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_sendDataResponse">
+      <xsd:element name="IHost_getProcessorCPUIDLeafResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="valEax" type="xsd:unsignedInt"/>
+            <xsd:element name="valEbx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEcx" type="xsd:unsignedInt"/>
+            <xsd:element name="valEdx" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDnDTarget::cancel-->
-      <xsd:element name="IDnDTarget_cancel">
+      <!-- method IHost::createHostOnlyNetworkInterface-->
+      <xsd:element name="IHost_createHostOnlyNetworkInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDTarget_cancelResponse">
+      <xsd:element name="IHost_createHostOnlyNetworkInterfaceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="hostInterface" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestDnDTarget-->
-      <!-- readonly attribute IGuestDnDTarget::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- method IHost::removeHostOnlyNetworkInterface-->
+      <xsd:element name="IHost_removeHostOnlyNetworkInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IHost_removeHostOnlyNetworkInterfaceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestSession-->
-      <!-- readonly attribute IGuestSession::user-->
-      <xsd:element name="IGuestSession_getUser">
+      <!-- method IHost::createUSBDeviceFilter-->
+      <xsd:element name="IHost_createUSBDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getUserResponse">
+      <xsd:element name="IHost_createUSBDeviceFilterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::domain-->
-      <xsd:element name="IGuestSession_getDomain">
+      <!-- method IHost::insertUSBDeviceFilter-->
+      <xsd:element name="IHost_insertUSBDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
+            <xsd:element name="filter" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getDomainResponse">
+      <xsd:element name="IHost_insertUSBDeviceFilterResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IHost::removeUSBDeviceFilter-->
+      <xsd:element name="IHost_removeUSBDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::name-->
-      <xsd:element name="IGuestSession_getName">
+      <xsd:element name="IHost_removeUSBDeviceFilterResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IHost::findHostDVDDrive-->
+      <xsd:element name="IHost_findHostDVDDrive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getNameResponse">
+      <xsd:element name="IHost_findHostDVDDriveResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::id-->
-      <xsd:element name="IGuestSession_getId">
+      <!-- method IHost::findHostFloppyDrive-->
+      <xsd:element name="IHost_findHostFloppyDrive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getIdResponse">
+      <xsd:element name="IHost_findHostFloppyDriveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IGuestSession::timeout-->
-      <xsd:element name="IGuestSession_getTimeout">
+      <!-- method IHost::findHostNetworkInterfaceByName-->
+      <xsd:element name="IHost_findHostNetworkInterfaceByName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getTimeoutResponse">
+      <xsd:element name="IHost_findHostNetworkInterfaceByNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setTimeout">
+      <!-- method IHost::findHostNetworkInterfaceById-->
+      <xsd:element name="IHost_findHostNetworkInterfaceById">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:unsignedInt"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setTimeoutResponse">
+      <xsd:element name="IHost_findHostNetworkInterfaceByIdResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::protocolVersion-->
-      <xsd:element name="IGuestSession_getProtocolVersion">
+      <!-- method IHost::findHostNetworkInterfacesOfType-->
+      <xsd:element name="IHost_findHostNetworkInterfacesOfType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:HostNetworkInterfaceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getProtocolVersionResponse">
+      <xsd:element name="IHost_findHostNetworkInterfacesOfTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::status-->
-      <xsd:element name="IGuestSession_getStatus">
+      <!-- method IHost::findUSBDeviceById-->
+      <xsd:element name="IHost_findUSBDeviceById">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getStatusResponse">
+      <xsd:element name="IHost_findUSBDeviceByIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestSessionStatus"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IGuestSession::environmentChanges-->
-      <xsd:element name="IGuestSession_getEnvironmentChanges">
+      <!-- method IHost::findUSBDeviceByAddress-->
+      <xsd:element name="IHost_findUSBDeviceByAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getEnvironmentChangesResponse">
+      <xsd:element name="IHost_findUSBDeviceByAddressResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setEnvironmentChanges">
+      <!-- method IHost::generateMACAddress-->
+      <xsd:element name="IHost_generateMACAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setEnvironmentChangesResponse">
+      <xsd:element name="IHost_generateMACAddressResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::environmentBase-->
-      <xsd:element name="IGuestSession_getEnvironmentBase">
+      <!-- method IHost::addUSBDeviceSource-->
+      <xsd:element name="IHost_addUSBDeviceSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="backend" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
+            <xsd:element name="address" type="xsd:string"/>
+            <xsd:element name="propertyNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="propertyValues" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getEnvironmentBaseResponse">
+      <xsd:element name="IHost_addUSBDeviceSourceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::processes-->
-      <xsd:element name="IGuestSession_getProcesses">
+      <!-- method IHost::removeUSBDeviceSource-->
+      <xsd:element name="IHost_removeUSBDeviceSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getProcessesResponse">
+      <xsd:element name="IHost_removeUSBDeviceSourceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::pathStyle-->
-      <xsd:element name="IGuestSession_getPathStyle">
+      <!--Interface ISystemProperties-->
+      <!-- readonly attribute ISystemProperties::minGuestRAM-->
+      <xsd:element name="ISystemProperties_getMinGuestRAM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getPathStyleResponse">
+      <xsd:element name="ISystemProperties_getMinGuestRAMResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:PathStyle"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IGuestSession::currentDirectory-->
-      <xsd:element name="IGuestSession_getCurrentDirectory">
+      <!-- readonly attribute ISystemProperties::maxGuestRAM-->
+      <xsd:element name="ISystemProperties_getMaxGuestRAM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getCurrentDirectoryResponse">
+      <xsd:element name="ISystemProperties_getMaxGuestRAMResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setCurrentDirectory">
+      <!-- readonly attribute ISystemProperties::minGuestVRAM-->
+      <xsd:element name="ISystemProperties_getMinGuestVRAM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="currentDirectory" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_setCurrentDirectoryResponse">
+      <xsd:element name="ISystemProperties_getMinGuestVRAMResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::directories-->
-      <xsd:element name="IGuestSession_getDirectories">
+      <!-- readonly attribute ISystemProperties::maxGuestVRAM-->
+      <xsd:element name="ISystemProperties_getMaxGuestVRAM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getDirectoriesResponse">
+      <xsd:element name="ISystemProperties_getMaxGuestVRAMResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::files-->
-      <xsd:element name="IGuestSession_getFiles">
+      <!-- readonly attribute ISystemProperties::minGuestCPUCount-->
+      <xsd:element name="ISystemProperties_getMinGuestCPUCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getFilesResponse">
+      <xsd:element name="ISystemProperties_getMinGuestCPUCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSession::eventSource-->
-      <xsd:element name="IGuestSession_getEventSource">
+      <!-- readonly attribute ISystemProperties::maxGuestCPUCount-->
+      <xsd:element name="ISystemProperties_getMaxGuestCPUCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_getEventSourceResponse">
+      <xsd:element name="ISystemProperties_getMaxGuestCPUCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::close-->
-      <xsd:element name="IGuestSession_close">
+      <!-- readonly attribute ISystemProperties::maxGuestMonitors-->
+      <xsd:element name="ISystemProperties_getMaxGuestMonitors">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_closeResponse">
+      <xsd:element name="ISystemProperties_getMaxGuestMonitorsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryCopy-->
-      <xsd:element name="IGuestSession_directoryCopy">
+      <!-- readonly attribute ISystemProperties::infoVDSize-->
+      <xsd:element name="ISystemProperties_getInfoVDSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryCopyResponse">
+      <xsd:element name="ISystemProperties_getInfoVDSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryCopyFromGuest-->
-      <xsd:element name="IGuestSession_directoryCopyFromGuest">
+      <!-- readonly attribute ISystemProperties::serialPortCount-->
+      <xsd:element name="ISystemProperties_getSerialPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryCopyFromGuestResponse">
+      <xsd:element name="ISystemProperties_getSerialPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryCopyToGuest-->
-      <xsd:element name="IGuestSession_directoryCopyToGuest">
+      <!-- readonly attribute ISystemProperties::parallelPortCount-->
+      <xsd:element name="ISystemProperties_getParallelPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryCopyToGuestResponse">
+      <xsd:element name="ISystemProperties_getParallelPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryCreate-->
-      <xsd:element name="IGuestSession_directoryCreate">
+      <!-- readonly attribute ISystemProperties::maxBootPosition-->
+      <xsd:element name="ISystemProperties_getMaxBootPosition">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="mode" type="xsd:unsignedInt"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCreateFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryCreateResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IGuestSession::directoryCreateTemp-->
-      <xsd:element name="IGuestSession_directoryCreateTemp">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="templateName" type="xsd:string"/>
-            <xsd:element name="mode" type="xsd:unsignedInt"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="secure" type="xsd:boolean"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <xsd:element name="IGuestSession_directoryCreateTempResponse">
+      <xsd:element name="ISystemProperties_getMaxBootPositionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryExists-->
-      <xsd:element name="IGuestSession_directoryExists">
+      <!-- readonly attribute ISystemProperties::rawModeSupported-->
+      <xsd:element name="ISystemProperties_getRawModeSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryExistsResponse">
+      <xsd:element name="ISystemProperties_getRawModeSupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryOpen-->
-      <xsd:element name="IGuestSession_directoryOpen">
+      <!-- read/write attribute ISystemProperties::exclusiveHwVirt-->
+      <xsd:element name="ISystemProperties_getExclusiveHwVirt">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="filter" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryOpenFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryOpenResponse">
+      <xsd:element name="ISystemProperties_getExclusiveHwVirtResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryRemove-->
-      <xsd:element name="IGuestSession_directoryRemove">
+      <xsd:element name="ISystemProperties_setExclusiveHwVirt">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="exclusiveHwVirt" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryRemoveResponse">
+      <xsd:element name="ISystemProperties_setExclusiveHwVirtResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::directoryRemoveRecursive-->
-      <xsd:element name="IGuestSession_directoryRemoveRecursive">
+      <!-- read/write attribute ISystemProperties::defaultMachineFolder-->
+      <xsd:element name="ISystemProperties_getDefaultMachineFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryRemoveRecFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_directoryRemoveRecursiveResponse">
+      <xsd:element name="ISystemProperties_getDefaultMachineFolderResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::environmentScheduleSet-->
-      <xsd:element name="IGuestSession_environmentScheduleSet">
+      <xsd:element name="ISystemProperties_setDefaultMachineFolder">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="defaultMachineFolder" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_environmentScheduleSetResponse">
+      <xsd:element name="ISystemProperties_setDefaultMachineFolderResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::environmentScheduleUnset-->
-      <xsd:element name="IGuestSession_environmentScheduleUnset">
+      <!-- read/write attribute ISystemProperties::loggingLevel-->
+      <xsd:element name="ISystemProperties_getLoggingLevel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_environmentScheduleUnsetResponse">
+      <xsd:element name="ISystemProperties_getLoggingLevelResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::environmentGetBaseVariable-->
-      <xsd:element name="IGuestSession_environmentGetBaseVariable">
+      <xsd:element name="ISystemProperties_setLoggingLevel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="loggingLevel" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_environmentGetBaseVariableResponse">
+      <xsd:element name="ISystemProperties_setLoggingLevelResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::environmentDoesBaseVariableExist-->
-      <xsd:element name="IGuestSession_environmentDoesBaseVariableExist">
+      <!-- readonly attribute ISystemProperties::mediumFormats-->
+      <xsd:element name="ISystemProperties_getMediumFormats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_environmentDoesBaseVariableExistResponse">
+      <xsd:element name="ISystemProperties_getMediumFormatsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileCopy-->
-      <xsd:element name="IGuestSession_fileCopy">
+      <!-- read/write attribute ISystemProperties::defaultHardDiskFormat-->
+      <xsd:element name="ISystemProperties_getDefaultHardDiskFormat">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileCopyResponse">
+      <xsd:element name="ISystemProperties_getDefaultHardDiskFormatResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileCopyFromGuest-->
-      <xsd:element name="IGuestSession_fileCopyFromGuest">
+      <xsd:element name="ISystemProperties_setDefaultHardDiskFormat">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
+            <xsd:element name="defaultHardDiskFormat" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileCopyFromGuestResponse">
+      <xsd:element name="ISystemProperties_setDefaultHardDiskFormatResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileCopyToGuest-->
-      <xsd:element name="IGuestSession_fileCopyToGuest">
+      <!-- read/write attribute ISystemProperties::freeDiskSpaceWarning-->
+      <xsd:element name="ISystemProperties_getFreeDiskSpaceWarning">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileCopyToGuestResponse">
+      <xsd:element name="ISystemProperties_getFreeDiskSpaceWarningResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileCreateTemp-->
-      <xsd:element name="IGuestSession_fileCreateTemp">
+      <xsd:element name="ISystemProperties_setFreeDiskSpaceWarning">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="templateName" type="xsd:string"/>
-            <xsd:element name="mode" type="xsd:unsignedInt"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="secure" type="xsd:boolean"/>
+            <xsd:element name="freeDiskSpaceWarning" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileCreateTempResponse">
+      <xsd:element name="ISystemProperties_setFreeDiskSpaceWarningResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileExists-->
-      <xsd:element name="IGuestSession_fileExists">
+      <!-- read/write attribute ISystemProperties::freeDiskSpacePercentWarning-->
+      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentWarning">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileExistsResponse">
+      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentWarningResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileOpen-->
-      <xsd:element name="IGuestSession_fileOpen">
+      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentWarning">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="accessMode" type="vbox:FileAccessMode"/>
-            <xsd:element name="openAction" type="vbox:FileOpenAction"/>
-            <xsd:element name="creationMode" type="xsd:unsignedInt"/>
+            <xsd:element name="freeDiskSpacePercentWarning" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileOpenResponse">
+      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentWarningResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileOpenEx-->
-      <xsd:element name="IGuestSession_fileOpenEx">
+      <!-- read/write attribute ISystemProperties::freeDiskSpaceError-->
+      <xsd:element name="ISystemProperties_getFreeDiskSpaceError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="accessMode" type="vbox:FileAccessMode"/>
-            <xsd:element name="openAction" type="vbox:FileOpenAction"/>
-            <xsd:element name="sharingMode" type="vbox:FileSharingMode"/>
-            <xsd:element name="creationMode" type="xsd:unsignedInt"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileOpenExFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileOpenExResponse">
+      <xsd:element name="ISystemProperties_getFreeDiskSpaceErrorResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fileQuerySize-->
-      <xsd:element name="IGuestSession_fileQuerySize">
+      <xsd:element name="ISystemProperties_setFreeDiskSpaceError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
+            <xsd:element name="freeDiskSpaceError" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fileQuerySizeResponse">
+      <xsd:element name="ISystemProperties_setFreeDiskSpaceErrorResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjExists-->
-      <xsd:element name="IGuestSession_fsObjExists">
+      <!-- read/write attribute ISystemProperties::freeDiskSpacePercentError-->
+      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjExistsResponse">
+      <xsd:element name="ISystemProperties_getFreeDiskSpacePercentErrorResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjQueryInfo-->
-      <xsd:element name="IGuestSession_fsObjQueryInfo">
+      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
+            <xsd:element name="freeDiskSpacePercentError" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjQueryInfoResponse">
+      <xsd:element name="ISystemProperties_setFreeDiskSpacePercentErrorResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjRemove-->
-      <xsd:element name="IGuestSession_fsObjRemove">
+      <!-- read/write attribute ISystemProperties::VRDEAuthLibrary-->
+      <xsd:element name="ISystemProperties_getVRDEAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjRemoveResponse">
+      <xsd:element name="ISystemProperties_getVRDEAuthLibraryResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjRename-->
-      <xsd:element name="IGuestSession_fsObjRename">
+      <xsd:element name="ISystemProperties_setVRDEAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="oldPath" type="xsd:string"/>
-            <xsd:element name="newPath" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FsObjRenameFlag"/>
+            <xsd:element name="VRDEAuthLibrary" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjRenameResponse">
+      <xsd:element name="ISystemProperties_setVRDEAuthLibraryResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjMove-->
-      <xsd:element name="IGuestSession_fsObjMove">
+      <!-- read/write attribute ISystemProperties::webServiceAuthLibrary-->
+      <xsd:element name="ISystemProperties_getWebServiceAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="destination" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FsObjMoveFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjMoveResponse">
+      <xsd:element name="ISystemProperties_getWebServiceAuthLibraryResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::fsObjSetACL-->
-      <xsd:element name="IGuestSession_fsObjSetACL">
+      <xsd:element name="ISystemProperties_setWebServiceAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
-            <xsd:element name="followSymlinks" type="xsd:boolean"/>
-            <xsd:element name="acl" type="xsd:string"/>
-            <xsd:element name="mode" type="xsd:unsignedInt"/>
+            <xsd:element name="webServiceAuthLibrary" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_fsObjSetACLResponse">
+      <xsd:element name="ISystemProperties_setWebServiceAuthLibraryResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::processCreate-->
-      <xsd:element name="IGuestSession_processCreate">
+      <!-- read/write attribute ISystemProperties::defaultVRDEExtPack-->
+      <xsd:element name="ISystemProperties_getDefaultVRDEExtPack">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="executable" type="xsd:string"/>
-            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessCreateFlag"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_processCreateResponse">
+      <xsd:element name="ISystemProperties_getDefaultVRDEExtPackResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::processCreateEx-->
-      <xsd:element name="IGuestSession_processCreateEx">
+      <xsd:element name="ISystemProperties_setDefaultVRDEExtPack">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="executable" type="xsd:string"/>
-            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessCreateFlag"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
-            <xsd:element name="priority" type="vbox:ProcessPriority"/>
-            <xsd:element name="affinity" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
+            <xsd:element name="defaultVRDEExtPack" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_processCreateExResponse">
+      <xsd:element name="ISystemProperties_setDefaultVRDEExtPackResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::processGet-->
-      <xsd:element name="IGuestSession_processGet">
+      <!-- read/write attribute ISystemProperties::logHistoryCount-->
+      <xsd:element name="ISystemProperties_getLogHistoryCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pid" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_processGetResponse">
+      <xsd:element name="ISystemProperties_getLogHistoryCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::symlinkCreate-->
-      <xsd:element name="IGuestSession_symlinkCreate">
+      <xsd:element name="ISystemProperties_setLogHistoryCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="symlink" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:SymlinkType"/>
+            <xsd:element name="logHistoryCount" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_symlinkCreateResponse">
+      <xsd:element name="ISystemProperties_setLogHistoryCountResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::symlinkExists-->
-      <xsd:element name="IGuestSession_symlinkExists">
+      <!-- readonly attribute ISystemProperties::defaultAudioDriver-->
+      <xsd:element name="ISystemProperties_getDefaultAudioDriver">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="symlink" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_symlinkExistsResponse">
+      <xsd:element name="ISystemProperties_getDefaultAudioDriverResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:AudioDriverType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::symlinkRead-->
-      <xsd:element name="IGuestSession_symlinkRead">
+      <!-- read/write attribute ISystemProperties::autostartDatabasePath-->
+      <xsd:element name="ISystemProperties_getAutostartDatabasePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="symlink" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:SymlinkReadFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_symlinkReadResponse">
+      <xsd:element name="ISystemProperties_getAutostartDatabasePathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::waitFor-->
-      <xsd:element name="IGuestSession_waitFor">
+      <xsd:element name="ISystemProperties_setAutostartDatabasePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="waitFor" type="xsd:unsignedInt"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="autostartDatabasePath" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_waitForResponse">
+      <xsd:element name="ISystemProperties_setAutostartDatabasePathResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestSessionWaitResult"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuestSession::waitForArray-->
-      <xsd:element name="IGuestSession_waitForArray">
+      <!-- read/write attribute ISystemProperties::defaultAdditionsISO-->
+      <xsd:element name="ISystemProperties_getDefaultAdditionsISO">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="waitFor" minOccurs="0" maxOccurs="unbounded" type="vbox:GuestSessionWaitForFlag"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSession_waitForArrayResponse">
+      <xsd:element name="ISystemProperties_getDefaultAdditionsISOResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestSessionWaitResult"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IProcess-->
-      <!-- readonly attribute IProcess::arguments-->
-      <xsd:element name="IProcess_getArguments">
+      <xsd:element name="ISystemProperties_setDefaultAdditionsISO">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="defaultAdditionsISO" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getArgumentsResponse">
+      <xsd:element name="ISystemProperties_setDefaultAdditionsISOResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::environment-->
-      <xsd:element name="IProcess_getEnvironment">
+      <!-- read/write attribute ISystemProperties::defaultFrontend-->
+      <xsd:element name="ISystemProperties_getDefaultFrontend">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getEnvironmentResponse">
+      <xsd:element name="ISystemProperties_getDefaultFrontendResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::eventSource-->
-      <xsd:element name="IProcess_getEventSource">
+      <xsd:element name="ISystemProperties_setDefaultFrontend">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="defaultFrontend" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getEventSourceResponse">
+      <xsd:element name="ISystemProperties_setDefaultFrontendResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::executablePath-->
-      <xsd:element name="IProcess_getExecutablePath">
+      <!-- readonly attribute ISystemProperties::screenShotFormats-->
+      <xsd:element name="ISystemProperties_getScreenShotFormats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getExecutablePathResponse">
+      <xsd:element name="ISystemProperties_getScreenShotFormatsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::exitCode-->
-      <xsd:element name="IProcess_getExitCode">
+      <!-- method ISystemProperties::getMaxNetworkAdapters-->
+      <xsd:element name="ISystemProperties_getMaxNetworkAdapters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="chipset" type="vbox:ChipsetType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getExitCodeResponse">
+      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::name-->
-      <xsd:element name="IProcess_getName">
+      <!-- method ISystemProperties::getMaxNetworkAdaptersOfType-->
+      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersOfType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="chipset" type="vbox:ChipsetType"/>
+            <xsd:element name="type" type="vbox:NetworkAttachmentType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getNameResponse">
+      <xsd:element name="ISystemProperties_getMaxNetworkAdaptersOfTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::PID-->
-      <xsd:element name="IProcess_getPID">
+      <!-- method ISystemProperties::getMaxDevicesPerPortForStorageBus-->
+      <xsd:element name="ISystemProperties_getMaxDevicesPerPortForStorageBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getPIDResponse">
+      <xsd:element name="ISystemProperties_getMaxDevicesPerPortForStorageBusResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProcess::status-->
-      <xsd:element name="IProcess_getStatus">
+      <!-- method ISystemProperties::getMinPortCountForStorageBus-->
+      <xsd:element name="ISystemProperties_getMinPortCountForStorageBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_getStatusResponse">
+      <xsd:element name="ISystemProperties_getMinPortCountForStorageBusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ProcessStatus"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::waitFor-->
-      <xsd:element name="IProcess_waitFor">
+      <!-- method ISystemProperties::getMaxPortCountForStorageBus-->
+      <xsd:element name="ISystemProperties_getMaxPortCountForStorageBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="waitFor" type="xsd:unsignedInt"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_waitForResponse">
+      <xsd:element name="ISystemProperties_getMaxPortCountForStorageBusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ProcessWaitResult"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::waitForArray-->
-      <xsd:element name="IProcess_waitForArray">
+      <!-- method ISystemProperties::getMaxInstancesOfStorageBus-->
+      <xsd:element name="ISystemProperties_getMaxInstancesOfStorageBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="waitFor" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessWaitForFlag"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="chipset" type="vbox:ChipsetType"/>
+            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_waitForArrayResponse">
+      <xsd:element name="ISystemProperties_getMaxInstancesOfStorageBusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ProcessWaitResult"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::read-->
-      <xsd:element name="IProcess_read">
+      <!-- method ISystemProperties::getDeviceTypesForStorageBus-->
+      <xsd:element name="ISystemProperties_getDeviceTypesForStorageBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="handle" type="xsd:unsignedInt"/>
-            <xsd:element name="toRead" type="xsd:unsignedInt"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="bus" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_readResponse">
+      <xsd:element name="ISystemProperties_getDeviceTypesForStorageBusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::write-->
-      <xsd:element name="IProcess_write">
+      <!-- method ISystemProperties::getDefaultIoCacheSettingForStorageController-->
+      <xsd:element name="ISystemProperties_getDefaultIoCacheSettingForStorageController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="handle" type="xsd:unsignedInt"/>
-            <xsd:element name="flags" type="xsd:unsignedInt"/>
-            <xsd:element name="data" type="xsd:string"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_writeResponse">
+      <xsd:element name="ISystemProperties_getDefaultIoCacheSettingForStorageControllerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::writeArray-->
-      <xsd:element name="IProcess_writeArray">
+      <!-- method ISystemProperties::getStorageControllerHotplugCapable-->
+      <xsd:element name="ISystemProperties_getStorageControllerHotplugCapable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="handle" type="xsd:unsignedInt"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessInputFlag"/>
-            <xsd:element name="data" type="xsd:string"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_writeArrayResponse">
+      <xsd:element name="ISystemProperties_getStorageControllerHotplugCapableResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProcess::terminate-->
-      <xsd:element name="IProcess_terminate">
+      <!-- method ISystemProperties::getMaxInstancesOfUSBControllerType-->
+      <xsd:element name="ISystemProperties_getMaxInstancesOfUSBControllerType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="chipset" type="vbox:ChipsetType"/>
+            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProcess_terminateResponse">
+      <xsd:element name="ISystemProperties_getMaxInstancesOfUSBControllerTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcess-->
-      <!-- readonly attribute IGuestProcess::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestProcess_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface IDnDBase-->
+      <!-- readonly attribute IDnDBase::formats-->
+      <xsd:element name="IDnDBase_getFormats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcess_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IDnDBase_getFormatsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDirectory-->
-      <!-- readonly attribute IDirectory::directoryName-->
-      <xsd:element name="IDirectory_getDirectoryName">
+      <!-- readonly attribute IDnDBase::protocolVersion-->
+      <xsd:element name="IDnDBase_getProtocolVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDirectory_getDirectoryNameResponse">
+      <xsd:element name="IDnDBase_getProtocolVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IDirectory::filter-->
-      <xsd:element name="IDirectory_getFilter">
+      <!-- method IDnDBase::isFormatSupported-->
+      <xsd:element name="IDnDBase_isFormatSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="format" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDirectory_getFilterResponse">
+      <xsd:element name="IDnDBase_isFormatSupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDirectory::close-->
-      <xsd:element name="IDirectory_close">
+      <!-- method IDnDBase::addFormats-->
+      <xsd:element name="IDnDBase_addFormats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDirectory_closeResponse">
+      <xsd:element name="IDnDBase_addFormatsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDirectory::read-->
-      <xsd:element name="IDirectory_read">
+      <!-- method IDnDBase::removeFormats-->
+      <xsd:element name="IDnDBase_removeFormats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDirectory_readResponse">
+      <xsd:element name="IDnDBase_removeFormatsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestDirectory-->
-      <!-- readonly attribute IGuestDirectory::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface IDnDSource-->
+      <!-- method IDnDSource::dragIsPending-->
+      <xsd:element name="IDnDSource_dragIsPending">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IDnDSource_dragIsPendingResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
+            <xsd:element name="returnval" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IFile-->
-      <!-- readonly attribute IFile::eventSource-->
-      <xsd:element name="IFile_getEventSource">
+      <!-- method IDnDSource::drop-->
+      <xsd:element name="IDnDSource_drop">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="format" type="xsd:string"/>
+            <xsd:element name="action" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getEventSourceResponse">
+      <xsd:element name="IDnDSource_dropResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::id-->
-      <xsd:element name="IFile_getId">
+      <!-- method IDnDSource::receiveData-->
+      <xsd:element name="IDnDSource_receiveData">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getIdResponse">
+      <xsd:element name="IDnDSource_receiveDataResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::initialSize-->
-      <xsd:element name="IFile_getInitialSize">
+      <!--Interface IGuestDnDSource-->
+      <!-- readonly attribute IGuestDnDSource::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestDnDSource_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getInitialSizeResponse">
+      <xsd:element name="IGuestDnDSource_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::offset-->
-      <xsd:element name="IFile_getOffset">
+      <!--Interface IDnDTarget-->
+      <!-- method IDnDTarget::enter-->
+      <xsd:element name="IDnDTarget_enter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
+            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getOffsetResponse">
+      <xsd:element name="IDnDTarget_enterResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::status-->
-      <xsd:element name="IFile_getStatus">
+      <!-- method IDnDTarget::move-->
+      <xsd:element name="IDnDTarget_move">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
+            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getStatusResponse">
+      <xsd:element name="IDnDTarget_moveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FileStatus"/>
+            <xsd:element name="returnval" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::fileName-->
-      <xsd:element name="IFile_getFileName">
+      <!-- method IDnDTarget::leave-->
+      <xsd:element name="IDnDTarget_leave">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getFileNameResponse">
+      <xsd:element name="IDnDTarget_leaveResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::creationMode-->
-      <xsd:element name="IFile_getCreationMode">
+      <!-- method IDnDTarget::drop-->
+      <xsd:element name="IDnDTarget_drop">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="defaultAction" type="vbox:DnDAction"/>
+            <xsd:element name="allowedActions" minOccurs="0" maxOccurs="unbounded" type="vbox:DnDAction"/>
+            <xsd:element name="formats" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getCreationModeResponse">
+      <xsd:element name="IDnDTarget_dropResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="format" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:DnDAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::openAction-->
-      <xsd:element name="IFile_getOpenAction">
+      <!-- method IDnDTarget::sendData-->
+      <xsd:element name="IDnDTarget_sendData">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="format" type="xsd:string"/>
+            <xsd:element name="data" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getOpenActionResponse">
+      <xsd:element name="IDnDTarget_sendDataResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FileOpenAction"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFile::accessMode-->
-      <xsd:element name="IFile_getAccessMode">
+      <!-- method IDnDTarget::cancel-->
+      <xsd:element name="IDnDTarget_cancel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_getAccessModeResponse">
+      <xsd:element name="IDnDTarget_cancelResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FileAccessMode"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::close-->
-      <xsd:element name="IFile_close">
+      <!--Interface IGuestDnDTarget-->
+      <!-- readonly attribute IGuestDnDTarget::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_closeResponse">
+      <xsd:element name="IGuestDnDTarget_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::queryInfo-->
-      <xsd:element name="IFile_queryInfo">
+      <!--Interface IGuestSession-->
+      <!-- readonly attribute IGuestSession::user-->
+      <xsd:element name="IGuestSession_getUser">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_queryInfoResponse">
+      <xsd:element name="IGuestSession_getUserResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::querySize-->
-      <xsd:element name="IFile_querySize">
+      <!-- readonly attribute IGuestSession::domain-->
+      <xsd:element name="IGuestSession_getDomain">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_querySizeResponse">
+      <xsd:element name="IGuestSession_getDomainResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::read-->
-      <xsd:element name="IFile_read">
+      <!-- readonly attribute IGuestSession::name-->
+      <xsd:element name="IGuestSession_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="toRead" type="xsd:unsignedInt"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_readResponse">
+      <xsd:element name="IGuestSession_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::readAt-->
-      <xsd:element name="IFile_readAt">
+      <!-- readonly attribute IGuestSession::id-->
+      <xsd:element name="IGuestSession_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="offset" type="xsd:long"/>
-            <xsd:element name="toRead" type="xsd:unsignedInt"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_readAtResponse">
+      <xsd:element name="IGuestSession_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::seek-->
-      <xsd:element name="IFile_seek">
+      <!-- read/write attribute IGuestSession::timeout-->
+      <xsd:element name="IGuestSession_getTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="offset" type="xsd:long"/>
-            <xsd:element name="whence" type="vbox:FileSeekOrigin"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_seekResponse">
+      <xsd:element name="IGuestSession_getTimeoutResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::setACL-->
-      <xsd:element name="IFile_setACL">
+      <xsd:element name="IGuestSession_setTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="acl" type="xsd:string"/>
-            <xsd:element name="mode" type="xsd:unsignedInt"/>
+            <xsd:element name="timeout" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_setACLResponse">
+      <xsd:element name="IGuestSession_setTimeoutResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::setSize-->
-      <xsd:element name="IFile_setSize">
+      <!-- readonly attribute IGuestSession::protocolVersion-->
+      <xsd:element name="IGuestSession_getProtocolVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="size" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_setSizeResponse">
+      <xsd:element name="IGuestSession_getProtocolVersionResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::write-->
-      <xsd:element name="IFile_write">
+      <!-- readonly attribute IGuestSession::status-->
+      <xsd:element name="IGuestSession_getStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="data" type="xsd:string"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_writeResponse">
+      <xsd:element name="IGuestSession_getStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:GuestSessionStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFile::writeAt-->
-      <xsd:element name="IFile_writeAt">
+      <!-- read/write attribute IGuestSession::environmentChanges-->
+      <xsd:element name="IGuestSession_getEnvironmentChanges">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="offset" type="xsd:long"/>
-            <xsd:element name="data" type="xsd:string"/>
-            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFile_writeAtResponse">
+      <xsd:element name="IGuestSession_getEnvironmentChangesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFile-->
-      <!-- readonly attribute IGuestFile::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestFile_getMidlDoesNotLikeEmptyInterfaces">
+      <xsd:element name="IGuestSession_setEnvironmentChanges">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFile_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IGuestSession_setEnvironmentChangesResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IFsObjInfo-->
-      <!-- readonly attribute IFsObjInfo::accessTime-->
-      <xsd:element name="IFsObjInfo_getAccessTime">
+      <!-- readonly attribute IGuestSession::environmentBase-->
+      <xsd:element name="IGuestSession_getEnvironmentBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getAccessTimeResponse">
+      <xsd:element name="IGuestSession_getEnvironmentBaseResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::allocatedSize-->
-      <xsd:element name="IFsObjInfo_getAllocatedSize">
+      <!-- readonly attribute IGuestSession::processes-->
+      <xsd:element name="IGuestSession_getProcesses">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getAllocatedSizeResponse">
+      <xsd:element name="IGuestSession_getProcessesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::birthTime-->
-      <xsd:element name="IFsObjInfo_getBirthTime">
+      <!-- readonly attribute IGuestSession::pathStyle-->
+      <xsd:element name="IGuestSession_getPathStyle">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getBirthTimeResponse">
+      <xsd:element name="IGuestSession_getPathStyleResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="vbox:PathStyle"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::changeTime-->
-      <xsd:element name="IFsObjInfo_getChangeTime">
+      <!-- read/write attribute IGuestSession::currentDirectory-->
+      <xsd:element name="IGuestSession_getCurrentDirectory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getChangeTimeResponse">
+      <xsd:element name="IGuestSession_getCurrentDirectoryResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::deviceNumber-->
-      <xsd:element name="IFsObjInfo_getDeviceNumber">
+      <xsd:element name="IGuestSession_setCurrentDirectory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="currentDirectory" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getDeviceNumberResponse">
+      <xsd:element name="IGuestSession_setCurrentDirectoryResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::fileAttributes-->
-      <xsd:element name="IFsObjInfo_getFileAttributes">
+      <!-- readonly attribute IGuestSession::directories-->
+      <xsd:element name="IGuestSession_getDirectories">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getFileAttributesResponse">
+      <xsd:element name="IGuestSession_getDirectoriesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::generationId-->
-      <xsd:element name="IFsObjInfo_getGenerationId">
+      <!-- readonly attribute IGuestSession::files-->
+      <xsd:element name="IGuestSession_getFiles">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getGenerationIdResponse">
+      <xsd:element name="IGuestSession_getFilesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::GID-->
-      <xsd:element name="IFsObjInfo_getGID">
+      <!-- readonly attribute IGuestSession::eventSource-->
+      <xsd:element name="IGuestSession_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getGIDResponse">
+      <xsd:element name="IGuestSession_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::groupName-->
-      <xsd:element name="IFsObjInfo_getGroupName">
+      <!-- method IGuestSession::close-->
+      <xsd:element name="IGuestSession_close">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getGroupNameResponse">
+      <xsd:element name="IGuestSession_closeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::hardLinks-->
-      <xsd:element name="IFsObjInfo_getHardLinks">
+      <!-- method IGuestSession::directoryCopy-->
+      <xsd:element name="IGuestSession_directoryCopy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getHardLinksResponse">
+      <xsd:element name="IGuestSession_directoryCopyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::modificationTime-->
-      <xsd:element name="IFsObjInfo_getModificationTime">
+      <!-- method IGuestSession::directoryCopyFromGuest-->
+      <xsd:element name="IGuestSession_directoryCopyFromGuest">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getModificationTimeResponse">
+      <xsd:element name="IGuestSession_directoryCopyFromGuestResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::name-->
-      <xsd:element name="IFsObjInfo_getName">
+      <!-- method IGuestSession::directoryCopyToGuest-->
+      <xsd:element name="IGuestSession_directoryCopyToGuest">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCopyFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getNameResponse">
+      <xsd:element name="IGuestSession_directoryCopyToGuestResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::nodeId-->
-      <xsd:element name="IFsObjInfo_getNodeId">
+      <!-- method IGuestSession::directoryCreate-->
+      <xsd:element name="IGuestSession_directoryCreate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="mode" type="xsd:unsignedInt"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryCreateFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getNodeIdResponse">
+      <xsd:element name="IGuestSession_directoryCreateResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::nodeIdDevice-->
-      <xsd:element name="IFsObjInfo_getNodeIdDevice">
+      <!-- method IGuestSession::directoryCreateTemp-->
+      <xsd:element name="IGuestSession_directoryCreateTemp">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="templateName" type="xsd:string"/>
+            <xsd:element name="mode" type="xsd:unsignedInt"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="secure" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getNodeIdDeviceResponse">
+      <xsd:element name="IGuestSession_directoryCreateTempResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::objectSize-->
-      <xsd:element name="IFsObjInfo_getObjectSize">
+      <!-- method IGuestSession::directoryExists-->
+      <xsd:element name="IGuestSession_directoryExists">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getObjectSizeResponse">
+      <xsd:element name="IGuestSession_directoryExistsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::type-->
-      <xsd:element name="IFsObjInfo_getType">
+      <!-- method IGuestSession::directoryOpen-->
+      <xsd:element name="IGuestSession_directoryOpen">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="filter" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryOpenFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getTypeResponse">
+      <xsd:element name="IGuestSession_directoryOpenResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FsObjType"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::UID-->
-      <xsd:element name="IFsObjInfo_getUID">
+      <!-- method IGuestSession::directoryRemove-->
+      <xsd:element name="IGuestSession_directoryRemove">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getUIDResponse">
+      <xsd:element name="IGuestSession_directoryRemoveResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::userFlags-->
-      <xsd:element name="IFsObjInfo_getUserFlags">
+      <!-- method IGuestSession::directoryRemoveRecursive-->
+      <xsd:element name="IGuestSession_directoryRemoveRecursive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:DirectoryRemoveRecFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getUserFlagsResponse">
+      <xsd:element name="IGuestSession_directoryRemoveRecursiveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFsObjInfo::userName-->
-      <xsd:element name="IFsObjInfo_getUserName">
+      <!-- method IGuestSession::environmentScheduleSet-->
+      <xsd:element name="IGuestSession_environmentScheduleSet">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFsObjInfo_getUserNameResponse">
+      <xsd:element name="IGuestSession_environmentScheduleSetResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFsObjInfo-->
-      <!-- readonly attribute IGuestFsObjInfo::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- method IGuestSession::environmentScheduleUnset-->
+      <xsd:element name="IGuestSession_environmentScheduleUnset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IGuestSession_environmentScheduleUnsetResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuest-->
-      <!-- readonly attribute IGuest::OSTypeId-->
-      <xsd:element name="IGuest_getOSTypeId">
+      <!-- method IGuestSession::environmentGetBaseVariable-->
+      <xsd:element name="IGuestSession_environmentGetBaseVariable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getOSTypeIdResponse">
+      <xsd:element name="IGuestSession_environmentGetBaseVariableResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::additionsRunLevel-->
-      <xsd:element name="IGuest_getAdditionsRunLevel">
+      <!-- method IGuestSession::environmentDoesBaseVariableExist-->
+      <xsd:element name="IGuestSession_environmentDoesBaseVariableExist">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getAdditionsRunLevelResponse">
+      <xsd:element name="IGuestSession_environmentDoesBaseVariableExistResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AdditionsRunLevelType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::additionsVersion-->
-      <xsd:element name="IGuest_getAdditionsVersion">
+      <!-- method IGuestSession::fileCopy-->
+      <xsd:element name="IGuestSession_fileCopy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getAdditionsVersionResponse">
+      <xsd:element name="IGuestSession_fileCopyResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::additionsRevision-->
-      <xsd:element name="IGuest_getAdditionsRevision">
+      <!-- method IGuestSession::fileCopyFromGuest-->
+      <xsd:element name="IGuestSession_fileCopyFromGuest">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getAdditionsRevisionResponse">
+      <xsd:element name="IGuestSession_fileCopyFromGuestResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::dnDSource-->
-      <xsd:element name="IGuest_getDnDSource">
+      <!-- method IGuestSession::fileCopyToGuest-->
+      <xsd:element name="IGuestSession_fileCopyToGuest">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileCopyFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getDnDSourceResponse">
+      <xsd:element name="IGuestSession_fileCopyToGuestResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::dnDTarget-->
-      <xsd:element name="IGuest_getDnDTarget">
+      <!-- method IGuestSession::fileCreateTemp-->
+      <xsd:element name="IGuestSession_fileCreateTemp">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="templateName" type="xsd:string"/>
+            <xsd:element name="mode" type="xsd:unsignedInt"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="secure" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getDnDTargetResponse">
+      <xsd:element name="IGuestSession_fileCreateTempResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::eventSource-->
-      <xsd:element name="IGuest_getEventSource">
+      <!-- method IGuestSession::fileExists-->
+      <xsd:element name="IGuestSession_fileExists">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getEventSourceResponse">
+      <xsd:element name="IGuestSession_fileExistsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::facilities-->
-      <xsd:element name="IGuest_getFacilities">
+      <!-- method IGuestSession::fileOpen-->
+      <xsd:element name="IGuestSession_fileOpen">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="accessMode" type="vbox:FileAccessMode"/>
+            <xsd:element name="openAction" type="vbox:FileOpenAction"/>
+            <xsd:element name="creationMode" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getFacilitiesResponse">
+      <xsd:element name="IGuestSession_fileOpenResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IAdditionsFacility"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuest::sessions-->
-      <xsd:element name="IGuest_getSessions">
-        <xsd:complexType>
+      <!-- method IGuestSession::fileOpenEx-->
+      <xsd:element name="IGuestSession_fileOpenEx">
+        <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="accessMode" type="vbox:FileAccessMode"/>
+            <xsd:element name="openAction" type="vbox:FileOpenAction"/>
+            <xsd:element name="sharingMode" type="vbox:FileSharingMode"/>
+            <xsd:element name="creationMode" type="xsd:unsignedInt"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FileOpenExFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getSessionsResponse">
+      <xsd:element name="IGuestSession_fileOpenExResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IGuest::memoryBalloonSize-->
-      <xsd:element name="IGuest_getMemoryBalloonSize">
+      <!-- method IGuestSession::fileQuerySize-->
+      <xsd:element name="IGuestSession_fileQuerySize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getMemoryBalloonSizeResponse">
+      <xsd:element name="IGuestSession_fileQuerySizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_setMemoryBalloonSize">
+      <!-- method IGuestSession::fsObjExists-->
+      <xsd:element name="IGuestSession_fsObjExists">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="memoryBalloonSize" type="xsd:unsignedInt"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_setMemoryBalloonSizeResponse">
+      <xsd:element name="IGuestSession_fsObjExistsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IGuest::statisticsUpdateInterval-->
-      <xsd:element name="IGuest_getStatisticsUpdateInterval">
+      <!-- method IGuestSession::fsObjQueryInfo-->
+      <xsd:element name="IGuestSession_fsObjQueryInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getStatisticsUpdateIntervalResponse">
+      <xsd:element name="IGuestSession_fsObjQueryInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_setStatisticsUpdateInterval">
+      <!-- method IGuestSession::fsObjRemove-->
+      <xsd:element name="IGuestSession_fsObjRemove">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="statisticsUpdateInterval" type="xsd:unsignedInt"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_setStatisticsUpdateIntervalResponse">
+      <xsd:element name="IGuestSession_fsObjRemoveResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::internalGetStatistics-->
-      <xsd:element name="IGuest_internalGetStatistics">
+      <!-- method IGuestSession::fsObjRename-->
+      <xsd:element name="IGuestSession_fsObjRename">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="oldPath" type="xsd:string"/>
+            <xsd:element name="newPath" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FsObjRenameFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_internalGetStatisticsResponse">
+      <xsd:element name="IGuestSession_fsObjRenameResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="cpuUser" type="xsd:unsignedInt"/>
-            <xsd:element name="cpuKernel" type="xsd:unsignedInt"/>
-            <xsd:element name="cpuIdle" type="xsd:unsignedInt"/>
-            <xsd:element name="memTotal" type="xsd:unsignedInt"/>
-            <xsd:element name="memFree" type="xsd:unsignedInt"/>
-            <xsd:element name="memBalloon" type="xsd:unsignedInt"/>
-            <xsd:element name="memShared" type="xsd:unsignedInt"/>
-            <xsd:element name="memCache" type="xsd:unsignedInt"/>
-            <xsd:element name="pagedTotal" type="xsd:unsignedInt"/>
-            <xsd:element name="memAllocTotal" type="xsd:unsignedInt"/>
-            <xsd:element name="memFreeTotal" type="xsd:unsignedInt"/>
-            <xsd:element name="memBalloonTotal" type="xsd:unsignedInt"/>
-            <xsd:element name="memSharedTotal" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::getFacilityStatus-->
-      <xsd:element name="IGuest_getFacilityStatus">
+      <!-- method IGuestSession::fsObjMove-->
+      <xsd:element name="IGuestSession_fsObjMove">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="facility" type="vbox:AdditionsFacilityType"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="destination" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:FsObjMoveFlags"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getFacilityStatusResponse">
+      <xsd:element name="IGuestSession_fsObjMoveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="timestamp" type="xsd:long"/>
-            <xsd:element name="returnval" type="vbox:AdditionsFacilityStatus"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::getAdditionsStatus-->
-      <xsd:element name="IGuest_getAdditionsStatus">
+      <!-- method IGuestSession::fsObjSetACL-->
+      <xsd:element name="IGuestSession_fsObjSetACL">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="level" type="vbox:AdditionsRunLevelType"/>
+            <xsd:element name="path" type="xsd:string"/>
+            <xsd:element name="followSymlinks" type="xsd:boolean"/>
+            <xsd:element name="acl" type="xsd:string"/>
+            <xsd:element name="mode" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_getAdditionsStatusResponse">
+      <xsd:element name="IGuestSession_fsObjSetACLResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::setCredentials-->
-      <xsd:element name="IGuest_setCredentials">
+      <!-- method IGuestSession::processCreate-->
+      <xsd:element name="IGuestSession_processCreate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="userName" type="xsd:string"/>
-            <xsd:element name="password" type="xsd:string"/>
-            <xsd:element name="domain" type="xsd:string"/>
-            <xsd:element name="allowInteractiveLogon" type="xsd:boolean"/>
+            <xsd:element name="executable" type="xsd:string"/>
+            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessCreateFlag"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_setCredentialsResponse">
+      <xsd:element name="IGuestSession_processCreateResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::createSession-->
-      <xsd:element name="IGuest_createSession">
+      <!-- method IGuestSession::processCreateEx-->
+      <xsd:element name="IGuestSession_processCreateEx">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="user" type="xsd:string"/>
-            <xsd:element name="password" type="xsd:string"/>
-            <xsd:element name="domain" type="xsd:string"/>
-            <xsd:element name="sessionName" type="xsd:string"/>
+            <xsd:element name="executable" type="xsd:string"/>
+            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="environmentChanges" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessCreateFlag"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
+            <xsd:element name="priority" type="vbox:ProcessPriority"/>
+            <xsd:element name="affinity" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_createSessionResponse">
+      <xsd:element name="IGuestSession_processCreateExResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::findSession-->
-      <xsd:element name="IGuest_findSession">
+      <!-- method IGuestSession::processGet-->
+      <xsd:element name="IGuestSession_processGet">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="sessionName" type="xsd:string"/>
+            <xsd:element name="pid" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_findSessionResponse">
+      <xsd:element name="IGuestSession_processGetResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IGuest::updateGuestAdditions-->
-      <xsd:element name="IGuest_updateGuestAdditions">
+      <!-- method IGuestSession::symlinkCreate-->
+      <xsd:element name="IGuestSession_symlinkCreate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="source" type="xsd:string"/>
-            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:AdditionsUpdateFlag"/>
+            <xsd:element name="symlink" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:SymlinkType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuest_updateGuestAdditionsResponse">
+      <xsd:element name="IGuestSession_symlinkCreateResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IProgress-->
-      <!-- readonly attribute IProgress::id-->
-      <xsd:element name="IProgress_getId">
+      <!-- method IGuestSession::symlinkExists-->
+      <xsd:element name="IGuestSession_symlinkExists">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="symlink" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getIdResponse">
+      <xsd:element name="IGuestSession_symlinkExistsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::description-->
-      <xsd:element name="IProgress_getDescription">
+      <!-- method IGuestSession::symlinkRead-->
+      <xsd:element name="IGuestSession_symlinkRead">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="symlink" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:SymlinkReadFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getDescriptionResponse">
+      <xsd:element name="IGuestSession_symlinkReadResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::initiator-->
-      <xsd:element name="IProgress_getInitiator">
+      <!-- method IGuestSession::waitFor-->
+      <xsd:element name="IGuestSession_waitFor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="waitFor" type="xsd:unsignedInt"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getInitiatorResponse">
+      <xsd:element name="IGuestSession_waitForResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:GuestSessionWaitResult"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::cancelable-->
-      <xsd:element name="IProgress_getCancelable">
+      <!-- method IGuestSession::waitForArray-->
+      <xsd:element name="IGuestSession_waitForArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="waitFor" minOccurs="0" maxOccurs="unbounded" type="vbox:GuestSessionWaitForFlag"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getCancelableResponse">
+      <xsd:element name="IGuestSession_waitForArrayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:GuestSessionWaitResult"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::percent-->
-      <xsd:element name="IProgress_getPercent">
+      <!--Interface IProcess-->
+      <!-- readonly attribute IProcess::arguments-->
+      <xsd:element name="IProcess_getArguments">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getPercentResponse">
+      <xsd:element name="IProcess_getArgumentsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::timeRemaining-->
-      <xsd:element name="IProgress_getTimeRemaining">
+      <!-- readonly attribute IProcess::environment-->
+      <xsd:element name="IProcess_getEnvironment">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getTimeRemainingResponse">
+      <xsd:element name="IProcess_getEnvironmentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::completed-->
-      <xsd:element name="IProgress_getCompleted">
+      <!-- readonly attribute IProcess::eventSource-->
+      <xsd:element name="IProcess_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getCompletedResponse">
+      <xsd:element name="IProcess_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::canceled-->
-      <xsd:element name="IProgress_getCanceled">
+      <!-- readonly attribute IProcess::executablePath-->
+      <xsd:element name="IProcess_getExecutablePath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getCanceledResponse">
+      <xsd:element name="IProcess_getExecutablePathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::resultCode-->
-      <xsd:element name="IProgress_getResultCode">
+      <!-- readonly attribute IProcess::exitCode-->
+      <xsd:element name="IProcess_getExitCode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getResultCodeResponse">
+      <xsd:element name="IProcess_getExitCodeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::errorInfo-->
-      <xsd:element name="IProgress_getErrorInfo">
+      <!-- readonly attribute IProcess::name-->
+      <xsd:element name="IProcess_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getErrorInfoResponse">
+      <xsd:element name="IProcess_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::operationCount-->
-      <xsd:element name="IProgress_getOperationCount">
+      <!-- readonly attribute IProcess::PID-->
+      <xsd:element name="IProcess_getPID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getOperationCountResponse">
+      <xsd:element name="IProcess_getPIDResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::operation-->
-      <xsd:element name="IProgress_getOperation">
+      <!-- readonly attribute IProcess::status-->
+      <xsd:element name="IProcess_getStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getOperationResponse">
+      <xsd:element name="IProcess_getStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:ProcessStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::operationDescription-->
-      <xsd:element name="IProgress_getOperationDescription">
+      <!-- method IProcess::waitFor-->
+      <xsd:element name="IProcess_waitFor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="waitFor" type="xsd:unsignedInt"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getOperationDescriptionResponse">
+      <xsd:element name="IProcess_waitForResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:ProcessWaitResult"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::operationPercent-->
-      <xsd:element name="IProgress_getOperationPercent">
+      <!-- method IProcess::waitForArray-->
+      <xsd:element name="IProcess_waitForArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="waitFor" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessWaitForFlag"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getOperationPercentResponse">
+      <xsd:element name="IProcess_waitForArrayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:ProcessWaitResult"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IProgress::operationWeight-->
-      <xsd:element name="IProgress_getOperationWeight">
+      <!-- method IProcess::read-->
+      <xsd:element name="IProcess_read">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="handle" type="xsd:unsignedInt"/>
+            <xsd:element name="toRead" type="xsd:unsignedInt"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getOperationWeightResponse">
+      <xsd:element name="IProcess_readResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IProgress::timeout-->
-      <xsd:element name="IProgress_getTimeout">
+      <!-- method IProcess::write-->
+      <xsd:element name="IProcess_write">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="handle" type="xsd:unsignedInt"/>
+            <xsd:element name="flags" type="xsd:unsignedInt"/>
+            <xsd:element name="data" type="xsd:string"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_getTimeoutResponse">
+      <xsd:element name="IProcess_writeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_setTimeout">
+      <!-- method IProcess::writeArray-->
+      <xsd:element name="IProcess_writeArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:unsignedInt"/>
+            <xsd:element name="handle" type="xsd:unsignedInt"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:ProcessInputFlag"/>
+            <xsd:element name="data" type="xsd:string"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_setTimeoutResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IProgress::setCurrentOperationProgress-->
-      <xsd:element name="IProgress_setCurrentOperationProgress">
+      <xsd:element name="IProcess_writeArrayResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="percent" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_setCurrentOperationProgressResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IProgress::setNextOperation-->
-      <xsd:element name="IProgress_setNextOperation">
+      <!-- method IProcess::terminate-->
+      <xsd:element name="IProcess_terminate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="nextOperationDescription" type="xsd:string"/>
-            <xsd:element name="nextOperationsWeight" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_setNextOperationResponse">
+      <xsd:element name="IProcess_terminateResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProgress::waitForCompletion-->
-      <xsd:element name="IProgress_waitForCompletion">
+      <!--Interface IGuestProcess-->
+      <!-- readonly attribute IGuestProcess::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestProcess_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_waitForCompletionResponse">
+      <xsd:element name="IGuestProcess_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProgress::waitForOperationCompletion-->
-      <xsd:element name="IProgress_waitForOperationCompletion">
+      <!--Interface IDirectory-->
+      <!-- readonly attribute IDirectory::directoryName-->
+      <xsd:element name="IDirectory_getDirectoryName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="operation" type="xsd:unsignedInt"/>
-            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_waitForOperationCompletionResponse">
+      <xsd:element name="IDirectory_getDirectoryNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProgress::waitForAsyncProgressCompletion-->
-      <xsd:element name="IProgress_waitForAsyncProgressCompletion">
+      <!-- readonly attribute IDirectory::filter-->
+      <xsd:element name="IDirectory_getFilter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pProgressAsync" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_waitForAsyncProgressCompletionResponse">
+      <xsd:element name="IDirectory_getFilterResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IProgress::cancel-->
-      <xsd:element name="IProgress_cancel">
+      <!-- method IDirectory::close-->
+      <xsd:element name="IDirectory_close">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IProgress_cancelResponse">
+      <xsd:element name="IDirectory_closeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshot-->
-      <!-- readonly attribute ISnapshot::id-->
-      <xsd:element name="ISnapshot_getId">
+      <!-- method IDirectory::read-->
+      <xsd:element name="IDirectory_read">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getIdResponse">
+      <xsd:element name="IDirectory_readResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISnapshot::name-->
-      <xsd:element name="ISnapshot_getName">
+      <!--Interface IGuestDirectory-->
+      <!-- readonly attribute IGuestDirectory::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestDirectory_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getNameResponse">
+      <xsd:element name="IGuestDirectory_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_setName">
+      <!--Interface IFile-->
+      <!-- readonly attribute IFile::eventSource-->
+      <xsd:element name="IFile_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_setNameResponse">
+      <xsd:element name="IFile_getEventSourceResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISnapshot::description-->
-      <xsd:element name="ISnapshot_getDescription">
+      <!-- readonly attribute IFile::id-->
+      <xsd:element name="IFile_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getDescriptionResponse">
+      <xsd:element name="IFile_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_setDescription">
+      <!-- readonly attribute IFile::initialSize-->
+      <xsd:element name="IFile_getInitialSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="description" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_setDescriptionResponse">
+      <xsd:element name="IFile_getInitialSizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISnapshot::timeStamp-->
-      <xsd:element name="ISnapshot_getTimeStamp">
+      <!-- readonly attribute IFile::offset-->
+      <xsd:element name="IFile_getOffset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getTimeStampResponse">
+      <xsd:element name="IFile_getOffsetResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISnapshot::online-->
-      <xsd:element name="ISnapshot_getOnline">
+      <!-- readonly attribute IFile::status-->
+      <xsd:element name="IFile_getStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getOnlineResponse">
+      <xsd:element name="IFile_getStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:FileStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISnapshot::machine-->
-      <xsd:element name="ISnapshot_getMachine">
+      <!-- readonly attribute IFile::fileName-->
+      <xsd:element name="IFile_getFileName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getMachineResponse">
+      <xsd:element name="IFile_getFileNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISnapshot::parent-->
-      <xsd:element name="ISnapshot_getParent">
+      <!-- readonly attribute IFile::creationMode-->
+      <xsd:element name="IFile_getCreationMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getParentResponse">
+      <xsd:element name="IFile_getCreationModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISnapshot::children-->
-      <xsd:element name="ISnapshot_getChildren">
+      <!-- readonly attribute IFile::openAction-->
+      <xsd:element name="IFile_getOpenAction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getChildrenResponse">
+      <xsd:element name="IFile_getOpenActionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:FileOpenAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISnapshot::getChildrenCount-->
-      <xsd:element name="ISnapshot_getChildrenCount">
+      <!-- readonly attribute IFile::accessMode-->
+      <xsd:element name="IFile_getAccessMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshot_getChildrenCountResponse">
+      <xsd:element name="IFile_getAccessModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:FileAccessMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMedium-->
-      <!-- readonly attribute IMedium::id-->
-      <xsd:element name="IMedium_getId">
+      <!-- method IFile::close-->
+      <xsd:element name="IFile_close">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getIdResponse">
+      <xsd:element name="IFile_closeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMedium::description-->
-      <xsd:element name="IMedium_getDescription">
+      <!-- method IFile::queryInfo-->
+      <xsd:element name="IFile_queryInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getDescriptionResponse">
+      <xsd:element name="IFile_queryInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setDescription">
+      <!-- method IFile::querySize-->
+      <xsd:element name="IFile_querySize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="description" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setDescriptionResponse">
+      <xsd:element name="IFile_querySizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::state-->
-      <xsd:element name="IMedium_getState">
+      <!-- method IFile::read-->
+      <xsd:element name="IFile_read">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="toRead" type="xsd:unsignedInt"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getStateResponse">
+      <xsd:element name="IFile_readResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MediumState"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::variant-->
-      <xsd:element name="IMedium_getVariant">
+      <!-- method IFile::readAt-->
+      <xsd:element name="IFile_readAt">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="offset" type="xsd:long"/>
+            <xsd:element name="toRead" type="xsd:unsignedInt"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getVariantResponse">
+      <xsd:element name="IFile_readAtResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::location-->
-      <xsd:element name="IMedium_getLocation">
+      <!-- method IFile::seek-->
+      <xsd:element name="IFile_seek">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="offset" type="xsd:long"/>
+            <xsd:element name="whence" type="vbox:FileSeekOrigin"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getLocationResponse">
+      <xsd:element name="IFile_seekResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::name-->
-      <xsd:element name="IMedium_getName">
+      <!-- method IFile::setACL-->
+      <xsd:element name="IFile_setACL">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="acl" type="xsd:string"/>
+            <xsd:element name="mode" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getNameResponse">
+      <xsd:element name="IFile_setACLResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IFile::setSize-->
+      <xsd:element name="IFile_setSize">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="size" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::deviceType-->
-      <xsd:element name="IMedium_getDeviceType">
+      <xsd:element name="IFile_setSizeResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IFile::write-->
+      <xsd:element name="IFile_write">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="data" type="xsd:string"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getDeviceTypeResponse">
+      <xsd:element name="IFile_writeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DeviceType"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::hostDrive-->
-      <xsd:element name="IMedium_getHostDrive">
+      <!-- method IFile::writeAt-->
+      <xsd:element name="IFile_writeAt">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="offset" type="xsd:long"/>
+            <xsd:element name="data" type="xsd:string"/>
+            <xsd:element name="timeoutMS" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getHostDriveResponse">
+      <xsd:element name="IFile_writeAtResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::size-->
-      <xsd:element name="IMedium_getSize">
+      <!--Interface IGuestFile-->
+      <!-- readonly attribute IGuestFile::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestFile_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getSizeResponse">
+      <xsd:element name="IGuestFile_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::format-->
-      <xsd:element name="IMedium_getFormat">
+      <!--Interface IFsObjInfo-->
+      <!-- readonly attribute IFsObjInfo::accessTime-->
+      <xsd:element name="IFsObjInfo_getAccessTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getFormatResponse">
+      <xsd:element name="IFsObjInfo_getAccessTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::mediumFormat-->
-      <xsd:element name="IMedium_getMediumFormat">
+      <!-- readonly attribute IFsObjInfo::allocatedSize-->
+      <xsd:element name="IFsObjInfo_getAllocatedSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getMediumFormatResponse">
+      <xsd:element name="IFsObjInfo_getAllocatedSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMedium::type-->
-      <xsd:element name="IMedium_getType">
+      <!-- readonly attribute IFsObjInfo::birthTime-->
+      <xsd:element name="IFsObjInfo_getBirthTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getTypeResponse">
+      <xsd:element name="IFsObjInfo_getBirthTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MediumType"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setType">
+      <!-- readonly attribute IFsObjInfo::changeTime-->
+      <xsd:element name="IFsObjInfo_getChangeTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:MediumType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setTypeResponse">
+      <xsd:element name="IFsObjInfo_getChangeTimeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::allowedTypes-->
-      <xsd:element name="IMedium_getAllowedTypes">
+      <!-- readonly attribute IFsObjInfo::deviceNumber-->
+      <xsd:element name="IFsObjInfo_getDeviceNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getAllowedTypesResponse">
+      <xsd:element name="IFsObjInfo_getDeviceNumberResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumType"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::parent-->
-      <xsd:element name="IMedium_getParent">
+      <!-- readonly attribute IFsObjInfo::fileAttributes-->
+      <xsd:element name="IFsObjInfo_getFileAttributes">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getParentResponse">
+      <xsd:element name="IFsObjInfo_getFileAttributesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::children-->
-      <xsd:element name="IMedium_getChildren">
+      <!-- readonly attribute IFsObjInfo::generationId-->
+      <xsd:element name="IFsObjInfo_getGenerationId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getChildrenResponse">
+      <xsd:element name="IFsObjInfo_getGenerationIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::base-->
-      <xsd:element name="IMedium_getBase">
+      <!-- readonly attribute IFsObjInfo::GID-->
+      <xsd:element name="IFsObjInfo_getGID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getBaseResponse">
+      <xsd:element name="IFsObjInfo_getGIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::readOnly-->
-      <xsd:element name="IMedium_getReadOnly">
+      <!-- readonly attribute IFsObjInfo::groupName-->
+      <xsd:element name="IFsObjInfo_getGroupName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getReadOnlyResponse">
+      <xsd:element name="IFsObjInfo_getGroupNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::logicalSize-->
-      <xsd:element name="IMedium_getLogicalSize">
+      <!-- readonly attribute IFsObjInfo::hardLinks-->
+      <xsd:element name="IFsObjInfo_getHardLinks">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getLogicalSizeResponse">
+      <xsd:element name="IFsObjInfo_getHardLinksResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMedium::autoReset-->
-      <xsd:element name="IMedium_getAutoReset">
+      <!-- readonly attribute IFsObjInfo::modificationTime-->
+      <xsd:element name="IFsObjInfo_getModificationTime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getAutoResetResponse">
+      <xsd:element name="IFsObjInfo_getModificationTimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setAutoReset">
+      <!-- readonly attribute IFsObjInfo::name-->
+      <xsd:element name="IFsObjInfo_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="autoReset" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setAutoResetResponse">
+      <xsd:element name="IFsObjInfo_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::lastAccessError-->
-      <xsd:element name="IMedium_getLastAccessError">
+      <!-- readonly attribute IFsObjInfo::nodeId-->
+      <xsd:element name="IFsObjInfo_getNodeId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getLastAccessErrorResponse">
+      <xsd:element name="IFsObjInfo_getNodeIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMedium::machineIds-->
-      <xsd:element name="IMedium_getMachineIds">
+      <!-- readonly attribute IFsObjInfo::nodeIdDevice-->
+      <xsd:element name="IFsObjInfo_getNodeIdDevice">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getMachineIdsResponse">
+      <xsd:element name="IFsObjInfo_getNodeIdDeviceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::setIds-->
-      <xsd:element name="IMedium_setIds">
+      <!-- readonly attribute IFsObjInfo::objectSize-->
+      <xsd:element name="IFsObjInfo_getObjectSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="setImageId" type="xsd:boolean"/>
-            <xsd:element name="imageId" type="xsd:string"/>
-            <xsd:element name="setParentId" type="xsd:boolean"/>
-            <xsd:element name="parentId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setIdsResponse">
+      <xsd:element name="IFsObjInfo_getObjectSizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::refreshState-->
-      <xsd:element name="IMedium_refreshState">
+      <!-- readonly attribute IFsObjInfo::type-->
+      <xsd:element name="IFsObjInfo_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_refreshStateResponse">
+      <xsd:element name="IFsObjInfo_getTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MediumState"/>
+            <xsd:element name="returnval" type="vbox:FsObjType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::getSnapshotIds-->
-      <xsd:element name="IMedium_getSnapshotIds">
+      <!-- readonly attribute IFsObjInfo::UID-->
+      <xsd:element name="IFsObjInfo_getUID">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="machineId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getSnapshotIdsResponse">
+      <xsd:element name="IFsObjInfo_getUIDResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::lockRead-->
-      <xsd:element name="IMedium_lockRead">
+      <!-- readonly attribute IFsObjInfo::userFlags-->
+      <xsd:element name="IFsObjInfo_getUserFlags">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_lockReadResponse">
+      <xsd:element name="IFsObjInfo_getUserFlagsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::lockWrite-->
-      <xsd:element name="IMedium_lockWrite">
+      <!-- readonly attribute IFsObjInfo::userName-->
+      <xsd:element name="IFsObjInfo_getUserName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_lockWriteResponse">
+      <xsd:element name="IFsObjInfo_getUserNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::close-->
-      <xsd:element name="IMedium_close">
+      <!--Interface IGuestFsObjInfo-->
+      <!-- readonly attribute IGuestFsObjInfo::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_closeResponse">
+      <xsd:element name="IGuestFsObjInfo_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::getProperty-->
-      <xsd:element name="IMedium_getProperty">
+      <!--Interface IGuest-->
+      <!-- readonly attribute IGuest::OSTypeId-->
+      <xsd:element name="IGuest_getOSTypeId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getPropertyResponse">
+      <xsd:element name="IGuest_getOSTypeIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::setProperty-->
-      <xsd:element name="IMedium_setProperty">
+      <!-- readonly attribute IGuest::additionsRunLevel-->
+      <xsd:element name="IGuest_getAdditionsRunLevel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setPropertyResponse">
+      <xsd:element name="IGuest_getAdditionsRunLevelResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:AdditionsRunLevelType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::getProperties-->
-      <xsd:element name="IMedium_getProperties">
+      <!-- readonly attribute IGuest::additionsVersion-->
+      <xsd:element name="IGuest_getAdditionsVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="names" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getPropertiesResponse">
+      <xsd:element name="IGuest_getAdditionsVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::setProperties-->
-      <xsd:element name="IMedium_setProperties">
+      <!-- readonly attribute IGuest::additionsRevision-->
+      <xsd:element name="IGuest_getAdditionsRevision">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setPropertiesResponse">
+      <xsd:element name="IGuest_getAdditionsRevisionResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::createBaseStorage-->
-      <xsd:element name="IMedium_createBaseStorage">
+      <!-- readonly attribute IGuest::dnDSource-->
+      <xsd:element name="IGuest_getDnDSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logicalSize" type="xsd:long"/>
-            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_createBaseStorageResponse">
+      <xsd:element name="IGuest_getDnDSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::deleteStorage-->
-      <xsd:element name="IMedium_deleteStorage">
+      <!-- readonly attribute IGuest::dnDTarget-->
+      <xsd:element name="IGuest_getDnDTarget">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_deleteStorageResponse">
+      <xsd:element name="IGuest_getDnDTargetResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::createDiffStorage-->
-      <xsd:element name="IMedium_createDiffStorage">
+      <!-- readonly attribute IGuest::eventSource-->
+      <xsd:element name="IGuest_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
-            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_createDiffStorageResponse">
+      <xsd:element name="IGuest_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::mergeTo-->
-      <xsd:element name="IMedium_mergeTo">
+      <!-- readonly attribute IGuest::facilities-->
+      <xsd:element name="IGuest_getFacilities">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_mergeToResponse">
+      <xsd:element name="IGuest_getFacilitiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:IAdditionsFacility"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::cloneTo-->
-      <xsd:element name="IMedium_cloneTo">
+      <!-- readonly attribute IGuest::sessions-->
+      <xsd:element name="IGuest_getSessions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
-            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
-            <xsd:element name="parent" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_cloneToResponse">
+      <xsd:element name="IGuest_getSessionsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::cloneToBase-->
-      <xsd:element name="IMedium_cloneToBase">
+      <!-- read/write attribute IGuest::memoryBalloonSize-->
+      <xsd:element name="IGuest_getMemoryBalloonSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="target" type="xsd:string"/>
-            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_cloneToBaseResponse">
+      <xsd:element name="IGuest_getMemoryBalloonSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::setLocation-->
-      <xsd:element name="IMedium_setLocation">
+      <xsd:element name="IGuest_setMemoryBalloonSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="location" type="xsd:string"/>
+            <xsd:element name="memoryBalloonSize" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_setLocationResponse">
+      <xsd:element name="IGuest_setMemoryBalloonSizeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::compact-->
-      <xsd:element name="IMedium_compact">
+      <!-- read/write attribute IGuest::statisticsUpdateInterval-->
+      <xsd:element name="IGuest_getStatisticsUpdateInterval">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_compactResponse">
+      <xsd:element name="IGuest_getStatisticsUpdateIntervalResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::resize-->
-      <xsd:element name="IMedium_resize">
+      <xsd:element name="IGuest_setStatisticsUpdateInterval">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logicalSize" type="xsd:long"/>
+            <xsd:element name="statisticsUpdateInterval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_resizeResponse">
+      <xsd:element name="IGuest_setStatisticsUpdateIntervalResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::reset-->
-      <xsd:element name="IMedium_reset">
+      <!-- method IGuest::internalGetStatistics-->
+      <xsd:element name="IGuest_internalGetStatistics">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_resetResponse">
+      <xsd:element name="IGuest_internalGetStatisticsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="cpuUser" type="xsd:unsignedInt"/>
+            <xsd:element name="cpuKernel" type="xsd:unsignedInt"/>
+            <xsd:element name="cpuIdle" type="xsd:unsignedInt"/>
+            <xsd:element name="memTotal" type="xsd:unsignedInt"/>
+            <xsd:element name="memFree" type="xsd:unsignedInt"/>
+            <xsd:element name="memBalloon" type="xsd:unsignedInt"/>
+            <xsd:element name="memShared" type="xsd:unsignedInt"/>
+            <xsd:element name="memCache" type="xsd:unsignedInt"/>
+            <xsd:element name="pagedTotal" type="xsd:unsignedInt"/>
+            <xsd:element name="memAllocTotal" type="xsd:unsignedInt"/>
+            <xsd:element name="memFreeTotal" type="xsd:unsignedInt"/>
+            <xsd:element name="memBalloonTotal" type="xsd:unsignedInt"/>
+            <xsd:element name="memSharedTotal" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::changeEncryption-->
-      <xsd:element name="IMedium_changeEncryption">
+      <!-- method IGuest::getFacilityStatus-->
+      <xsd:element name="IGuest_getFacilityStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="currentPassword" type="xsd:string"/>
-            <xsd:element name="cipher" type="xsd:string"/>
-            <xsd:element name="newPassword" type="xsd:string"/>
-            <xsd:element name="newPasswordId" type="xsd:string"/>
+            <xsd:element name="facility" type="vbox:AdditionsFacilityType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_changeEncryptionResponse">
+      <xsd:element name="IGuest_getFacilityStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="timestamp" type="xsd:long"/>
+            <xsd:element name="returnval" type="vbox:AdditionsFacilityStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::getEncryptionSettings-->
-      <xsd:element name="IMedium_getEncryptionSettings">
+      <!-- method IGuest::getAdditionsStatus-->
+      <xsd:element name="IGuest_getAdditionsStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="level" type="vbox:AdditionsRunLevelType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_getEncryptionSettingsResponse">
+      <xsd:element name="IGuest_getAdditionsStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="cipher" type="xsd:string"/>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMedium::checkEncryptionPassword-->
-      <xsd:element name="IMedium_checkEncryptionPassword">
+      <!-- method IGuest::setCredentials-->
+      <xsd:element name="IGuest_setCredentials">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="userName" type="xsd:string"/>
             <xsd:element name="password" type="xsd:string"/>
+            <xsd:element name="domain" type="xsd:string"/>
+            <xsd:element name="allowInteractiveLogon" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMedium_checkEncryptionPasswordResponse">
+      <xsd:element name="IGuest_setCredentialsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMediumFormat-->
-      <!-- readonly attribute IMediumFormat::id-->
-      <xsd:element name="IMediumFormat_getId">
+      <!-- method IGuest::createSession-->
+      <xsd:element name="IGuest_createSession">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="user" type="xsd:string"/>
+            <xsd:element name="password" type="xsd:string"/>
+            <xsd:element name="domain" type="xsd:string"/>
+            <xsd:element name="sessionName" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumFormat_getIdResponse">
+      <xsd:element name="IGuest_createSessionResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMediumFormat::name-->
-      <xsd:element name="IMediumFormat_getName">
+      <!-- method IGuest::findSession-->
+      <xsd:element name="IGuest_findSession">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="sessionName" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumFormat_getNameResponse">
+      <xsd:element name="IGuest_findSessionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMediumFormat::capabilities-->
-      <xsd:element name="IMediumFormat_getCapabilities">
+      <!-- method IGuest::updateGuestAdditions-->
+      <xsd:element name="IGuest_updateGuestAdditions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="source" type="xsd:string"/>
+            <xsd:element name="arguments" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="vbox:AdditionsUpdateFlag"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumFormat_getCapabilitiesResponse">
+      <xsd:element name="IGuest_updateGuestAdditionsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumFormatCapabilities"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMediumFormat::describeFileExtensions-->
-      <xsd:element name="IMediumFormat_describeFileExtensions">
+      <!--Interface IProgress-->
+      <!-- readonly attribute IProgress::id-->
+      <xsd:element name="IProgress_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumFormat_describeFileExtensionsResponse">
+      <xsd:element name="IProgress_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="extensions" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMediumFormat::describeProperties-->
-      <xsd:element name="IMediumFormat_describeProperties">
+      <!-- readonly attribute IProgress::description-->
+      <xsd:element name="IProgress_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumFormat_describePropertiesResponse">
+      <xsd:element name="IProgress_getDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="descriptions" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:DataType"/>
-            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
-            <xsd:element name="defaults" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IToken-->
-      <!-- method IToken::abandon-->
-      <xsd:element name="IToken_abandon">
+      <!-- readonly attribute IProgress::initiator-->
+      <xsd:element name="IProgress_getInitiator">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IToken_abandonResponse">
+      <xsd:element name="IProgress_getInitiatorResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IToken::dummy-->
-      <xsd:element name="IToken_dummy">
+      <!-- readonly attribute IProgress::cancelable-->
+      <xsd:element name="IProgress_getCancelable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IToken_dummyResponse">
+      <xsd:element name="IProgress_getCancelableResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IKeyboard-->
-      <!-- readonly attribute IKeyboard::keyboardLEDs-->
-      <xsd:element name="IKeyboard_getKeyboardLEDs">
+      <!-- readonly attribute IProgress::percent-->
+      <xsd:element name="IProgress_getPercent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_getKeyboardLEDsResponse">
+      <xsd:element name="IProgress_getPercentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:KeyboardLED"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IKeyboard::eventSource-->
-      <xsd:element name="IKeyboard_getEventSource">
+      <!-- readonly attribute IProgress::timeRemaining-->
+      <xsd:element name="IProgress_getTimeRemaining">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_getEventSourceResponse">
+      <xsd:element name="IProgress_getTimeRemainingResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IKeyboard::putScancode-->
-      <xsd:element name="IKeyboard_putScancode">
+      <!-- readonly attribute IProgress::completed-->
+      <xsd:element name="IProgress_getCompleted">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="scancode" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_putScancodeResponse">
+      <xsd:element name="IProgress_getCompletedResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IKeyboard::putScancodes-->
-      <xsd:element name="IKeyboard_putScancodes">
+      <!-- readonly attribute IProgress::canceled-->
+      <xsd:element name="IProgress_getCanceled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="scancodes" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_putScancodesResponse">
+      <xsd:element name="IProgress_getCanceledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IKeyboard::putCAD-->
-      <xsd:element name="IKeyboard_putCAD">
+      <!-- readonly attribute IProgress::resultCode-->
+      <xsd:element name="IProgress_getResultCode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_putCADResponse">
+      <xsd:element name="IProgress_getResultCodeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IKeyboard::releaseKeys-->
-      <xsd:element name="IKeyboard_releaseKeys">
+      <!-- readonly attribute IProgress::errorInfo-->
+      <xsd:element name="IProgress_getErrorInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboard_releaseKeysResponse">
+      <xsd:element name="IProgress_getErrorInfoResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMousePointerShape-->
-      <!-- readonly attribute IMousePointerShape::visible-->
-      <xsd:element name="IMousePointerShape_getVisible">
+      <!-- readonly attribute IProgress::operationCount-->
+      <xsd:element name="IProgress_getOperationCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getVisibleResponse">
+      <xsd:element name="IProgress_getOperationCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::alpha-->
-      <xsd:element name="IMousePointerShape_getAlpha">
+      <!-- readonly attribute IProgress::operation-->
+      <xsd:element name="IProgress_getOperation">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getAlphaResponse">
+      <xsd:element name="IProgress_getOperationResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::hotX-->
-      <xsd:element name="IMousePointerShape_getHotX">
+      <!-- readonly attribute IProgress::operationDescription-->
+      <xsd:element name="IProgress_getOperationDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getHotXResponse">
+      <xsd:element name="IProgress_getOperationDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::hotY-->
-      <xsd:element name="IMousePointerShape_getHotY">
+      <!-- readonly attribute IProgress::operationPercent-->
+      <xsd:element name="IProgress_getOperationPercent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getHotYResponse">
+      <xsd:element name="IProgress_getOperationPercentResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::width-->
-      <xsd:element name="IMousePointerShape_getWidth">
+      <!-- readonly attribute IProgress::operationWeight-->
+      <xsd:element name="IProgress_getOperationWeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getWidthResponse">
+      <xsd:element name="IProgress_getOperationWeightResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::height-->
-      <xsd:element name="IMousePointerShape_getHeight">
+      <!-- read/write attribute IProgress::timeout-->
+      <xsd:element name="IProgress_getTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getHeightResponse">
+      <xsd:element name="IProgress_getTimeoutResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShape::shape-->
-      <xsd:element name="IMousePointerShape_getShape">
+      <xsd:element name="IProgress_setTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="timeout" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShape_getShapeResponse">
+      <xsd:element name="IProgress_setTimeoutResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMouse-->
-      <!-- readonly attribute IMouse::absoluteSupported-->
-      <xsd:element name="IMouse_getAbsoluteSupported">
+      <!-- readonly attribute IProgress::eventSource-->
+      <xsd:element name="IProgress_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getAbsoluteSupportedResponse">
+      <xsd:element name="IProgress_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouse::relativeSupported-->
-      <xsd:element name="IMouse_getRelativeSupported">
+      <!-- method IProgress::setCurrentOperationProgress-->
+      <xsd:element name="IProgress_setCurrentOperationProgress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="percent" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getRelativeSupportedResponse">
+      <xsd:element name="IProgress_setCurrentOperationProgressResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouse::multiTouchSupported-->
-      <xsd:element name="IMouse_getMultiTouchSupported">
+      <!-- method IProgress::setNextOperation-->
+      <xsd:element name="IProgress_setNextOperation">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="nextOperationDescription" type="xsd:string"/>
+            <xsd:element name="nextOperationsWeight" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getMultiTouchSupportedResponse">
+      <xsd:element name="IProgress_setNextOperationResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouse::needsHostCursor-->
-      <xsd:element name="IMouse_getNeedsHostCursor">
+      <!-- method IProgress::waitForCompletion-->
+      <xsd:element name="IProgress_waitForCompletion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getNeedsHostCursorResponse">
+      <xsd:element name="IProgress_waitForCompletionResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IProgress::waitForOperationCompletion-->
+      <xsd:element name="IProgress_waitForOperationCompletion">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="operation" type="xsd:unsignedInt"/>
+            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouse::pointerShape-->
-      <xsd:element name="IMouse_getPointerShape">
+      <xsd:element name="IProgress_waitForOperationCompletionResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IProgress::waitForAsyncProgressCompletion-->
+      <xsd:element name="IProgress_waitForAsyncProgressCompletion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="pProgressAsync" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getPointerShapeResponse">
+      <xsd:element name="IProgress_waitForAsyncProgressCompletionResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IProgress::cancel-->
+      <xsd:element name="IProgress_cancel">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouse::eventSource-->
-      <xsd:element name="IMouse_getEventSource">
+      <xsd:element name="IProgress_cancelResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface ISnapshot-->
+      <!-- readonly attribute ISnapshot::id-->
+      <xsd:element name="ISnapshot_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_getEventSourceResponse">
+      <xsd:element name="ISnapshot_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMouse::putMouseEvent-->
-      <xsd:element name="IMouse_putMouseEvent">
+      <!-- read/write attribute ISnapshot::name-->
+      <xsd:element name="ISnapshot_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="dx" type="xsd:int"/>
-            <xsd:element name="dy" type="xsd:int"/>
-            <xsd:element name="dz" type="xsd:int"/>
-            <xsd:element name="dw" type="xsd:int"/>
-            <xsd:element name="buttonState" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_putMouseEventResponse">
+      <xsd:element name="ISnapshot_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMouse::putMouseEventAbsolute-->
-      <xsd:element name="IMouse_putMouseEventAbsolute">
+      <xsd:element name="ISnapshot_setName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="x" type="xsd:int"/>
-            <xsd:element name="y" type="xsd:int"/>
-            <xsd:element name="dz" type="xsd:int"/>
-            <xsd:element name="dw" type="xsd:int"/>
-            <xsd:element name="buttonState" type="xsd:int"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_putMouseEventAbsoluteResponse">
+      <xsd:element name="ISnapshot_setNameResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMouse::putEventMultiTouch-->
-      <xsd:element name="IMouse_putEventMultiTouch">
+      <!-- read/write attribute ISnapshot::description-->
+      <xsd:element name="ISnapshot_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="count" type="xsd:int"/>
-            <xsd:element name="contacts" minOccurs="0" maxOccurs="unbounded" type="xsd:long"/>
-            <xsd:element name="scanTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_putEventMultiTouchResponse">
+      <xsd:element name="ISnapshot_getDescriptionResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMouse::putEventMultiTouchString-->
-      <xsd:element name="IMouse_putEventMultiTouchString">
+      <xsd:element name="ISnapshot_setDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="count" type="xsd:int"/>
-            <xsd:element name="contacts" type="xsd:string"/>
-            <xsd:element name="scanTime" type="xsd:unsignedInt"/>
+            <xsd:element name="description" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouse_putEventMultiTouchStringResponse">
+      <xsd:element name="ISnapshot_setDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IFramebuffer-->
-      <!-- readonly attribute IFramebuffer::width-->
-      <xsd:element name="IFramebuffer_getWidth">
+      <!-- readonly attribute ISnapshot::timeStamp-->
+      <xsd:element name="ISnapshot_getTimeStamp">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getWidthResponse">
+      <xsd:element name="ISnapshot_getTimeStampResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::height-->
-      <xsd:element name="IFramebuffer_getHeight">
+      <!-- readonly attribute ISnapshot::online-->
+      <xsd:element name="ISnapshot_getOnline">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getHeightResponse">
+      <xsd:element name="ISnapshot_getOnlineResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::bitsPerPixel-->
-      <xsd:element name="IFramebuffer_getBitsPerPixel">
+      <!-- readonly attribute ISnapshot::machine-->
+      <xsd:element name="ISnapshot_getMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getBitsPerPixelResponse">
+      <xsd:element name="ISnapshot_getMachineResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::bytesPerLine-->
-      <xsd:element name="IFramebuffer_getBytesPerLine">
+      <!-- readonly attribute ISnapshot::parent-->
+      <xsd:element name="ISnapshot_getParent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getBytesPerLineResponse">
+      <xsd:element name="ISnapshot_getParentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::pixelFormat-->
-      <xsd:element name="IFramebuffer_getPixelFormat">
+      <!-- readonly attribute ISnapshot::children-->
+      <xsd:element name="ISnapshot_getChildren">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getPixelFormatResponse">
+      <xsd:element name="ISnapshot_getChildrenResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:BitmapFormat"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::heightReduction-->
-      <xsd:element name="IFramebuffer_getHeightReduction">
+      <!-- method ISnapshot::getChildrenCount-->
+      <xsd:element name="ISnapshot_getChildrenCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getHeightReductionResponse">
+      <xsd:element name="ISnapshot_getChildrenCountResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebuffer::overlay-->
-      <xsd:element name="IFramebuffer_getOverlay">
+      <!--Interface IMedium-->
+      <!-- readonly attribute IMedium::id-->
+      <xsd:element name="IMedium_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getOverlayResponse">
+      <xsd:element name="IMedium_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--skipping attribute winId for it is suppressed-->
-      <!-- readonly attribute IFramebuffer::capabilities-->
-      <xsd:element name="IFramebuffer_getCapabilities">
+      <!-- read/write attribute IMedium::description-->
+      <xsd:element name="IMedium_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_getCapabilitiesResponse">
+      <xsd:element name="IMedium_getDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:FramebufferCapabilities"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebuffer::notifyUpdate-->
-      <xsd:element name="IFramebuffer_notifyUpdate">
+      <xsd:element name="IMedium_setDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="description" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_notifyUpdateResponse">
+      <xsd:element name="IMedium_setDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebuffer::notifyUpdateImage-->
-      <xsd:element name="IFramebuffer_notifyUpdateImage">
+      <!-- readonly attribute IMedium::state-->
+      <xsd:element name="IMedium_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="image" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_notifyUpdateImageResponse">
+      <xsd:element name="IMedium_getStateResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:MediumState"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebuffer::notifyChange-->
-      <xsd:element name="IFramebuffer_notifyChange">
+      <!-- readonly attribute IMedium::variant-->
+      <xsd:element name="IMedium_getVariant">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="xOrigin" type="xsd:unsignedInt"/>
-            <xsd:element name="yOrigin" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_notifyChangeResponse">
+      <xsd:element name="IMedium_getVariantResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebuffer::videoModeSupported-->
-      <xsd:element name="IFramebuffer_videoModeSupported">
+      <!-- readonly attribute IMedium::location-->
+      <xsd:element name="IMedium_getLocation">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="bpp" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_videoModeSupportedResponse">
+      <xsd:element name="IMedium_getLocationResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebuffer::getVisibleRegion-->
-      <!--skipping method getVisibleRegion for it has parameters with suppressed types-->
-      <!-- method IFramebuffer::setVisibleRegion-->
-      <!--skipping method setVisibleRegion for it has parameters with suppressed types-->
-      <!-- method IFramebuffer::processVHWACommand-->
-      <!--skipping method processVHWACommand for it has parameters with suppressed types-->
-      <!-- method IFramebuffer::notify3DEvent-->
-      <xsd:element name="IFramebuffer_notify3DEvent">
+      <!-- readonly attribute IMedium::name-->
+      <xsd:element name="IMedium_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="xsd:unsignedInt"/>
-            <xsd:element name="data" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebuffer_notify3DEventResponse">
+      <xsd:element name="IMedium_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IFramebufferOverlay-->
-      <!-- readonly attribute IFramebufferOverlay::x-->
-      <xsd:element name="IFramebufferOverlay_getX">
+      <!-- readonly attribute IMedium::deviceType-->
+      <xsd:element name="IMedium_getDeviceType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_getXResponse">
+      <xsd:element name="IMedium_getDeviceTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:DeviceType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IFramebufferOverlay::y-->
-      <xsd:element name="IFramebufferOverlay_getY">
+      <!-- readonly attribute IMedium::hostDrive-->
+      <xsd:element name="IMedium_getHostDrive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_getYResponse">
+      <xsd:element name="IMedium_getHostDriveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IFramebufferOverlay::visible-->
-      <xsd:element name="IFramebufferOverlay_getVisible">
+      <!-- readonly attribute IMedium::size-->
+      <xsd:element name="IMedium_getSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_getVisibleResponse">
+      <xsd:element name="IMedium_getSizeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_setVisible">
+      <!-- readonly attribute IMedium::format-->
+      <xsd:element name="IMedium_getFormat">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="visible" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_setVisibleResponse">
+      <xsd:element name="IMedium_getFormatResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IFramebufferOverlay::alpha-->
-      <xsd:element name="IFramebufferOverlay_getAlpha">
+      <!-- readonly attribute IMedium::mediumFormat-->
+      <xsd:element name="IMedium_getMediumFormat">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_getAlphaResponse">
+      <xsd:element name="IMedium_getMediumFormatResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_setAlpha">
+      <!-- read/write attribute IMedium::type-->
+      <xsd:element name="IMedium_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="alpha" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_setAlphaResponse">
+      <xsd:element name="IMedium_getTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:MediumType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IFramebufferOverlay::move-->
-      <xsd:element name="IFramebufferOverlay_move">
+      <xsd:element name="IMedium_setType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="type" type="vbox:MediumType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IFramebufferOverlay_moveResponse">
+      <xsd:element name="IMedium_setTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDisplay-->
-      <!-- method IDisplay::getScreenResolution-->
-      <xsd:element name="IDisplay_getScreenResolution">
+      <!-- readonly attribute IMedium::allowedTypes-->
+      <xsd:element name="IMedium_getAllowedTypes">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_getScreenResolutionResponse">
+      <xsd:element name="IMedium_getAllowedTypesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="bitsPerPixel" type="xsd:unsignedInt"/>
-            <xsd:element name="xOrigin" type="xsd:int"/>
-            <xsd:element name="yOrigin" type="xsd:int"/>
-            <xsd:element name="guestMonitorStatus" type="vbox:GuestMonitorStatus"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::attachFramebuffer-->
-      <xsd:element name="IDisplay_attachFramebuffer">
+      <!-- readonly attribute IMedium::parent-->
+      <xsd:element name="IMedium_getParent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="framebuffer" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_attachFramebufferResponse">
+      <xsd:element name="IMedium_getParentResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::detachFramebuffer-->
-      <xsd:element name="IDisplay_detachFramebuffer">
+      <!-- readonly attribute IMedium::children-->
+      <xsd:element name="IMedium_getChildren">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_detachFramebufferResponse">
+      <xsd:element name="IMedium_getChildrenResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::queryFramebuffer-->
-      <xsd:element name="IDisplay_queryFramebuffer">
+      <!-- readonly attribute IMedium::base-->
+      <xsd:element name="IMedium_getBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_queryFramebufferResponse">
+      <xsd:element name="IMedium_getBaseResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::setVideoModeHint-->
-      <xsd:element name="IDisplay_setVideoModeHint">
+      <!-- readonly attribute IMedium::readOnly-->
+      <xsd:element name="IMedium_getReadOnly">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="display" type="xsd:unsignedInt"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
-            <xsd:element name="changeOrigin" type="xsd:boolean"/>
-            <xsd:element name="originX" type="xsd:int"/>
-            <xsd:element name="originY" type="xsd:int"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="bitsPerPixel" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_setVideoModeHintResponse">
+      <xsd:element name="IMedium_getReadOnlyResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::setSeamlessMode-->
-      <xsd:element name="IDisplay_setSeamlessMode">
+      <!-- readonly attribute IMedium::logicalSize-->
+      <xsd:element name="IMedium_getLogicalSize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_setSeamlessModeResponse">
+      <xsd:element name="IMedium_getLogicalSizeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::takeScreenShot-->
-      <!--skipping method takeScreenShot for it has parameters with suppressed types-->
-      <!-- method IDisplay::takeScreenShotToArray-->
-      <xsd:element name="IDisplay_takeScreenShotToArray">
+      <!-- read/write attribute IMedium::autoReset-->
+      <xsd:element name="IMedium_getAutoReset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
-            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_takeScreenShotToArrayResponse">
+      <xsd:element name="IMedium_getAutoResetResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::drawToScreen-->
-      <!--skipping method drawToScreen for it has parameters with suppressed types-->
-      <!-- method IDisplay::invalidateAndUpdate-->
-      <xsd:element name="IDisplay_invalidateAndUpdate">
+      <xsd:element name="IMedium_setAutoReset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="autoReset" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_invalidateAndUpdateResponse">
+      <xsd:element name="IMedium_setAutoResetResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::invalidateAndUpdateScreen-->
-      <xsd:element name="IDisplay_invalidateAndUpdateScreen">
+      <!-- readonly attribute IMedium::lastAccessError-->
+      <xsd:element name="IMedium_getLastAccessError">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_invalidateAndUpdateScreenResponse">
+      <xsd:element name="IMedium_getLastAccessErrorResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IDisplay::completeVHWACommand-->
-      <!--skipping method completeVHWACommand for it has parameters with suppressed types-->
-      <!-- method IDisplay::viewportChanged-->
-      <xsd:element name="IDisplay_viewportChanged">
+      <!-- readonly attribute IMedium::machineIds-->
+      <xsd:element name="IMedium_getMachineIds">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="x" type="xsd:unsignedInt"/>
-            <xsd:element name="y" type="xsd:unsignedInt"/>
-            <xsd:element name="width" type="xsd:unsignedInt"/>
-            <xsd:element name="height" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_viewportChangedResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IDisplay::querySourceBitmap-->
-      <!--skipping method querySourceBitmap for it has parameters with suppressed types-->
-      <!-- method IDisplay::notifyScaleFactorChange-->
-      <xsd:element name="IDisplay_notifyScaleFactorChange">
+      <xsd:element name="IMedium_getMachineIdsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="screenId" type="xsd:unsignedInt"/>
-            <xsd:element name="u32ScaleFactorWMultiplied" type="xsd:unsignedInt"/>
-            <xsd:element name="u32ScaleFactorHMultiplied" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_notifyScaleFactorChangeResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IDisplay::notifyHiDPIOutputPolicyChange-->
-      <xsd:element name="IDisplay_notifyHiDPIOutputPolicyChange">
+      <!-- method IMedium::setIds-->
+      <xsd:element name="IMedium_setIds">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="fUnscaledHiDPI" type="xsd:boolean"/>
+            <xsd:element name="setImageId" type="xsd:boolean"/>
+            <xsd:element name="imageId" type="xsd:string"/>
+            <xsd:element name="setParentId" type="xsd:boolean"/>
+            <xsd:element name="parentId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDisplay_notifyHiDPIOutputPolicyChangeResponse">
+      <xsd:element name="IMedium_setIdsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INetworkAdapter-->
-      <!-- read/write attribute INetworkAdapter::adapterType-->
-      <xsd:element name="INetworkAdapter_getAdapterType">
+      <!-- method IMedium::refreshState-->
+      <xsd:element name="IMedium_refreshState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getAdapterTypeResponse">
+      <xsd:element name="IMedium_refreshStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:NetworkAdapterType"/>
+            <xsd:element name="returnval" type="vbox:MediumState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setAdapterType">
+      <!-- method IMedium::getSnapshotIds-->
+      <xsd:element name="IMedium_getSnapshotIds">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="adapterType" type="vbox:NetworkAdapterType"/>
+            <xsd:element name="machineId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setAdapterTypeResponse">
+      <xsd:element name="IMedium_getSnapshotIdsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INetworkAdapter::slot-->
-      <xsd:element name="INetworkAdapter_getSlot">
+      <!-- method IMedium::lockRead-->
+      <xsd:element name="IMedium_lockRead">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getSlotResponse">
+      <xsd:element name="IMedium_lockReadResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::enabled-->
-      <xsd:element name="INetworkAdapter_getEnabled">
+      <!-- method IMedium::lockWrite-->
+      <xsd:element name="IMedium_lockWrite">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getEnabledResponse">
+      <xsd:element name="IMedium_lockWriteResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setEnabled">
+      <!-- method IMedium::close-->
+      <xsd:element name="IMedium_close">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setEnabledResponse">
+      <xsd:element name="IMedium_closeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::MACAddress-->
-      <xsd:element name="INetworkAdapter_getMACAddress">
+      <!-- method IMedium::getProperty-->
+      <xsd:element name="IMedium_getProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getMACAddressResponse">
+      <xsd:element name="IMedium_getPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setMACAddress">
+      <!-- method IMedium::setProperty-->
+      <xsd:element name="IMedium_setProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="MACAddress" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setMACAddressResponse">
+      <xsd:element name="IMedium_setPropertyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::attachmentType-->
-      <xsd:element name="INetworkAdapter_getAttachmentType">
+      <!-- method IMedium::getProperties-->
+      <xsd:element name="IMedium_getProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="names" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getAttachmentTypeResponse">
+      <xsd:element name="IMedium_getPropertiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:NetworkAttachmentType"/>
+            <xsd:element name="returnNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setAttachmentType">
+      <!-- method IMedium::setProperties-->
+      <xsd:element name="IMedium_setProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="attachmentType" type="vbox:NetworkAttachmentType"/>
+            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setAttachmentTypeResponse">
+      <xsd:element name="IMedium_setPropertiesResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::bridgedInterface-->
-      <xsd:element name="INetworkAdapter_getBridgedInterface">
+      <!-- method IMedium::createBaseStorage-->
+      <xsd:element name="IMedium_createBaseStorage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="logicalSize" type="xsd:long"/>
+            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getBridgedInterfaceResponse">
+      <xsd:element name="IMedium_createBaseStorageResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setBridgedInterface">
+      <!-- method IMedium::deleteStorage-->
+      <xsd:element name="IMedium_deleteStorage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bridgedInterface" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setBridgedInterfaceResponse">
+      <xsd:element name="IMedium_deleteStorageResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::hostOnlyInterface-->
-      <xsd:element name="INetworkAdapter_getHostOnlyInterface">
+      <!-- method IMedium::createDiffStorage-->
+      <xsd:element name="IMedium_createDiffStorage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
+            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getHostOnlyInterfaceResponse">
+      <xsd:element name="IMedium_createDiffStorageResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setHostOnlyInterface">
+      <!-- method IMedium::mergeTo-->
+      <xsd:element name="IMedium_mergeTo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostOnlyInterface" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setHostOnlyInterfaceResponse">
+      <xsd:element name="IMedium_mergeToResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::internalNetwork-->
-      <xsd:element name="INetworkAdapter_getInternalNetwork">
+      <!-- method IMedium::cloneTo-->
+      <xsd:element name="IMedium_cloneTo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
+            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
+            <xsd:element name="parent" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getInternalNetworkResponse">
+      <xsd:element name="IMedium_cloneToResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setInternalNetwork">
+      <!-- method IMedium::cloneToBase-->
+      <xsd:element name="IMedium_cloneToBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="internalNetwork" type="xsd:string"/>
+            <xsd:element name="target" type="xsd:string"/>
+            <xsd:element name="variant" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumVariant"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setInternalNetworkResponse">
+      <xsd:element name="IMedium_cloneToBaseResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::NATNetwork-->
-      <xsd:element name="INetworkAdapter_getNATNetwork">
+      <!-- method IMedium::setLocation-->
+      <xsd:element name="IMedium_setLocation">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="location" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getNATNetworkResponse">
+      <xsd:element name="IMedium_setLocationResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setNATNetwork">
+      <!-- method IMedium::compact-->
+      <xsd:element name="IMedium_compact">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="NATNetwork" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setNATNetworkResponse">
+      <xsd:element name="IMedium_compactResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::genericDriver-->
-      <xsd:element name="INetworkAdapter_getGenericDriver">
+      <!-- method IMedium::resize-->
+      <xsd:element name="IMedium_resize">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="logicalSize" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getGenericDriverResponse">
+      <xsd:element name="IMedium_resizeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setGenericDriver">
+      <!-- method IMedium::reset-->
+      <xsd:element name="IMedium_reset">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="genericDriver" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setGenericDriverResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute INetworkAdapter::cableConnected-->
-      <xsd:element name="INetworkAdapter_getCableConnected">
+      <xsd:element name="IMedium_resetResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getCableConnectedResponse">
+      <!-- method IMedium::changeEncryption-->
+      <xsd:element name="IMedium_changeEncryption">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="currentPassword" type="xsd:string"/>
+            <xsd:element name="cipher" type="xsd:string"/>
+            <xsd:element name="newPassword" type="xsd:string"/>
+            <xsd:element name="newPasswordId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setCableConnected">
+      <xsd:element name="IMedium_changeEncryptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cableConnected" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setCableConnectedResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute INetworkAdapter::lineSpeed-->
-      <xsd:element name="INetworkAdapter_getLineSpeed">
+      <!-- method IMedium::getEncryptionSettings-->
+      <xsd:element name="IMedium_getEncryptionSettings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getLineSpeedResponse">
+      <xsd:element name="IMedium_getEncryptionSettingsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="cipher" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setLineSpeed">
+      <!-- method IMedium::checkEncryptionPassword-->
+      <xsd:element name="IMedium_checkEncryptionPassword">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="lineSpeed" type="xsd:unsignedInt"/>
+            <xsd:element name="password" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setLineSpeedResponse">
+      <xsd:element name="IMedium_checkEncryptionPasswordResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::promiscModePolicy-->
-      <xsd:element name="INetworkAdapter_getPromiscModePolicy">
+      <!--Interface IMediumFormat-->
+      <!-- readonly attribute IMediumFormat::id-->
+      <xsd:element name="IMediumFormat_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getPromiscModePolicyResponse">
+      <xsd:element name="IMediumFormat_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:NetworkAdapterPromiscModePolicy"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setPromiscModePolicy">
+      <!-- readonly attribute IMediumFormat::name-->
+      <xsd:element name="IMediumFormat_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="promiscModePolicy" type="vbox:NetworkAdapterPromiscModePolicy"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setPromiscModePolicyResponse">
+      <xsd:element name="IMediumFormat_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::traceEnabled-->
-      <xsd:element name="INetworkAdapter_getTraceEnabled">
+      <!-- readonly attribute IMediumFormat::capabilities-->
+      <xsd:element name="IMediumFormat_getCapabilities">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getTraceEnabledResponse">
+      <xsd:element name="IMediumFormat_getCapabilitiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:MediumFormatCapabilities"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setTraceEnabled">
+      <!-- method IMediumFormat::describeFileExtensions-->
+      <xsd:element name="IMediumFormat_describeFileExtensions">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="traceEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setTraceEnabledResponse">
+      <xsd:element name="IMediumFormat_describeFileExtensionsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="extensions" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:DeviceType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::traceFile-->
-      <xsd:element name="INetworkAdapter_getTraceFile">
+      <!-- method IMediumFormat::describeProperties-->
+      <xsd:element name="IMediumFormat_describeProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getTraceFileResponse">
+      <xsd:element name="IMediumFormat_describePropertiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="descriptions" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="types" minOccurs="0" maxOccurs="unbounded" type="vbox:DataType"/>
+            <xsd:element name="flags" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
+            <xsd:element name="defaults" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setTraceFile">
+      <!--Interface IToken-->
+      <!-- method IToken::abandon-->
+      <xsd:element name="IToken_abandon">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="traceFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setTraceFileResponse">
+      <xsd:element name="IToken_abandonResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INetworkAdapter::NATEngine-->
-      <xsd:element name="INetworkAdapter_getNATEngine">
+      <!-- method IToken::dummy-->
+      <xsd:element name="IToken_dummy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getNATEngineResponse">
+      <xsd:element name="IToken_dummyResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INetworkAdapter::bootPriority-->
-      <xsd:element name="INetworkAdapter_getBootPriority">
+      <!--Interface IKeyboard-->
+      <!-- readonly attribute IKeyboard::keyboardLEDs-->
+      <xsd:element name="IKeyboard_getKeyboardLEDs">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getBootPriorityResponse">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <xsd:element name="INetworkAdapter_setBootPriority">
+      <xsd:element name="IKeyboard_getKeyboardLEDsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bootPriority" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:KeyboardLED"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setBootPriorityResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute INetworkAdapter::bandwidthGroup-->
-      <xsd:element name="INetworkAdapter_getBandwidthGroup">
+      <!-- readonly attribute IKeyboard::eventSource-->
+      <xsd:element name="IKeyboard_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getBandwidthGroupResponse">
+      <xsd:element name="IKeyboard_getEventSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setBandwidthGroup">
+      <!-- method IKeyboard::putScancode-->
+      <xsd:element name="IKeyboard_putScancode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="bandwidthGroup" type="xsd:string"/>
+            <xsd:element name="scancode" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setBandwidthGroupResponse">
+      <xsd:element name="IKeyboard_putScancodeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method INetworkAdapter::getProperty-->
-      <xsd:element name="INetworkAdapter_getProperty">
+      <!-- method IKeyboard::putScancodes-->
+      <xsd:element name="IKeyboard_putScancodes">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="scancodes" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getPropertyResponse">
+      <xsd:element name="IKeyboard_putScancodesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method INetworkAdapter::setProperty-->
-      <xsd:element name="INetworkAdapter_setProperty">
+      <!-- method IKeyboard::putCAD-->
+      <xsd:element name="IKeyboard_putCAD">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_setPropertyResponse">
+      <xsd:element name="IKeyboard_putCADResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method INetworkAdapter::getProperties-->
-      <xsd:element name="INetworkAdapter_getProperties">
+      <!-- method IKeyboard::releaseKeys-->
+      <xsd:element name="IKeyboard_releaseKeys">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="names" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapter_getPropertiesResponse">
+      <xsd:element name="IKeyboard_releaseKeysResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISerialPort-->
-      <!-- readonly attribute ISerialPort::slot-->
-      <xsd:element name="ISerialPort_getSlot">
+      <!--Interface IMousePointerShape-->
+      <!-- readonly attribute IMousePointerShape::visible-->
+      <xsd:element name="IMousePointerShape_getVisible">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getSlotResponse">
+      <xsd:element name="IMousePointerShape_getVisibleResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::enabled-->
-      <xsd:element name="ISerialPort_getEnabled">
+      <!-- readonly attribute IMousePointerShape::alpha-->
+      <xsd:element name="IMousePointerShape_getAlpha">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getEnabledResponse">
+      <xsd:element name="IMousePointerShape_getAlphaResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setEnabled">
+      <!-- readonly attribute IMousePointerShape::hotX-->
+      <xsd:element name="IMousePointerShape_getHotX">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setEnabledResponse">
+      <xsd:element name="IMousePointerShape_getHotXResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::IOBase-->
-      <xsd:element name="ISerialPort_getIOBase">
+      <!-- readonly attribute IMousePointerShape::hotY-->
+      <xsd:element name="IMousePointerShape_getHotY">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getIOBaseResponse">
+      <xsd:element name="IMousePointerShape_getHotYResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setIOBase">
+      <!-- readonly attribute IMousePointerShape::width-->
+      <xsd:element name="IMousePointerShape_getWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IOBase" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setIOBaseResponse">
+      <xsd:element name="IMousePointerShape_getWidthResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::IRQ-->
-      <xsd:element name="ISerialPort_getIRQ">
+      <!-- readonly attribute IMousePointerShape::height-->
+      <xsd:element name="IMousePointerShape_getHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getIRQResponse">
+      <xsd:element name="IMousePointerShape_getHeightResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setIRQ">
+      <!-- readonly attribute IMousePointerShape::shape-->
+      <xsd:element name="IMousePointerShape_getShape">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IRQ" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setIRQResponse">
+      <xsd:element name="IMousePointerShape_getShapeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::hostMode-->
-      <xsd:element name="ISerialPort_getHostMode">
+      <!--Interface IMouse-->
+      <!-- readonly attribute IMouse::absoluteSupported-->
+      <xsd:element name="IMouse_getAbsoluteSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getHostModeResponse">
+      <xsd:element name="IMouse_getAbsoluteSupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:PortMode"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setHostMode">
+      <!-- readonly attribute IMouse::relativeSupported-->
+      <xsd:element name="IMouse_getRelativeSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostMode" type="vbox:PortMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setHostModeResponse">
+      <xsd:element name="IMouse_getRelativeSupportedResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::server-->
-      <xsd:element name="ISerialPort_getServer">
+      <!-- readonly attribute IMouse::multiTouchSupported-->
+      <xsd:element name="IMouse_getMultiTouchSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getServerResponse">
+      <xsd:element name="IMouse_getMultiTouchSupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setServer">
+      <!-- readonly attribute IMouse::needsHostCursor-->
+      <xsd:element name="IMouse_getNeedsHostCursor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="server" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setServerResponse">
+      <xsd:element name="IMouse_getNeedsHostCursorResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISerialPort::path-->
-      <xsd:element name="ISerialPort_getPath">
+      <!-- readonly attribute IMouse::pointerShape-->
+      <xsd:element name="IMouse_getPointerShape">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_getPathResponse">
+      <xsd:element name="IMouse_getPointerShapeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setPath">
+      <!-- readonly attribute IMouse::eventSource-->
+      <xsd:element name="IMouse_getEventSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPort_setPathResponse">
+      <xsd:element name="IMouse_getEventSourceResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IParallelPort-->
-      <!-- readonly attribute IParallelPort::slot-->
-      <xsd:element name="IParallelPort_getSlot">
+      <!-- method IMouse::putMouseEvent-->
+      <xsd:element name="IMouse_putMouseEvent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="dx" type="xsd:int"/>
+            <xsd:element name="dy" type="xsd:int"/>
+            <xsd:element name="dz" type="xsd:int"/>
+            <xsd:element name="dw" type="xsd:int"/>
+            <xsd:element name="buttonState" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_getSlotResponse">
+      <xsd:element name="IMouse_putMouseEventResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IParallelPort::enabled-->
-      <xsd:element name="IParallelPort_getEnabled">
+      <!-- method IMouse::putMouseEventAbsolute-->
+      <xsd:element name="IMouse_putMouseEventAbsolute">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="x" type="xsd:int"/>
+            <xsd:element name="y" type="xsd:int"/>
+            <xsd:element name="dz" type="xsd:int"/>
+            <xsd:element name="dw" type="xsd:int"/>
+            <xsd:element name="buttonState" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_getEnabledResponse">
+      <xsd:element name="IMouse_putMouseEventAbsoluteResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setEnabled">
+      <!-- method IMouse::putEventMultiTouch-->
+      <xsd:element name="IMouse_putEventMultiTouch">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
+            <xsd:element name="count" type="xsd:int"/>
+            <xsd:element name="contacts" minOccurs="0" maxOccurs="unbounded" type="xsd:long"/>
+            <xsd:element name="scanTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setEnabledResponse">
+      <xsd:element name="IMouse_putEventMultiTouchResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IParallelPort::IOBase-->
-      <xsd:element name="IParallelPort_getIOBase">
+      <!-- method IMouse::putEventMultiTouchString-->
+      <xsd:element name="IMouse_putEventMultiTouchString">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="count" type="xsd:int"/>
+            <xsd:element name="contacts" type="xsd:string"/>
+            <xsd:element name="scanTime" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_getIOBaseResponse">
+      <xsd:element name="IMouse_putEventMultiTouchStringResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setIOBase">
+      <!--Interface IFramebuffer-->
+      <!-- readonly attribute IFramebuffer::width-->
+      <xsd:element name="IFramebuffer_getWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IOBase" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setIOBaseResponse">
+      <xsd:element name="IFramebuffer_getWidthResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IParallelPort::IRQ-->
-      <xsd:element name="IParallelPort_getIRQ">
+      <!-- readonly attribute IFramebuffer::height-->
+      <xsd:element name="IFramebuffer_getHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_getIRQResponse">
+      <xsd:element name="IFramebuffer_getHeightResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setIRQ">
+      <!-- readonly attribute IFramebuffer::bitsPerPixel-->
+      <xsd:element name="IFramebuffer_getBitsPerPixel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="IRQ" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setIRQResponse">
+      <xsd:element name="IFramebuffer_getBitsPerPixelResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IParallelPort::path-->
-      <xsd:element name="IParallelPort_getPath">
+      <!-- readonly attribute IFramebuffer::bytesPerLine-->
+      <xsd:element name="IFramebuffer_getBytesPerLine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_getPathResponse">
+      <xsd:element name="IFramebuffer_getBytesPerLineResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setPath">
+      <!-- readonly attribute IFramebuffer::pixelFormat-->
+      <xsd:element name="IFramebuffer_getPixelFormat">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPort_setPathResponse">
+      <xsd:element name="IFramebuffer_getPixelFormatResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:BitmapFormat"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachineDebugger-->
-      <!-- read/write attribute IMachineDebugger::singleStep-->
-      <xsd:element name="IMachineDebugger_getSingleStep">
+      <!-- readonly attribute IFramebuffer::heightReduction-->
+      <xsd:element name="IFramebuffer_getHeightReduction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getSingleStepResponse">
+      <xsd:element name="IFramebuffer_getHeightReductionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setSingleStep">
+      <!-- readonly attribute IFramebuffer::overlay-->
+      <xsd:element name="IFramebuffer_getOverlay">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="singleStep" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setSingleStepResponse">
+      <xsd:element name="IFramebuffer_getOverlayResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::recompileUser-->
-      <xsd:element name="IMachineDebugger_getRecompileUser">
+      <!--skipping attribute winId for it is suppressed-->
+      <!-- readonly attribute IFramebuffer::capabilities-->
+      <xsd:element name="IFramebuffer_getCapabilities">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getRecompileUserResponse">
+      <xsd:element name="IFramebuffer_getCapabilitiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="vbox:FramebufferCapabilities"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRecompileUser">
+      <!-- method IFramebuffer::notifyUpdate-->
+      <xsd:element name="IFramebuffer_notifyUpdate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="recompileUser" type="xsd:boolean"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRecompileUserResponse">
+      <xsd:element name="IFramebuffer_notifyUpdateResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::recompileSupervisor-->
-      <xsd:element name="IMachineDebugger_getRecompileSupervisor">
+      <!-- method IFramebuffer::notifyUpdateImage-->
+      <xsd:element name="IFramebuffer_notifyUpdateImage">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="image" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getRecompileSupervisorResponse">
+      <xsd:element name="IFramebuffer_notifyUpdateImageResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRecompileSupervisor">
+      <!-- method IFramebuffer::notifyChange-->
+      <xsd:element name="IFramebuffer_notifyChange">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="recompileSupervisor" type="xsd:boolean"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="xOrigin" type="xsd:unsignedInt"/>
+            <xsd:element name="yOrigin" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRecompileSupervisorResponse">
+      <xsd:element name="IFramebuffer_notifyChangeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::executeAllInIEM-->
-      <xsd:element name="IMachineDebugger_getExecuteAllInIEM">
+      <!-- method IFramebuffer::videoModeSupported-->
+      <xsd:element name="IFramebuffer_videoModeSupported">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="bpp" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getExecuteAllInIEMResponse">
+      <xsd:element name="IFramebuffer_videoModeSupportedResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setExecuteAllInIEM">
+      <!-- method IFramebuffer::getVisibleRegion-->
+      <!--skipping method getVisibleRegion for it has parameters with suppressed types-->
+      <!-- method IFramebuffer::setVisibleRegion-->
+      <!--skipping method setVisibleRegion for it has parameters with suppressed types-->
+      <!-- method IFramebuffer::processVHWACommand-->
+      <!--skipping method processVHWACommand for it has parameters with suppressed types-->
+      <!-- method IFramebuffer::notify3DEvent-->
+      <xsd:element name="IFramebuffer_notify3DEvent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="executeAllInIEM" type="xsd:boolean"/>
+            <xsd:element name="type" type="xsd:unsignedInt"/>
+            <xsd:element name="data" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setExecuteAllInIEMResponse">
+      <xsd:element name="IFramebuffer_notify3DEventResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::PATMEnabled-->
-      <xsd:element name="IMachineDebugger_getPATMEnabled">
+      <!--Interface IFramebufferOverlay-->
+      <!-- readonly attribute IFramebufferOverlay::x-->
+      <xsd:element name="IFramebufferOverlay_getX">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getPATMEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_getXResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setPATMEnabled">
+      <!-- readonly attribute IFramebufferOverlay::y-->
+      <xsd:element name="IFramebufferOverlay_getY">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="PATMEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setPATMEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_getYResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::CSAMEnabled-->
-      <xsd:element name="IMachineDebugger_getCSAMEnabled">
+      <!-- read/write attribute IFramebufferOverlay::visible-->
+      <xsd:element name="IFramebufferOverlay_getVisible">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getCSAMEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_getVisibleResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setCSAMEnabled">
+      <xsd:element name="IFramebufferOverlay_setVisible">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="CSAMEnabled" type="xsd:boolean"/>
+            <xsd:element name="visible" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setCSAMEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_setVisibleResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::logEnabled-->
-      <xsd:element name="IMachineDebugger_getLogEnabled">
+      <!-- read/write attribute IFramebufferOverlay::alpha-->
+      <xsd:element name="IFramebufferOverlay_getAlpha">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_getAlphaResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setLogEnabled">
+      <xsd:element name="IFramebufferOverlay_setAlpha">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="logEnabled" type="xsd:boolean"/>
+            <xsd:element name="alpha" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setLogEnabledResponse">
+      <xsd:element name="IFramebufferOverlay_setAlphaResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logDbgFlags-->
-      <xsd:element name="IMachineDebugger_getLogDbgFlags">
+      <!-- method IFramebufferOverlay::move-->
+      <xsd:element name="IFramebufferOverlay_move">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogDbgFlagsResponse">
+      <xsd:element name="IFramebufferOverlay_moveResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logDbgGroups-->
-      <xsd:element name="IMachineDebugger_getLogDbgGroups">
+      <!--Interface IGuestScreenInfo-->
+      <!-- readonly attribute IGuestScreenInfo::screenId-->
+      <xsd:element name="IGuestScreenInfo_getScreenId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogDbgGroupsResponse">
+      <xsd:element name="IGuestScreenInfo_getScreenIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logDbgDestinations-->
-      <xsd:element name="IMachineDebugger_getLogDbgDestinations">
+      <!-- readonly attribute IGuestScreenInfo::guestMonitorStatus-->
+      <xsd:element name="IGuestScreenInfo_getGuestMonitorStatus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogDbgDestinationsResponse">
+      <xsd:element name="IGuestScreenInfo_getGuestMonitorStatusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:GuestMonitorStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logRelFlags-->
-      <xsd:element name="IMachineDebugger_getLogRelFlags">
+      <!-- readonly attribute IGuestScreenInfo::primary-->
+      <xsd:element name="IGuestScreenInfo_getPrimary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogRelFlagsResponse">
+      <xsd:element name="IGuestScreenInfo_getPrimaryResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logRelGroups-->
-      <xsd:element name="IMachineDebugger_getLogRelGroups">
+      <!-- readonly attribute IGuestScreenInfo::origin-->
+      <xsd:element name="IGuestScreenInfo_getOrigin">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogRelGroupsResponse">
+      <xsd:element name="IGuestScreenInfo_getOriginResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::logRelDestinations-->
-      <xsd:element name="IMachineDebugger_getLogRelDestinations">
+      <!-- readonly attribute IGuestScreenInfo::originX-->
+      <xsd:element name="IGuestScreenInfo_getOriginX">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getLogRelDestinationsResponse">
+      <xsd:element name="IGuestScreenInfo_getOriginXResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::HWVirtExEnabled-->
-      <xsd:element name="IMachineDebugger_getHWVirtExEnabled">
+      <!-- readonly attribute IGuestScreenInfo::originY-->
+      <xsd:element name="IGuestScreenInfo_getOriginY">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getHWVirtExEnabledResponse">
+      <xsd:element name="IGuestScreenInfo_getOriginYResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::HWVirtExNestedPagingEnabled-->
-      <xsd:element name="IMachineDebugger_getHWVirtExNestedPagingEnabled">
+      <!-- readonly attribute IGuestScreenInfo::width-->
+      <xsd:element name="IGuestScreenInfo_getWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getHWVirtExNestedPagingEnabledResponse">
+      <xsd:element name="IGuestScreenInfo_getWidthResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::HWVirtExVPIDEnabled-->
-      <xsd:element name="IMachineDebugger_getHWVirtExVPIDEnabled">
+      <!-- readonly attribute IGuestScreenInfo::height-->
+      <xsd:element name="IGuestScreenInfo_getHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getHWVirtExVPIDEnabledResponse">
+      <xsd:element name="IGuestScreenInfo_getHeightResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::HWVirtExUXEnabled-->
-      <xsd:element name="IMachineDebugger_getHWVirtExUXEnabled">
+      <!-- readonly attribute IGuestScreenInfo::bitsPerPixel-->
+      <xsd:element name="IGuestScreenInfo_getBitsPerPixel">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getHWVirtExUXEnabledResponse">
+      <xsd:element name="IGuestScreenInfo_getBitsPerPixelResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::OSName-->
-      <xsd:element name="IMachineDebugger_getOSName">
+      <!-- readonly attribute IGuestScreenInfo::extendedInfo-->
+      <xsd:element name="IGuestScreenInfo_getExtendedInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getOSNameResponse">
+      <xsd:element name="IGuestScreenInfo_getExtendedInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::OSVersion-->
-      <xsd:element name="IMachineDebugger_getOSVersion">
+      <!--Interface IDisplay-->
+      <!-- readonly attribute IDisplay::guestScreenLayout-->
+      <xsd:element name="IDisplay_getGuestScreenLayout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getOSVersionResponse">
+      <xsd:element name="IDisplay_getGuestScreenLayoutResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMachineDebugger::PAEEnabled-->
-      <xsd:element name="IMachineDebugger_getPAEEnabled">
+      <!-- method IDisplay::getScreenResolution-->
+      <xsd:element name="IDisplay_getScreenResolution">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getPAEEnabledResponse">
+      <xsd:element name="IDisplay_getScreenResolutionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="bitsPerPixel" type="xsd:unsignedInt"/>
+            <xsd:element name="xOrigin" type="xsd:int"/>
+            <xsd:element name="yOrigin" type="xsd:int"/>
+            <xsd:element name="guestMonitorStatus" type="vbox:GuestMonitorStatus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IMachineDebugger::virtualTimeRate-->
-      <xsd:element name="IMachineDebugger_getVirtualTimeRate">
+      <!-- method IDisplay::attachFramebuffer-->
+      <xsd:element name="IDisplay_attachFramebuffer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="framebuffer" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getVirtualTimeRateResponse">
+      <xsd:element name="IDisplay_attachFramebufferResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setVirtualTimeRate">
+      <!-- method IDisplay::detachFramebuffer-->
+      <xsd:element name="IDisplay_detachFramebuffer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="virtualTimeRate" type="xsd:unsignedInt"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="id" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setVirtualTimeRateResponse">
+      <xsd:element name="IDisplay_detachFramebufferResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--skipping attribute VM for it is suppressed-->
-      <!-- method IMachineDebugger::dumpGuestCore-->
-      <xsd:element name="IMachineDebugger_dumpGuestCore">
+      <!-- method IDisplay::queryFramebuffer-->
+      <xsd:element name="IDisplay_queryFramebuffer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="filename" type="xsd:string"/>
-            <xsd:element name="compression" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_dumpGuestCoreResponse">
+      <xsd:element name="IDisplay_queryFramebufferResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::dumpHostProcessCore-->
-      <xsd:element name="IMachineDebugger_dumpHostProcessCore">
+      <!-- method IDisplay::setVideoModeHint-->
+      <xsd:element name="IDisplay_setVideoModeHint">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="filename" type="xsd:string"/>
-            <xsd:element name="compression" type="xsd:string"/>
+            <xsd:element name="display" type="xsd:unsignedInt"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
+            <xsd:element name="changeOrigin" type="xsd:boolean"/>
+            <xsd:element name="originX" type="xsd:int"/>
+            <xsd:element name="originY" type="xsd:int"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="bitsPerPixel" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_dumpHostProcessCoreResponse">
+      <xsd:element name="IDisplay_setVideoModeHintResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::info-->
-      <xsd:element name="IMachineDebugger_info">
+      <!-- method IDisplay::setSeamlessMode-->
+      <xsd:element name="IDisplay_setSeamlessMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="args" type="xsd:string"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_infoResponse">
+      <xsd:element name="IDisplay_setSeamlessModeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::injectNMI-->
-      <xsd:element name="IMachineDebugger_injectNMI">
+      <!-- method IDisplay::takeScreenShot-->
+      <!--skipping method takeScreenShot for it has parameters with suppressed types-->
+      <!-- method IDisplay::takeScreenShotToArray-->
+      <xsd:element name="IDisplay_takeScreenShotToArray">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
+            <xsd:element name="bitmapFormat" type="vbox:BitmapFormat"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_injectNMIResponse">
+      <xsd:element name="IDisplay_takeScreenShotToArrayResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::modifyLogGroups-->
-      <xsd:element name="IMachineDebugger_modifyLogGroups">
+      <!-- method IDisplay::drawToScreen-->
+      <!--skipping method drawToScreen for it has parameters with suppressed types-->
+      <!-- method IDisplay::invalidateAndUpdate-->
+      <xsd:element name="IDisplay_invalidateAndUpdate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="settings" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_modifyLogGroupsResponse">
+      <xsd:element name="IDisplay_invalidateAndUpdateResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::modifyLogFlags-->
-      <xsd:element name="IMachineDebugger_modifyLogFlags">
+      <!-- method IDisplay::invalidateAndUpdateScreen-->
+      <xsd:element name="IDisplay_invalidateAndUpdateScreen">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="settings" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_modifyLogFlagsResponse">
+      <xsd:element name="IDisplay_invalidateAndUpdateScreenResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::modifyLogDestinations-->
-      <xsd:element name="IMachineDebugger_modifyLogDestinations">
+      <!-- method IDisplay::completeVHWACommand-->
+      <!--skipping method completeVHWACommand for it has parameters with suppressed types-->
+      <!-- method IDisplay::viewportChanged-->
+      <xsd:element name="IDisplay_viewportChanged">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="settings" type="xsd:string"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="x" type="xsd:unsignedInt"/>
+            <xsd:element name="y" type="xsd:unsignedInt"/>
+            <xsd:element name="width" type="xsd:unsignedInt"/>
+            <xsd:element name="height" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_modifyLogDestinationsResponse">
+      <xsd:element name="IDisplay_viewportChangedResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::readPhysicalMemory-->
-      <xsd:element name="IMachineDebugger_readPhysicalMemory">
+      <!-- method IDisplay::querySourceBitmap-->
+      <!--skipping method querySourceBitmap for it has parameters with suppressed types-->
+      <!-- method IDisplay::notifyScaleFactorChange-->
+      <xsd:element name="IDisplay_notifyScaleFactorChange">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="address" type="xsd:long"/>
-            <xsd:element name="size" type="xsd:unsignedInt"/>
+            <xsd:element name="screenId" type="xsd:unsignedInt"/>
+            <xsd:element name="u32ScaleFactorWMultiplied" type="xsd:unsignedInt"/>
+            <xsd:element name="u32ScaleFactorHMultiplied" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_readPhysicalMemoryResponse">
+      <xsd:element name="IDisplay_notifyScaleFactorChangeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::writePhysicalMemory-->
-      <xsd:element name="IMachineDebugger_writePhysicalMemory">
+      <!-- method IDisplay::notifyHiDPIOutputPolicyChange-->
+      <xsd:element name="IDisplay_notifyHiDPIOutputPolicyChange">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="address" type="xsd:long"/>
-            <xsd:element name="size" type="xsd:unsignedInt"/>
-            <xsd:element name="bytes" type="xsd:string"/>
+            <xsd:element name="fUnscaledHiDPI" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_writePhysicalMemoryResponse">
+      <xsd:element name="IDisplay_notifyHiDPIOutputPolicyChangeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::readVirtualMemory-->
-      <xsd:element name="IMachineDebugger_readVirtualMemory">
+      <!-- method IDisplay::setScreenLayout-->
+      <xsd:element name="IDisplay_setScreenLayout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="address" type="xsd:long"/>
-            <xsd:element name="size" type="xsd:unsignedInt"/>
+            <xsd:element name="screenLayoutMode" type="vbox:ScreenLayoutMode"/>
+            <xsd:element name="guestScreenInfo" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_readVirtualMemoryResponse">
+      <xsd:element name="IDisplay_setScreenLayoutResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::writeVirtualMemory-->
-      <xsd:element name="IMachineDebugger_writeVirtualMemory">
+      <!-- method IDisplay::detachScreens-->
+      <xsd:element name="IDisplay_detachScreens">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="address" type="xsd:long"/>
-            <xsd:element name="size" type="xsd:unsignedInt"/>
-            <xsd:element name="bytes" type="xsd:string"/>
+            <xsd:element name="screenIds" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_writeVirtualMemoryResponse">
+      <xsd:element name="IDisplay_detachScreensResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::loadPlugIn-->
-      <xsd:element name="IMachineDebugger_loadPlugIn">
+      <!--Interface INetworkAdapter-->
+      <!-- read/write attribute INetworkAdapter::adapterType-->
+      <xsd:element name="INetworkAdapter_getAdapterType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_loadPlugInResponse">
+      <xsd:element name="INetworkAdapter_getAdapterTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:NetworkAdapterType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::unloadPlugIn-->
-      <xsd:element name="IMachineDebugger_unloadPlugIn">
+      <xsd:element name="INetworkAdapter_setAdapterType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="adapterType" type="vbox:NetworkAdapterType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_unloadPlugInResponse">
+      <xsd:element name="INetworkAdapter_setAdapterTypeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::detectOS-->
-      <xsd:element name="IMachineDebugger_detectOS">
+      <!-- readonly attribute INetworkAdapter::slot-->
+      <xsd:element name="INetworkAdapter_getSlot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_detectOSResponse">
+      <xsd:element name="INetworkAdapter_getSlotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::queryOSKernelLog-->
-      <xsd:element name="IMachineDebugger_queryOSKernelLog">
+      <!-- read/write attribute INetworkAdapter::enabled-->
+      <xsd:element name="INetworkAdapter_getEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="maxMessages" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_queryOSKernelLogResponse">
+      <xsd:element name="INetworkAdapter_getEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::getRegister-->
-      <xsd:element name="IMachineDebugger_getRegister">
+      <xsd:element name="INetworkAdapter_setEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getRegisterResponse">
+      <xsd:element name="INetworkAdapter_setEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::getRegisters-->
-      <xsd:element name="IMachineDebugger_getRegisters">
+      <!-- read/write attribute INetworkAdapter::MACAddress-->
+      <xsd:element name="INetworkAdapter_getMACAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getRegistersResponse">
+      <xsd:element name="INetworkAdapter_getMACAddressResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::setRegister-->
-      <xsd:element name="IMachineDebugger_setRegister">
+      <xsd:element name="INetworkAdapter_setMACAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="MACAddress" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRegisterResponse">
+      <xsd:element name="INetworkAdapter_setMACAddressResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::setRegisters-->
-      <xsd:element name="IMachineDebugger_setRegisters">
+      <!-- read/write attribute INetworkAdapter::attachmentType-->
+      <xsd:element name="INetworkAdapter_getAttachmentType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
-            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_setRegistersResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IMachineDebugger::dumpGuestStack-->
-      <xsd:element name="IMachineDebugger_dumpGuestStack">
+      <xsd:element name="INetworkAdapter_getAttachmentTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:NetworkAttachmentType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_dumpGuestStackResponse">
+      <xsd:element name="INetworkAdapter_setAttachmentType">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="attachmentType" type="vbox:NetworkAttachmentType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::resetStats-->
-      <xsd:element name="IMachineDebugger_resetStats">
+      <xsd:element name="INetworkAdapter_setAttachmentTypeResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute INetworkAdapter::bridgedInterface-->
+      <xsd:element name="INetworkAdapter_getBridgedInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pattern" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_resetStatsResponse">
+      <xsd:element name="INetworkAdapter_getBridgedInterfaceResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::dumpStats-->
-      <xsd:element name="IMachineDebugger_dumpStats">
+      <xsd:element name="INetworkAdapter_setBridgedInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pattern" type="xsd:string"/>
+            <xsd:element name="bridgedInterface" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_dumpStatsResponse">
+      <xsd:element name="INetworkAdapter_setBridgedInterfaceResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IMachineDebugger::getStats-->
-      <xsd:element name="IMachineDebugger_getStats">
+      <!-- read/write attribute INetworkAdapter::hostOnlyInterface-->
+      <xsd:element name="INetworkAdapter_getHostOnlyInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="pattern" type="xsd:string"/>
-            <xsd:element name="withDescriptions" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDebugger_getStatsResponse">
+      <xsd:element name="INetworkAdapter_getHostOnlyInterfaceResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBDeviceFilters-->
-      <!-- readonly attribute IUSBDeviceFilters::deviceFilters-->
-      <xsd:element name="IUSBDeviceFilters_getDeviceFilters">
+      <xsd:element name="INetworkAdapter_setHostOnlyInterface">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="hostOnlyInterface" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilters_getDeviceFiltersResponse">
+      <xsd:element name="INetworkAdapter_setHostOnlyInterfaceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IUSBDeviceFilters::createDeviceFilter-->
-      <xsd:element name="IUSBDeviceFilters_createDeviceFilter">
+      <!-- read/write attribute INetworkAdapter::internalNetwork-->
+      <xsd:element name="INetworkAdapter_getInternalNetwork">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilters_createDeviceFilterResponse">
+      <xsd:element name="INetworkAdapter_getInternalNetworkResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IUSBDeviceFilters::insertDeviceFilter-->
-      <xsd:element name="IUSBDeviceFilters_insertDeviceFilter">
+      <xsd:element name="INetworkAdapter_setInternalNetwork">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
-            <xsd:element name="filter" type="xsd:string"/>
+            <xsd:element name="internalNetwork" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilters_insertDeviceFilterResponse">
+      <xsd:element name="INetworkAdapter_setInternalNetworkResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IUSBDeviceFilters::removeDeviceFilter-->
-      <xsd:element name="IUSBDeviceFilters_removeDeviceFilter">
+      <!-- read/write attribute INetworkAdapter::NATNetwork-->
+      <xsd:element name="INetworkAdapter_getNATNetwork">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="position" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilters_removeDeviceFilterResponse">
+      <xsd:element name="INetworkAdapter_getNATNetworkResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBController-->
-      <!-- read/write attribute IUSBController::name-->
-      <xsd:element name="IUSBController_getName">
+      <xsd:element name="INetworkAdapter_setNATNetwork">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="NATNetwork" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INetworkAdapter_setNATNetworkResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute INetworkAdapter::genericDriver-->
+      <xsd:element name="INetworkAdapter_getGenericDriver">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_getNameResponse">
+      <xsd:element name="INetworkAdapter_getGenericDriverResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_setName">
+      <xsd:element name="INetworkAdapter_setGenericDriver">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="genericDriver" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_setNameResponse">
+      <xsd:element name="INetworkAdapter_setGenericDriverResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBController::type-->
-      <xsd:element name="IUSBController_getType">
+      <!-- read/write attribute INetworkAdapter::cableConnected-->
+      <xsd:element name="INetworkAdapter_getCableConnected">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_getTypeResponse">
+      <xsd:element name="INetworkAdapter_getCableConnectedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:USBControllerType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_setType">
+      <xsd:element name="INetworkAdapter_setCableConnected">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:USBControllerType"/>
+            <xsd:element name="cableConnected" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_setTypeResponse">
+      <xsd:element name="INetworkAdapter_setCableConnectedResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBController::USBStandard-->
-      <xsd:element name="IUSBController_getUSBStandard">
+      <!-- read/write attribute INetworkAdapter::lineSpeed-->
+      <xsd:element name="INetworkAdapter_getLineSpeed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBController_getUSBStandardResponse">
+      <xsd:element name="INetworkAdapter_getLineSpeedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBDevice-->
-      <!-- readonly attribute IUSBDevice::id-->
-      <xsd:element name="IUSBDevice_getId">
+      <xsd:element name="INetworkAdapter_setLineSpeed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="lineSpeed" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getIdResponse">
+      <xsd:element name="INetworkAdapter_setLineSpeedResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::vendorId-->
-      <xsd:element name="IUSBDevice_getVendorId">
+      <!-- read/write attribute INetworkAdapter::promiscModePolicy-->
+      <xsd:element name="INetworkAdapter_getPromiscModePolicy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getVendorIdResponse">
+      <xsd:element name="INetworkAdapter_getPromiscModePolicyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="vbox:NetworkAdapterPromiscModePolicy"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::productId-->
-      <xsd:element name="IUSBDevice_getProductId">
+      <xsd:element name="INetworkAdapter_setPromiscModePolicy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="promiscModePolicy" type="vbox:NetworkAdapterPromiscModePolicy"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getProductIdResponse">
+      <xsd:element name="INetworkAdapter_setPromiscModePolicyResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::revision-->
-      <xsd:element name="IUSBDevice_getRevision">
+      <!-- read/write attribute INetworkAdapter::traceEnabled-->
+      <xsd:element name="INetworkAdapter_getTraceEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getRevisionResponse">
+      <xsd:element name="INetworkAdapter_getTraceEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::manufacturer-->
-      <xsd:element name="IUSBDevice_getManufacturer">
+      <xsd:element name="INetworkAdapter_setTraceEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="traceEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getManufacturerResponse">
+      <xsd:element name="INetworkAdapter_setTraceEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::product-->
-      <xsd:element name="IUSBDevice_getProduct">
+      <!-- read/write attribute INetworkAdapter::traceFile-->
+      <xsd:element name="INetworkAdapter_getTraceFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getProductResponse">
+      <xsd:element name="INetworkAdapter_getTraceFileResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::serialNumber-->
-      <xsd:element name="IUSBDevice_getSerialNumber">
+      <xsd:element name="INetworkAdapter_setTraceFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="traceFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getSerialNumberResponse">
+      <xsd:element name="INetworkAdapter_setTraceFileResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::address-->
-      <xsd:element name="IUSBDevice_getAddress">
+      <!-- readonly attribute INetworkAdapter::NATEngine-->
+      <xsd:element name="INetworkAdapter_getNATEngine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getAddressResponse">
+      <xsd:element name="INetworkAdapter_getNATEngineResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::port-->
-      <xsd:element name="IUSBDevice_getPort">
+      <!-- read/write attribute INetworkAdapter::bootPriority-->
+      <xsd:element name="INetworkAdapter_getBootPriority">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getPortResponse">
+      <xsd:element name="INetworkAdapter_getBootPriorityResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::version-->
-      <xsd:element name="IUSBDevice_getVersion">
+      <xsd:element name="INetworkAdapter_setBootPriority">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="bootPriority" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getVersionResponse">
+      <xsd:element name="INetworkAdapter_setBootPriorityResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::portVersion-->
-      <xsd:element name="IUSBDevice_getPortVersion">
+      <!-- read/write attribute INetworkAdapter::bandwidthGroup-->
+      <xsd:element name="INetworkAdapter_getBandwidthGroup">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getPortVersionResponse">
+      <xsd:element name="INetworkAdapter_getBandwidthGroupResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::speed-->
-      <xsd:element name="IUSBDevice_getSpeed">
+      <xsd:element name="INetworkAdapter_setBandwidthGroup">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="bandwidthGroup" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getSpeedResponse">
+      <xsd:element name="INetworkAdapter_setBandwidthGroupResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method INetworkAdapter::getProperty-->
+      <xsd:element name="INetworkAdapter_getProperty">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:USBConnectionSpeed"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDevice::remote-->
-      <xsd:element name="IUSBDevice_getRemote">
+      <xsd:element name="INetworkAdapter_getPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDevice_getRemoteResponse">
+      <!-- method INetworkAdapter::setProperty-->
+      <xsd:element name="INetworkAdapter_setProperty">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBDeviceFilter-->
-      <!-- read/write attribute IUSBDeviceFilter::name-->
-      <xsd:element name="IUSBDeviceFilter_getName">
+      <xsd:element name="INetworkAdapter_setPropertyResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method INetworkAdapter::getProperties-->
+      <xsd:element name="INetworkAdapter_getProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="names" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getNameResponse">
+      <xsd:element name="INetworkAdapter_getPropertiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setName">
+      <!--Interface ISerialPort-->
+      <!-- readonly attribute ISerialPort::slot-->
+      <xsd:element name="ISerialPort_getSlot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setNameResponse">
+      <xsd:element name="ISerialPort_getSlotResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::active-->
-      <xsd:element name="IUSBDeviceFilter_getActive">
+      <!-- read/write attribute ISerialPort::enabled-->
+      <xsd:element name="ISerialPort_getEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getActiveResponse">
+      <xsd:element name="ISerialPort_getEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setActive">
+      <xsd:element name="ISerialPort_setEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="active" type="xsd:boolean"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setActiveResponse">
+      <xsd:element name="ISerialPort_setEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::vendorId-->
-      <xsd:element name="IUSBDeviceFilter_getVendorId">
+      <!-- read/write attribute ISerialPort::IOBase-->
+      <xsd:element name="ISerialPort_getIOBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getVendorIdResponse">
+      <xsd:element name="ISerialPort_getIOBaseResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setVendorId">
+      <xsd:element name="ISerialPort_setIOBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="vendorId" type="xsd:string"/>
+            <xsd:element name="IOBase" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setVendorIdResponse">
+      <xsd:element name="ISerialPort_setIOBaseResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::productId-->
-      <xsd:element name="IUSBDeviceFilter_getProductId">
+      <!-- read/write attribute ISerialPort::IRQ-->
+      <xsd:element name="ISerialPort_getIRQ">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getProductIdResponse">
+      <xsd:element name="ISerialPort_getIRQResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setProductId">
+      <xsd:element name="ISerialPort_setIRQ">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="productId" type="xsd:string"/>
+            <xsd:element name="IRQ" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setProductIdResponse">
+      <xsd:element name="ISerialPort_setIRQResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::revision-->
-      <xsd:element name="IUSBDeviceFilter_getRevision">
+      <!-- read/write attribute ISerialPort::hostMode-->
+      <xsd:element name="ISerialPort_getHostMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getRevisionResponse">
+      <xsd:element name="ISerialPort_getHostModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:PortMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setRevision">
+      <xsd:element name="ISerialPort_setHostMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="revision" type="xsd:string"/>
+            <xsd:element name="hostMode" type="vbox:PortMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setRevisionResponse">
+      <xsd:element name="ISerialPort_setHostModeResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::manufacturer-->
-      <xsd:element name="IUSBDeviceFilter_getManufacturer">
+      <!-- read/write attribute ISerialPort::server-->
+      <xsd:element name="ISerialPort_getServer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getManufacturerResponse">
+      <xsd:element name="ISerialPort_getServerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setManufacturer">
+      <xsd:element name="ISerialPort_setServer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="manufacturer" type="xsd:string"/>
+            <xsd:element name="server" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setManufacturerResponse">
+      <xsd:element name="ISerialPort_setServerResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::product-->
-      <xsd:element name="IUSBDeviceFilter_getProduct">
+      <!-- read/write attribute ISerialPort::path-->
+      <xsd:element name="ISerialPort_getPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getProductResponse">
+      <xsd:element name="ISerialPort_getPathResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setProduct">
+      <xsd:element name="ISerialPort_setPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="product" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setProductResponse">
+      <xsd:element name="ISerialPort_setPathResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::serialNumber-->
-      <xsd:element name="IUSBDeviceFilter_getSerialNumber">
+      <!--Interface IParallelPort-->
+      <!-- readonly attribute IParallelPort::slot-->
+      <xsd:element name="IParallelPort_getSlot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getSerialNumberResponse">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setSerialNumber">
+      <xsd:element name="IParallelPort_getSlotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="serialNumber" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setSerialNumberResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::port-->
-      <xsd:element name="IUSBDeviceFilter_getPort">
+      <!-- read/write attribute IParallelPort::enabled-->
+      <xsd:element name="IParallelPort_getEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getPortResponse">
+      <xsd:element name="IParallelPort_getEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setPort">
+      <xsd:element name="IParallelPort_setEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="port" type="xsd:string"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setPortResponse">
+      <xsd:element name="IParallelPort_setEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::remote-->
-      <xsd:element name="IUSBDeviceFilter_getRemote">
+      <!-- read/write attribute IParallelPort::IOBase-->
+      <xsd:element name="IParallelPort_getIOBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getRemoteResponse">
+      <xsd:element name="IParallelPort_getIOBaseResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setRemote">
+      <xsd:element name="IParallelPort_setIOBase">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="remote" type="xsd:string"/>
+            <xsd:element name="IOBase" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setRemoteResponse">
+      <xsd:element name="IParallelPort_setIOBaseResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IUSBDeviceFilter::maskedInterfaces-->
-      <xsd:element name="IUSBDeviceFilter_getMaskedInterfaces">
+      <!-- read/write attribute IParallelPort::IRQ-->
+      <xsd:element name="IParallelPort_getIRQ">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_getMaskedInterfacesResponse">
+      <xsd:element name="IParallelPort_getIRQResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setMaskedInterfaces">
+      <xsd:element name="IParallelPort_setIRQ">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="maskedInterfaces" type="xsd:unsignedInt"/>
+            <xsd:element name="IRQ" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceFilter_setMaskedInterfacesResponse">
+      <xsd:element name="IParallelPort_setIRQResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostUSBDevice-->
-      <!-- readonly attribute IHostUSBDevice::state-->
-      <xsd:element name="IHostUSBDevice_getState">
+      <!-- read/write attribute IParallelPort::path-->
+      <xsd:element name="IParallelPort_getPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostUSBDevice_getStateResponse">
+      <xsd:element name="IParallelPort_getPathResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:USBDeviceState"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostUSBDeviceFilter-->
-      <!-- read/write attribute IHostUSBDeviceFilter::action-->
-      <xsd:element name="IHostUSBDeviceFilter_getAction">
+      <xsd:element name="IParallelPort_setPath">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="path" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostUSBDeviceFilter_getActionResponse">
+      <xsd:element name="IParallelPort_setPathResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IMachineDebugger-->
+      <!-- read/write attribute IMachineDebugger::singleStep-->
+      <xsd:element name="IMachineDebugger_getSingleStep">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:USBDeviceFilterAction"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostUSBDeviceFilter_setAction">
+      <xsd:element name="IMachineDebugger_getSingleStepResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IMachineDebugger_setSingleStep">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="action" type="vbox:USBDeviceFilterAction"/>
+            <xsd:element name="singleStep" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostUSBDeviceFilter_setActionResponse">
+      <xsd:element name="IMachineDebugger_setSingleStepResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IAudioAdapter-->
-      <!-- read/write attribute IAudioAdapter::enabled-->
-      <xsd:element name="IAudioAdapter_getEnabled">
+      <!-- read/write attribute IMachineDebugger::recompileUser-->
+      <xsd:element name="IMachineDebugger_getRecompileUser">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getEnabledResponse">
+      <xsd:element name="IMachineDebugger_getRecompileUserResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabled">
+      <xsd:element name="IMachineDebugger_setRecompileUser">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
+            <xsd:element name="recompileUser" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabledResponse">
+      <xsd:element name="IMachineDebugger_setRecompileUserResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IAudioAdapter::enabledIn-->
-      <xsd:element name="IAudioAdapter_getEnabledIn">
+      <!-- read/write attribute IMachineDebugger::recompileSupervisor-->
+      <xsd:element name="IMachineDebugger_getRecompileSupervisor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getEnabledInResponse">
+      <xsd:element name="IMachineDebugger_getRecompileSupervisorResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabledIn">
+      <xsd:element name="IMachineDebugger_setRecompileSupervisor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabledIn" type="xsd:boolean"/>
+            <xsd:element name="recompileSupervisor" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabledInResponse">
+      <xsd:element name="IMachineDebugger_setRecompileSupervisorResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IAudioAdapter::enabledOut-->
-      <xsd:element name="IAudioAdapter_getEnabledOut">
+      <!-- read/write attribute IMachineDebugger::executeAllInIEM-->
+      <xsd:element name="IMachineDebugger_getExecuteAllInIEM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getEnabledOutResponse">
+      <xsd:element name="IMachineDebugger_getExecuteAllInIEMResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabledOut">
+      <xsd:element name="IMachineDebugger_setExecuteAllInIEM">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabledOut" type="xsd:boolean"/>
+            <xsd:element name="executeAllInIEM" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setEnabledOutResponse">
+      <xsd:element name="IMachineDebugger_setExecuteAllInIEMResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IAudioAdapter::audioController-->
-      <xsd:element name="IAudioAdapter_getAudioController">
+      <!-- read/write attribute IMachineDebugger::PATMEnabled-->
+      <xsd:element name="IMachineDebugger_getPATMEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getAudioControllerResponse">
+      <xsd:element name="IMachineDebugger_getPATMEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AudioControllerType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioController">
+      <xsd:element name="IMachineDebugger_setPATMEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="audioController" type="vbox:AudioControllerType"/>
+            <xsd:element name="PATMEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioControllerResponse">
+      <xsd:element name="IMachineDebugger_setPATMEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IAudioAdapter::audioCodec-->
-      <xsd:element name="IAudioAdapter_getAudioCodec">
+      <!-- read/write attribute IMachineDebugger::CSAMEnabled-->
+      <xsd:element name="IMachineDebugger_getCSAMEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getAudioCodecResponse">
+      <xsd:element name="IMachineDebugger_getCSAMEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AudioCodecType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioCodec">
+      <xsd:element name="IMachineDebugger_setCSAMEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="audioCodec" type="vbox:AudioCodecType"/>
+            <xsd:element name="CSAMEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioCodecResponse">
+      <xsd:element name="IMachineDebugger_setCSAMEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IAudioAdapter::audioDriver-->
-      <xsd:element name="IAudioAdapter_getAudioDriver">
+      <!-- read/write attribute IMachineDebugger::logEnabled-->
+      <xsd:element name="IMachineDebugger_getLogEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getAudioDriverResponse">
+      <xsd:element name="IMachineDebugger_getLogEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AudioDriverType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioDriver">
+      <xsd:element name="IMachineDebugger_setLogEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="audioDriver" type="vbox:AudioDriverType"/>
+            <xsd:element name="logEnabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setAudioDriverResponse">
+      <xsd:element name="IMachineDebugger_setLogEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IAudioAdapter::propertiesList-->
-      <xsd:element name="IAudioAdapter_getPropertiesList">
+      <!-- readonly attribute IMachineDebugger::logDbgFlags-->
+      <xsd:element name="IMachineDebugger_getLogDbgFlags">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getPropertiesListResponse">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IAudioAdapter::setProperty-->
-      <xsd:element name="IAudioAdapter_setProperty">
+      <xsd:element name="IMachineDebugger_getLogDbgFlagsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_setPropertyResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method IAudioAdapter::getProperty-->
-      <xsd:element name="IAudioAdapter_getProperty">
+      <!-- readonly attribute IMachineDebugger::logDbgGroups-->
+      <xsd:element name="IMachineDebugger_getLogDbgGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAudioAdapter_getPropertyResponse">
+      <xsd:element name="IMachineDebugger_getLogDbgGroupsResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVRDEServer-->
-      <!-- read/write attribute IVRDEServer::enabled-->
-      <xsd:element name="IVRDEServer_getEnabled">
+      <!-- readonly attribute IMachineDebugger::logDbgDestinations-->
+      <xsd:element name="IMachineDebugger_getLogDbgDestinations">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getEnabledResponse">
+      <xsd:element name="IMachineDebugger_getLogDbgDestinationsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setEnabled">
+      <!-- readonly attribute IMachineDebugger::logRelFlags-->
+      <xsd:element name="IMachineDebugger_getLogRelFlags">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setEnabledResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute IVRDEServer::authType-->
-      <xsd:element name="IVRDEServer_getAuthType">
+      <xsd:element name="IMachineDebugger_getLogRelFlagsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getAuthTypeResponse">
+      <!-- readonly attribute IMachineDebugger::logRelGroups-->
+      <xsd:element name="IMachineDebugger_getLogRelGroups">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:AuthType"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthType">
+      <xsd:element name="IMachineDebugger_getLogRelGroupsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="authType" type="vbox:AuthType"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthTypeResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- read/write attribute IVRDEServer::authTimeout-->
-      <xsd:element name="IVRDEServer_getAuthTimeout">
+      <!-- readonly attribute IMachineDebugger::logRelDestinations-->
+      <xsd:element name="IMachineDebugger_getLogRelDestinations">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getAuthTimeoutResponse">
+      <xsd:element name="IMachineDebugger_getLogRelDestinationsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthTimeout">
+      <!-- readonly attribute IMachineDebugger::HWVirtExEnabled-->
+      <xsd:element name="IMachineDebugger_getHWVirtExEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="authTimeout" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthTimeoutResponse">
+      <xsd:element name="IMachineDebugger_getHWVirtExEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IVRDEServer::allowMultiConnection-->
-      <xsd:element name="IVRDEServer_getAllowMultiConnection">
+      <!-- readonly attribute IMachineDebugger::HWVirtExNestedPagingEnabled-->
+      <xsd:element name="IMachineDebugger_getHWVirtExNestedPagingEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getAllowMultiConnectionResponse">
+      <xsd:element name="IMachineDebugger_getHWVirtExNestedPagingEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAllowMultiConnection">
+      <!-- readonly attribute IMachineDebugger::HWVirtExVPIDEnabled-->
+      <xsd:element name="IMachineDebugger_getHWVirtExVPIDEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="allowMultiConnection" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAllowMultiConnectionResponse">
+      <xsd:element name="IMachineDebugger_getHWVirtExVPIDEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IVRDEServer::reuseSingleConnection-->
-      <xsd:element name="IVRDEServer_getReuseSingleConnection">
+      <!-- readonly attribute IMachineDebugger::HWVirtExUXEnabled-->
+      <xsd:element name="IMachineDebugger_getHWVirtExUXEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getReuseSingleConnectionResponse">
+      <xsd:element name="IMachineDebugger_getHWVirtExUXEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setReuseSingleConnection">
+      <!-- readonly attribute IMachineDebugger::OSName-->
+      <xsd:element name="IMachineDebugger_getOSName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="reuseSingleConnection" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setReuseSingleConnectionResponse">
+      <xsd:element name="IMachineDebugger_getOSNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IVRDEServer::VRDEExtPack-->
-      <xsd:element name="IVRDEServer_getVRDEExtPack">
+      <!-- readonly attribute IMachineDebugger::OSVersion-->
+      <xsd:element name="IMachineDebugger_getOSVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getVRDEExtPackResponse">
+      <xsd:element name="IMachineDebugger_getOSVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setVRDEExtPack">
+      <!-- readonly attribute IMachineDebugger::PAEEnabled-->
+      <xsd:element name="IMachineDebugger_getPAEEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="VRDEExtPack" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setVRDEExtPackResponse">
+      <xsd:element name="IMachineDebugger_getPAEEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IVRDEServer::authLibrary-->
-      <xsd:element name="IVRDEServer_getAuthLibrary">
+      <!-- read/write attribute IMachineDebugger::virtualTimeRate-->
+      <xsd:element name="IMachineDebugger_getVirtualTimeRate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getAuthLibraryResponse">
+      <xsd:element name="IMachineDebugger_getVirtualTimeRateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthLibrary">
+      <xsd:element name="IMachineDebugger_setVirtualTimeRate">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="authLibrary" type="xsd:string"/>
+            <xsd:element name="virtualTimeRate" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setAuthLibraryResponse">
+      <xsd:element name="IMachineDebugger_setVirtualTimeRateResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IVRDEServer::VRDEProperties-->
-      <xsd:element name="IVRDEServer_getVRDEProperties">
+      <!--skipping attribute VM for it is suppressed-->
+      <!-- readonly attribute IMachineDebugger::uptime-->
+      <xsd:element name="IMachineDebugger_getUptime">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getVRDEPropertiesResponse">
+      <xsd:element name="IMachineDebugger_getUptimeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVRDEServer::setVRDEProperty-->
-      <xsd:element name="IVRDEServer_setVRDEProperty">
+      <!-- method IMachineDebugger::dumpGuestCore-->
+      <xsd:element name="IMachineDebugger_dumpGuestCore">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
-            <xsd:element name="value" type="xsd:string"/>
+            <xsd:element name="filename" type="xsd:string"/>
+            <xsd:element name="compression" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_setVRDEPropertyResponse">
+      <xsd:element name="IMachineDebugger_dumpGuestCoreResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVRDEServer::getVRDEProperty-->
-      <xsd:element name="IVRDEServer_getVRDEProperty">
+      <!-- method IMachineDebugger::dumpHostProcessCore-->
+      <xsd:element name="IMachineDebugger_dumpHostProcessCore">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="filename" type="xsd:string"/>
+            <xsd:element name="compression" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServer_getVRDEPropertyResponse">
+      <xsd:element name="IMachineDebugger_dumpHostProcessCoreResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISession-->
-      <!-- readonly attribute ISession::state-->
-      <xsd:element name="ISession_getState">
+      <!-- method IMachineDebugger::info-->
+      <xsd:element name="IMachineDebugger_info">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="args" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_getStateResponse">
+      <xsd:element name="IMachineDebugger_infoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:SessionState"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISession::type-->
-      <xsd:element name="ISession_getType">
+      <!-- method IMachineDebugger::injectNMI-->
+      <xsd:element name="IMachineDebugger_injectNMI">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_getTypeResponse">
+      <xsd:element name="IMachineDebugger_injectNMIResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:SessionType"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute ISession::name-->
-      <xsd:element name="ISession_getName">
+      <!-- method IMachineDebugger::modifyLogGroups-->
+      <xsd:element name="IMachineDebugger_modifyLogGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="settings" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_getNameResponse">
+      <xsd:element name="IMachineDebugger_modifyLogGroupsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_setName">
+      <!-- method IMachineDebugger::modifyLogFlags-->
+      <xsd:element name="IMachineDebugger_modifyLogFlags">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="settings" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_setNameResponse">
+      <xsd:element name="IMachineDebugger_modifyLogFlagsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISession::machine-->
-      <xsd:element name="ISession_getMachine">
+      <!-- method IMachineDebugger::modifyLogDestinations-->
+      <xsd:element name="IMachineDebugger_modifyLogDestinations">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="settings" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_getMachineResponse">
+      <xsd:element name="IMachineDebugger_modifyLogDestinationsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ISession::console-->
-      <xsd:element name="ISession_getConsole">
+      <!-- method IMachineDebugger::readPhysicalMemory-->
+      <xsd:element name="IMachineDebugger_readPhysicalMemory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="address" type="xsd:long"/>
+            <xsd:element name="size" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_getConsoleResponse">
+      <xsd:element name="IMachineDebugger_readPhysicalMemoryResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method ISession::unlockMachine-->
-      <xsd:element name="ISession_unlockMachine">
+      <!-- method IMachineDebugger::writePhysicalMemory-->
+      <xsd:element name="IMachineDebugger_writePhysicalMemory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="address" type="xsd:long"/>
+            <xsd:element name="size" type="xsd:unsignedInt"/>
+            <xsd:element name="bytes" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISession_unlockMachineResponse">
+      <xsd:element name="IMachineDebugger_writePhysicalMemoryResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IStorageController-->
-      <!-- read/write attribute IStorageController::name-->
-      <xsd:element name="IStorageController_getName">
+      <!-- method IMachineDebugger::readVirtualMemory-->
+      <xsd:element name="IMachineDebugger_readVirtualMemory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="address" type="xsd:long"/>
+            <xsd:element name="size" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getNameResponse">
+      <xsd:element name="IMachineDebugger_readVirtualMemoryResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setName">
+      <!-- method IMachineDebugger::writeVirtualMemory-->
+      <xsd:element name="IMachineDebugger_writeVirtualMemory">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="address" type="xsd:long"/>
+            <xsd:element name="size" type="xsd:unsignedInt"/>
+            <xsd:element name="bytes" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setNameResponse">
+      <xsd:element name="IMachineDebugger_writeVirtualMemoryResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageController::maxDevicesPerPortCount-->
-      <xsd:element name="IStorageController_getMaxDevicesPerPortCount">
+      <!-- method IMachineDebugger::loadPlugIn-->
+      <xsd:element name="IMachineDebugger_loadPlugIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getMaxDevicesPerPortCountResponse">
+      <xsd:element name="IMachineDebugger_loadPlugInResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageController::minPortCount-->
-      <xsd:element name="IStorageController_getMinPortCount">
+      <!-- method IMachineDebugger::unloadPlugIn-->
+      <xsd:element name="IMachineDebugger_unloadPlugIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getMinPortCountResponse">
+      <xsd:element name="IMachineDebugger_unloadPlugInResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageController::maxPortCount-->
-      <xsd:element name="IStorageController_getMaxPortCount">
+      <!-- method IMachineDebugger::detectOS-->
+      <xsd:element name="IMachineDebugger_detectOS">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getMaxPortCountResponse">
+      <xsd:element name="IMachineDebugger_detectOSResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IStorageController::instance-->
-      <xsd:element name="IStorageController_getInstance">
+      <!-- method IMachineDebugger::queryOSKernelLog-->
+      <xsd:element name="IMachineDebugger_queryOSKernelLog">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="maxMessages" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getInstanceResponse">
+      <xsd:element name="IMachineDebugger_queryOSKernelLogResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setInstance">
+      <!-- method IMachineDebugger::getRegister-->
+      <xsd:element name="IMachineDebugger_getRegister">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="instance" type="xsd:unsignedInt"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setInstanceResponse">
+      <xsd:element name="IMachineDebugger_getRegisterResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IStorageController::portCount-->
-      <xsd:element name="IStorageController_getPortCount">
+      <!-- method IMachineDebugger::getRegisters-->
+      <xsd:element name="IMachineDebugger_getRegisters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getPortCountResponse">
+      <xsd:element name="IMachineDebugger_getRegistersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setPortCount">
+      <!-- method IMachineDebugger::setRegister-->
+      <xsd:element name="IMachineDebugger_setRegister">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="portCount" type="xsd:unsignedInt"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setPortCountResponse">
+      <xsd:element name="IMachineDebugger_setRegisterResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageController::bus-->
-      <xsd:element name="IStorageController_getBus">
+      <!-- method IMachineDebugger::setRegisters-->
+      <xsd:element name="IMachineDebugger_setRegisters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
+            <xsd:element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="values" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getBusResponse">
+      <xsd:element name="IMachineDebugger_setRegistersResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:StorageBus"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IStorageController::controllerType-->
-      <xsd:element name="IStorageController_getControllerType">
+      <!-- method IMachineDebugger::dumpGuestStack-->
+      <xsd:element name="IMachineDebugger_dumpGuestStack">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="cpuId" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getControllerTypeResponse">
+      <xsd:element name="IMachineDebugger_dumpGuestStackResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:StorageControllerType"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setControllerType">
+      <!-- method IMachineDebugger::resetStats-->
+      <xsd:element name="IMachineDebugger_resetStats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
+            <xsd:element name="pattern" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setControllerTypeResponse">
+      <xsd:element name="IMachineDebugger_resetStatsResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IStorageController::useHostIOCache-->
-      <xsd:element name="IStorageController_getUseHostIOCache">
+      <!-- method IMachineDebugger::dumpStats-->
+      <xsd:element name="IMachineDebugger_dumpStats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="pattern" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getUseHostIOCacheResponse">
+      <xsd:element name="IMachineDebugger_dumpStatsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setUseHostIOCache">
+      <!-- method IMachineDebugger::getStats-->
+      <xsd:element name="IMachineDebugger_getStats">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="useHostIOCache" type="xsd:boolean"/>
+            <xsd:element name="pattern" type="xsd:string"/>
+            <xsd:element name="withDescriptions" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_setUseHostIOCacheResponse">
+      <xsd:element name="IMachineDebugger_getStatsResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageController::bootable-->
-      <xsd:element name="IStorageController_getBootable">
+      <!--Interface IUSBDeviceFilters-->
+      <!-- readonly attribute IUSBDeviceFilters::deviceFilters-->
+      <xsd:element name="IUSBDeviceFilters_getDeviceFilters">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageController_getBootableResponse">
+      <xsd:element name="IUSBDeviceFilters_getDeviceFiltersResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IManagedObjectRef-->
-      <!-- method IManagedObjectRef::getInterfaceName-->
-      <xsd:element name="IManagedObjectRef_getInterfaceName">
+      <!-- method IUSBDeviceFilters::createDeviceFilter-->
+      <xsd:element name="IUSBDeviceFilters_createDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IManagedObjectRef_getInterfaceNameResponse">
+      <xsd:element name="IUSBDeviceFilters_createDeviceFilterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IManagedObjectRef::release-->
-      <xsd:element name="IManagedObjectRef_release">
+      <!-- method IUSBDeviceFilters::insertDeviceFilter-->
+      <xsd:element name="IUSBDeviceFilters_insertDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
+            <xsd:element name="filter" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IManagedObjectRef_releaseResponse">
+      <xsd:element name="IUSBDeviceFilters_insertDeviceFilterResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IWebsessionManager-->
-      <!-- method IWebsessionManager::logon-->
-      <xsd:element name="IWebsessionManager_logon">
+      <!-- method IUSBDeviceFilters::removeDeviceFilter-->
+      <xsd:element name="IUSBDeviceFilters_removeDeviceFilter">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="username" type="xsd:string"/>
-            <xsd:element name="password" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="position" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IWebsessionManager_logonResponse">
+      <xsd:element name="IUSBDeviceFilters_removeDeviceFilterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IWebsessionManager::getSessionObject-->
-      <xsd:element name="IWebsessionManager_getSessionObject">
+      <!--Interface IUSBController-->
+      <!-- read/write attribute IUSBController::name-->
+      <xsd:element name="IUSBController_getName">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="refIVirtualBox" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IWebsessionManager_getSessionObjectResponse">
+      <xsd:element name="IUSBController_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IWebsessionManager::logoff-->
-      <xsd:element name="IWebsessionManager_logoff">
+      <xsd:element name="IUSBController_setName">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="refIVirtualBox" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IWebsessionManager_logoffResponse">
+      <xsd:element name="IUSBController_setNameResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IPerformanceMetric-->
-      <!-- readonly attribute IPerformanceMetric::metricName-->
-      <xsd:element name="IPerformanceMetric_getMetricName">
+      <!-- read/write attribute IUSBController::type-->
+      <xsd:element name="IUSBController_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getMetricNameResponse">
+      <xsd:element name="IUSBController_getTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::object-->
-      <xsd:element name="IPerformanceMetric_getObject">
+      <xsd:element name="IUSBController_setType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:USBControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getObjectResponse">
+      <xsd:element name="IUSBController_setTypeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::description-->
-      <xsd:element name="IPerformanceMetric_getDescription">
+      <!-- readonly attribute IUSBController::USBStandard-->
+      <xsd:element name="IUSBController_getUSBStandard">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getDescriptionResponse">
+      <xsd:element name="IUSBController_getUSBStandardResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::period-->
-      <xsd:element name="IPerformanceMetric_getPeriod">
+      <!--Interface IUSBDevice-->
+      <!-- readonly attribute IUSBDevice::id-->
+      <xsd:element name="IUSBDevice_getId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getPeriodResponse">
+      <xsd:element name="IUSBDevice_getIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::count-->
-      <xsd:element name="IPerformanceMetric_getCount">
+      <!-- readonly attribute IUSBDevice::vendorId-->
+      <xsd:element name="IUSBDevice_getVendorId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getCountResponse">
+      <xsd:element name="IUSBDevice_getVendorIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::unit-->
-      <xsd:element name="IPerformanceMetric_getUnit">
+      <!-- readonly attribute IUSBDevice::productId-->
+      <xsd:element name="IUSBDevice_getProductId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getUnitResponse">
+      <xsd:element name="IUSBDevice_getProductIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::minimumValue-->
-      <xsd:element name="IPerformanceMetric_getMinimumValue">
+      <!-- readonly attribute IUSBDevice::revision-->
+      <xsd:element name="IUSBDevice_getRevision">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getMinimumValueResponse">
+      <xsd:element name="IUSBDevice_getRevisionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IPerformanceMetric::maximumValue-->
-      <xsd:element name="IPerformanceMetric_getMaximumValue">
+      <!-- readonly attribute IUSBDevice::manufacturer-->
+      <xsd:element name="IUSBDevice_getManufacturer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceMetric_getMaximumValueResponse">
+      <xsd:element name="IUSBDevice_getManufacturerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IPerformanceCollector-->
-      <!-- readonly attribute IPerformanceCollector::metricNames-->
-      <xsd:element name="IPerformanceCollector_getMetricNames">
+      <!-- readonly attribute IUSBDevice::product-->
+      <xsd:element name="IUSBDevice_getProduct">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_getMetricNamesResponse">
+      <xsd:element name="IUSBDevice_getProductResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPerformanceCollector::getMetrics-->
-      <xsd:element name="IPerformanceCollector_getMetrics">
+      <!-- readonly attribute IUSBDevice::serialNumber-->
+      <xsd:element name="IUSBDevice_getSerialNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_getMetricsResponse">
+      <xsd:element name="IUSBDevice_getSerialNumberResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPerformanceCollector::setupMetrics-->
-      <xsd:element name="IPerformanceCollector_setupMetrics">
+      <!-- readonly attribute IUSBDevice::address-->
+      <xsd:element name="IUSBDevice_getAddress">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="period" type="xsd:unsignedInt"/>
-            <xsd:element name="count" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_setupMetricsResponse">
+      <xsd:element name="IUSBDevice_getAddressResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPerformanceCollector::enableMetrics-->
-      <xsd:element name="IPerformanceCollector_enableMetrics">
+      <!-- readonly attribute IUSBDevice::port-->
+      <xsd:element name="IUSBDevice_getPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_enableMetricsResponse">
+      <xsd:element name="IUSBDevice_getPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPerformanceCollector::disableMetrics-->
-      <xsd:element name="IPerformanceCollector_disableMetrics">
+      <!-- readonly attribute IUSBDevice::version-->
+      <xsd:element name="IUSBDevice_getVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_disableMetricsResponse">
+      <xsd:element name="IUSBDevice_getVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IPerformanceCollector::queryMetricsData-->
-      <xsd:element name="IPerformanceCollector_queryMetricsData">
+      <!-- readonly attribute IUSBDevice::portVersion-->
+      <xsd:element name="IUSBDevice_getPortVersion">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IPerformanceCollector_queryMetricsDataResponse">
+      <xsd:element name="IUSBDevice_getPortVersionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnMetricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="returnObjects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="returnUnits" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
-            <xsd:element name="returnScales" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
-            <xsd:element name="returnSequenceNumbers" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
-            <xsd:element name="returnDataIndices" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
-            <xsd:element name="returnDataLengths" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATEngine-->
-      <!-- read/write attribute INATEngine::network-->
-      <xsd:element name="INATEngine_getNetwork">
+      <!-- readonly attribute IUSBDevice::speed-->
+      <xsd:element name="IUSBDevice_getSpeed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getNetworkResponse">
+      <xsd:element name="IUSBDevice_getSpeedResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:USBConnectionSpeed"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setNetwork">
+      <!-- readonly attribute IUSBDevice::remote-->
+      <xsd:element name="IUSBDevice_getRemote">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="network" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setNetworkResponse">
+      <xsd:element name="IUSBDevice_getRemoteResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::hostIP-->
-      <xsd:element name="INATEngine_getHostIP">
+      <!-- readonly attribute IUSBDevice::deviceInfo-->
+      <xsd:element name="IUSBDevice_getDeviceInfo">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getHostIPResponse">
+      <xsd:element name="IUSBDevice_getDeviceInfoResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setHostIP">
+      <!-- readonly attribute IUSBDevice::backend-->
+      <xsd:element name="IUSBDevice_getBackend">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="hostIP" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setHostIPResponse">
+      <xsd:element name="IUSBDevice_getBackendResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::TFTPPrefix-->
-      <xsd:element name="INATEngine_getTFTPPrefix">
+      <!--Interface IUSBDeviceFilter-->
+      <!-- read/write attribute IUSBDeviceFilter::name-->
+      <xsd:element name="IUSBDeviceFilter_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getTFTPPrefixResponse">
+      <xsd:element name="IUSBDeviceFilter_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPPrefix">
+      <xsd:element name="IUSBDeviceFilter_setName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="TFTPPrefix" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPPrefixResponse">
+      <xsd:element name="IUSBDeviceFilter_setNameResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::TFTPBootFile-->
-      <xsd:element name="INATEngine_getTFTPBootFile">
+      <!-- read/write attribute IUSBDeviceFilter::active-->
+      <xsd:element name="IUSBDeviceFilter_getActive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getTFTPBootFileResponse">
+      <xsd:element name="IUSBDeviceFilter_getActiveResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPBootFile">
+      <xsd:element name="IUSBDeviceFilter_setActive">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="TFTPBootFile" type="xsd:string"/>
+            <xsd:element name="active" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPBootFileResponse">
+      <xsd:element name="IUSBDeviceFilter_setActiveResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::TFTPNextServer-->
-      <xsd:element name="INATEngine_getTFTPNextServer">
+      <!-- read/write attribute IUSBDeviceFilter::vendorId-->
+      <xsd:element name="IUSBDeviceFilter_getVendorId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getTFTPNextServerResponse">
+      <xsd:element name="IUSBDeviceFilter_getVendorIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPNextServer">
+      <xsd:element name="IUSBDeviceFilter_setVendorId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="TFTPNextServer" type="xsd:string"/>
+            <xsd:element name="vendorId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setTFTPNextServerResponse">
+      <xsd:element name="IUSBDeviceFilter_setVendorIdResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::aliasMode-->
-      <xsd:element name="INATEngine_getAliasMode">
+      <!-- read/write attribute IUSBDeviceFilter::productId-->
+      <xsd:element name="IUSBDeviceFilter_getProductId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getAliasModeResponse">
+      <xsd:element name="IUSBDeviceFilter_getProductIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setAliasMode">
+      <xsd:element name="IUSBDeviceFilter_setProductId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="aliasMode" type="xsd:unsignedInt"/>
+            <xsd:element name="productId" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setAliasModeResponse">
+      <xsd:element name="IUSBDeviceFilter_setProductIdResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::DNSPassDomain-->
-      <xsd:element name="INATEngine_getDNSPassDomain">
+      <!-- read/write attribute IUSBDeviceFilter::revision-->
+      <xsd:element name="IUSBDeviceFilter_getRevision">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getDNSPassDomainResponse">
+      <xsd:element name="IUSBDeviceFilter_getRevisionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSPassDomain">
+      <xsd:element name="IUSBDeviceFilter_setRevision">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="DNSPassDomain" type="xsd:boolean"/>
+            <xsd:element name="revision" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSPassDomainResponse">
+      <xsd:element name="IUSBDeviceFilter_setRevisionResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::DNSProxy-->
-      <xsd:element name="INATEngine_getDNSProxy">
+      <!-- read/write attribute IUSBDeviceFilter::manufacturer-->
+      <xsd:element name="IUSBDeviceFilter_getManufacturer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getDNSProxyResponse">
+      <xsd:element name="IUSBDeviceFilter_getManufacturerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSProxy">
+      <xsd:element name="IUSBDeviceFilter_setManufacturer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="DNSProxy" type="xsd:boolean"/>
+            <xsd:element name="manufacturer" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSProxyResponse">
+      <xsd:element name="IUSBDeviceFilter_setManufacturerResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute INATEngine::DNSUseHostResolver-->
-      <xsd:element name="INATEngine_getDNSUseHostResolver">
+      <!-- read/write attribute IUSBDeviceFilter::product-->
+      <xsd:element name="IUSBDeviceFilter_getProduct">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getDNSUseHostResolverResponse">
+      <xsd:element name="IUSBDeviceFilter_getProductResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSUseHostResolver">
+      <xsd:element name="IUSBDeviceFilter_setProduct">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="DNSUseHostResolver" type="xsd:boolean"/>
+            <xsd:element name="product" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setDNSUseHostResolverResponse">
+      <xsd:element name="IUSBDeviceFilter_setProductResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATEngine::redirects-->
-      <xsd:element name="INATEngine_getRedirects">
+      <!-- read/write attribute IUSBDeviceFilter::serialNumber-->
+      <xsd:element name="IUSBDeviceFilter_getSerialNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getRedirectsResponse">
+      <xsd:element name="IUSBDeviceFilter_getSerialNumberResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method INATEngine::setNetworkSettings-->
-      <xsd:element name="INATEngine_setNetworkSettings">
+      <xsd:element name="IUSBDeviceFilter_setSerialNumber">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="mtu" type="xsd:unsignedInt"/>
-            <xsd:element name="sockSnd" type="xsd:unsignedInt"/>
-            <xsd:element name="sockRcv" type="xsd:unsignedInt"/>
-            <xsd:element name="TcpWndSnd" type="xsd:unsignedInt"/>
-            <xsd:element name="TcpWndRcv" type="xsd:unsignedInt"/>
+            <xsd:element name="serialNumber" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_setNetworkSettingsResponse">
+      <xsd:element name="IUSBDeviceFilter_setSerialNumberResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method INATEngine::getNetworkSettings-->
-      <xsd:element name="INATEngine_getNetworkSettings">
+      <!-- read/write attribute IUSBDeviceFilter::port-->
+      <xsd:element name="IUSBDeviceFilter_getPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_getNetworkSettingsResponse">
-        <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="mtu" type="xsd:unsignedInt"/>
-            <xsd:element name="sockSnd" type="xsd:unsignedInt"/>
-            <xsd:element name="sockRcv" type="xsd:unsignedInt"/>
-            <xsd:element name="TcpWndSnd" type="xsd:unsignedInt"/>
-            <xsd:element name="TcpWndRcv" type="xsd:unsignedInt"/>
-          </xsd:sequence>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method INATEngine::addRedirect-->
-      <xsd:element name="INATEngine_addRedirect">
+      <xsd:element name="IUSBDeviceFilter_getPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="proto" type="vbox:NATProtocol"/>
-            <xsd:element name="hostIP" type="xsd:string"/>
-            <xsd:element name="hostPort" type="xsd:unsignedShort"/>
-            <xsd:element name="guestIP" type="xsd:string"/>
-            <xsd:element name="guestPort" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_addRedirectResponse">
-        <xsd:complexType>
-          <xsd:sequence/>
-        </xsd:complexType>
-      </xsd:element>
-      <!-- method INATEngine::removeRedirect-->
-      <xsd:element name="INATEngine_removeRedirect">
+      <xsd:element name="IUSBDeviceFilter_setPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="port" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATEngine_removeRedirectResponse">
+      <xsd:element name="IUSBDeviceFilter_setPortResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IBandwidthGroup-->
-      <!-- readonly attribute IBandwidthGroup::name-->
-      <xsd:element name="IBandwidthGroup_getName">
+      <!-- read/write attribute IUSBDeviceFilter::remote-->
+      <xsd:element name="IUSBDeviceFilter_getRemote">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_getNameResponse">
+      <xsd:element name="IUSBDeviceFilter_getRemoteResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IBandwidthGroup::type-->
-      <xsd:element name="IBandwidthGroup_getType">
+      <xsd:element name="IUSBDeviceFilter_setRemote">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="remote" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_getTypeResponse">
+      <xsd:element name="IUSBDeviceFilter_setRemoteResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:BandwidthGroupType"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IBandwidthGroup::reference-->
-      <xsd:element name="IBandwidthGroup_getReference">
+      <!-- read/write attribute IUSBDeviceFilter::maskedInterfaces-->
+      <xsd:element name="IUSBDeviceFilter_getMaskedInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_getReferenceResponse">
+      <xsd:element name="IUSBDeviceFilter_getMaskedInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- read/write attribute IBandwidthGroup::maxBytesPerSec-->
-      <xsd:element name="IBandwidthGroup_getMaxBytesPerSec">
+      <xsd:element name="IUSBDeviceFilter_setMaskedInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="maskedInterfaces" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_getMaxBytesPerSecResponse">
+      <xsd:element name="IUSBDeviceFilter_setMaskedInterfacesResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_setMaxBytesPerSec">
+      <!--Interface IHostUSBDevice-->
+      <!-- readonly attribute IHostUSBDevice::state-->
+      <xsd:element name="IHostUSBDevice_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="maxBytesPerSec" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroup_setMaxBytesPerSecResponse">
+      <xsd:element name="IHostUSBDevice_getStateResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:USBDeviceState"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IBandwidthControl-->
-      <!-- readonly attribute IBandwidthControl::numGroups-->
-      <xsd:element name="IBandwidthControl_getNumGroups">
+      <!--Interface IHostUSBDeviceFilter-->
+      <!-- read/write attribute IHostUSBDeviceFilter::action-->
+      <xsd:element name="IHostUSBDeviceFilter_getAction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthControl_getNumGroupsResponse">
+      <xsd:element name="IHostUSBDeviceFilter_getActionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="vbox:USBDeviceFilterAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IBandwidthControl::createBandwidthGroup-->
-      <xsd:element name="IBandwidthControl_createBandwidthGroup">
+      <xsd:element name="IHostUSBDeviceFilter_setAction">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
-            <xsd:element name="type" type="vbox:BandwidthGroupType"/>
-            <xsd:element name="maxBytesPerSec" type="xsd:long"/>
+            <xsd:element name="action" type="vbox:USBDeviceFilterAction"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthControl_createBandwidthGroupResponse">
+      <xsd:element name="IHostUSBDeviceFilter_setActionResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IBandwidthControl::deleteBandwidthGroup-->
-      <xsd:element name="IBandwidthControl_deleteBandwidthGroup">
+      <!--Interface IUSBProxyBackend-->
+      <!-- readonly attribute IUSBProxyBackend::name-->
+      <xsd:element name="IUSBProxyBackend_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthControl_deleteBandwidthGroupResponse">
+      <xsd:element name="IUSBProxyBackend_getNameResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IBandwidthControl::getBandwidthGroup-->
-      <xsd:element name="IBandwidthControl_getBandwidthGroup">
+      <!-- readonly attribute IUSBProxyBackend::type-->
+      <xsd:element name="IUSBProxyBackend_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthControl_getBandwidthGroupResponse">
+      <xsd:element name="IUSBProxyBackend_getTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IBandwidthControl::getAllBandwidthGroups-->
-      <xsd:element name="IBandwidthControl_getAllBandwidthGroups">
+      <!--Interface IAudioAdapter-->
+      <!-- read/write attribute IAudioAdapter::enabled-->
+      <xsd:element name="IAudioAdapter_getEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthControl_getAllBandwidthGroupsResponse">
+      <xsd:element name="IAudioAdapter_getEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IEventSource-->
-      <!-- method IEventSource::createListener-->
-      <xsd:element name="IEventSource_createListener">
+      <xsd:element name="IAudioAdapter_setEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_createListenerResponse">
+      <xsd:element name="IAudioAdapter_setEnabledResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::createAggregator-->
-      <xsd:element name="IEventSource_createAggregator">
+      <!-- read/write attribute IAudioAdapter::enabledIn-->
+      <xsd:element name="IAudioAdapter_getEnabledIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="subordinates" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_createAggregatorResponse">
+      <xsd:element name="IAudioAdapter_getEnabledInResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::registerListener-->
-      <xsd:element name="IEventSource_registerListener">
+      <xsd:element name="IAudioAdapter_setEnabledIn">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="listener" type="xsd:string"/>
-            <xsd:element name="interesting" minOccurs="0" maxOccurs="unbounded" type="vbox:VBoxEventType"/>
-            <xsd:element name="active" type="xsd:boolean"/>
+            <xsd:element name="enabledIn" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_registerListenerResponse">
+      <xsd:element name="IAudioAdapter_setEnabledInResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::unregisterListener-->
-      <xsd:element name="IEventSource_unregisterListener">
+      <!-- read/write attribute IAudioAdapter::enabledOut-->
+      <xsd:element name="IAudioAdapter_getEnabledOut">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="listener" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_unregisterListenerResponse">
+      <xsd:element name="IAudioAdapter_getEnabledOutResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::fireEvent-->
-      <xsd:element name="IEventSource_fireEvent">
+      <xsd:element name="IAudioAdapter_setEnabledOut">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="event" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:int"/>
+            <xsd:element name="enabledOut" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_fireEventResponse">
+      <xsd:element name="IAudioAdapter_setEnabledOutResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::getEvent-->
-      <xsd:element name="IEventSource_getEvent">
+      <!-- read/write attribute IAudioAdapter::audioController-->
+      <xsd:element name="IAudioAdapter_getAudioController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="listener" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_getEventResponse">
+      <xsd:element name="IAudioAdapter_getAudioControllerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:AudioControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEventSource::eventProcessed-->
-      <xsd:element name="IEventSource_eventProcessed">
+      <xsd:element name="IAudioAdapter_setAudioController">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="listener" type="xsd:string"/>
-            <xsd:element name="event" type="xsd:string"/>
+            <xsd:element name="audioController" type="vbox:AudioControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSource_eventProcessedResponse">
+      <xsd:element name="IAudioAdapter_setAudioControllerResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IEventListener-->
-      <!-- method IEventListener::handleEvent-->
-      <xsd:element name="IEventListener_handleEvent">
+      <!-- read/write attribute IAudioAdapter::audioCodec-->
+      <xsd:element name="IAudioAdapter_getAudioCodec">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="event" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventListener_handleEventResponse">
+      <xsd:element name="IAudioAdapter_getAudioCodecResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:AudioCodecType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IEvent-->
-      <!-- readonly attribute IEvent::type-->
-      <xsd:element name="IEvent_getType">
+      <xsd:element name="IAudioAdapter_setAudioCodec">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="audioCodec" type="vbox:AudioCodecType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEvent_getTypeResponse">
+      <xsd:element name="IAudioAdapter_setAudioCodecResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute IAudioAdapter::audioDriver-->
+      <xsd:element name="IAudioAdapter_getAudioDriver">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:VBoxEventType"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IEvent::source-->
-      <xsd:element name="IEvent_getSource">
+      <xsd:element name="IAudioAdapter_getAudioDriverResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:AudioDriverType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEvent_getSourceResponse">
+      <xsd:element name="IAudioAdapter_setAudioDriver">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="audioDriver" type="vbox:AudioDriverType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IEvent::waitable-->
-      <xsd:element name="IEvent_getWaitable">
+      <xsd:element name="IAudioAdapter_setAudioDriverResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IAudioAdapter::propertiesList-->
+      <xsd:element name="IAudioAdapter_getPropertiesList">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEvent_getWaitableResponse">
+      <xsd:element name="IAudioAdapter_getPropertiesListResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEvent::setProcessed-->
-      <xsd:element name="IEvent_setProcessed">
+      <!-- method IAudioAdapter::setProperty-->
+      <xsd:element name="IAudioAdapter_setProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEvent_setProcessedResponse">
+      <xsd:element name="IAudioAdapter_setPropertyResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IEvent::waitProcessed-->
-      <xsd:element name="IEvent_waitProcessed">
+      <!-- method IAudioAdapter::getProperty-->
+      <xsd:element name="IAudioAdapter_getProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="timeout" type="xsd:int"/>
+            <xsd:element name="key" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEvent_waitProcessedResponse">
+      <xsd:element name="IAudioAdapter_getPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IReusableEvent-->
-      <!-- readonly attribute IReusableEvent::generation-->
-      <xsd:element name="IReusableEvent_getGeneration">
+      <!--Interface IVRDEServer-->
+      <!-- read/write attribute IVRDEServer::enabled-->
+      <xsd:element name="IVRDEServer_getEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IReusableEvent_getGenerationResponse">
+      <xsd:element name="IVRDEServer_getEnabledResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IReusableEvent::reuse-->
-      <xsd:element name="IReusableEvent_reuse">
+      <xsd:element name="IVRDEServer_setEnabled">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="enabled" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IReusableEvent_reuseResponse">
+      <xsd:element name="IVRDEServer_setEnabledResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachineEvent-->
-      <!-- readonly attribute IMachineEvent::machineId-->
-      <xsd:element name="IMachineEvent_getMachineId">
+      <!-- read/write attribute IVRDEServer::authType-->
+      <xsd:element name="IVRDEServer_getAuthType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineEvent_getMachineIdResponse">
+      <xsd:element name="IVRDEServer_getAuthTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:AuthType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachineStateChangedEvent-->
-      <!-- readonly attribute IMachineStateChangedEvent::state-->
-      <xsd:element name="IMachineStateChangedEvent_getState">
+      <xsd:element name="IVRDEServer_setAuthType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="authType" type="vbox:AuthType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineStateChangedEvent_getStateResponse">
+      <xsd:element name="IVRDEServer_setAuthTypeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MachineState"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachineDataChangedEvent-->
-      <!-- readonly attribute IMachineDataChangedEvent::temporary-->
-      <xsd:element name="IMachineDataChangedEvent_getTemporary">
+      <!-- read/write attribute IVRDEServer::authTimeout-->
+      <xsd:element name="IVRDEServer_getAuthTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineDataChangedEvent_getTemporaryResponse">
+      <xsd:element name="IVRDEServer_getAuthTimeoutResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMediumRegisteredEvent-->
-      <!-- readonly attribute IMediumRegisteredEvent::mediumId-->
-      <xsd:element name="IMediumRegisteredEvent_getMediumId">
+      <xsd:element name="IVRDEServer_setAuthTimeout">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="authTimeout" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumRegisteredEvent_getMediumIdResponse">
+      <xsd:element name="IVRDEServer_setAuthTimeoutResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMediumRegisteredEvent::mediumType-->
-      <xsd:element name="IMediumRegisteredEvent_getMediumType">
+      <!-- read/write attribute IVRDEServer::allowMultiConnection-->
+      <xsd:element name="IVRDEServer_getAllowMultiConnection">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumRegisteredEvent_getMediumTypeResponse">
+      <xsd:element name="IVRDEServer_getAllowMultiConnectionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DeviceType"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMediumRegisteredEvent::registered-->
-      <xsd:element name="IMediumRegisteredEvent_getRegistered">
+      <xsd:element name="IVRDEServer_setAllowMultiConnection">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="allowMultiConnection" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumRegisteredEvent_getRegisteredResponse">
+      <xsd:element name="IVRDEServer_setAllowMultiConnectionResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMediumConfigChangedEvent-->
-      <!-- readonly attribute IMediumConfigChangedEvent::medium-->
-      <xsd:element name="IMediumConfigChangedEvent_getMedium">
+      <!-- read/write attribute IVRDEServer::reuseSingleConnection-->
+      <xsd:element name="IVRDEServer_getReuseSingleConnection">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumConfigChangedEvent_getMediumResponse">
+      <xsd:element name="IVRDEServer_getReuseSingleConnectionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMachineRegisteredEvent-->
-      <!-- readonly attribute IMachineRegisteredEvent::registered-->
-      <xsd:element name="IMachineRegisteredEvent_getRegistered">
+      <xsd:element name="IVRDEServer_setReuseSingleConnection">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="reuseSingleConnection" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMachineRegisteredEvent_getRegisteredResponse">
+      <xsd:element name="IVRDEServer_setReuseSingleConnectionResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISessionStateChangedEvent-->
-      <!-- readonly attribute ISessionStateChangedEvent::state-->
-      <xsd:element name="ISessionStateChangedEvent_getState">
+      <!-- read/write attribute IVRDEServer::VRDEExtPack-->
+      <xsd:element name="IVRDEServer_getVRDEExtPack">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISessionStateChangedEvent_getStateResponse">
+      <xsd:element name="IVRDEServer_getVRDEExtPackResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:SessionState"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestPropertyChangedEvent-->
-      <!-- readonly attribute IGuestPropertyChangedEvent::name-->
-      <xsd:element name="IGuestPropertyChangedEvent_getName">
+      <xsd:element name="IVRDEServer_setVRDEExtPack">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="VRDEExtPack" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestPropertyChangedEvent_getNameResponse">
+      <xsd:element name="IVRDEServer_setVRDEExtPackResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestPropertyChangedEvent::value-->
-      <xsd:element name="IGuestPropertyChangedEvent_getValue">
+      <!-- read/write attribute IVRDEServer::authLibrary-->
+      <xsd:element name="IVRDEServer_getAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestPropertyChangedEvent_getValueResponse">
+      <xsd:element name="IVRDEServer_getAuthLibraryResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestPropertyChangedEvent::flags-->
-      <xsd:element name="IGuestPropertyChangedEvent_getFlags">
+      <xsd:element name="IVRDEServer_setAuthLibrary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="authLibrary" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestPropertyChangedEvent_getFlagsResponse">
+      <xsd:element name="IVRDEServer_setAuthLibraryResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshotEvent-->
-      <!-- readonly attribute ISnapshotEvent::snapshotId-->
-      <xsd:element name="ISnapshotEvent_getSnapshotId">
+      <!-- readonly attribute IVRDEServer::VRDEProperties-->
+      <xsd:element name="IVRDEServer_getVRDEProperties">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshotEvent_getSnapshotIdResponse">
+      <xsd:element name="IVRDEServer_getVRDEPropertiesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshotTakenEvent-->
-      <!-- readonly attribute ISnapshotTakenEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- method IVRDEServer::setVRDEProperty-->
+      <xsd:element name="IVRDEServer_setVRDEProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
+            <xsd:element name="value" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IVRDEServer_setVRDEPropertyResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshotDeletedEvent-->
-      <!-- readonly attribute ISnapshotDeletedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- method IVRDEServer::getVRDEProperty-->
+      <xsd:element name="IVRDEServer_getVRDEProperty">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="key" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IVRDEServer_getVRDEPropertyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshotRestoredEvent-->
-      <!-- readonly attribute ISnapshotRestoredEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface ISession-->
+      <!-- readonly attribute ISession::state-->
+      <xsd:element name="ISession_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="ISession_getStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:SessionState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISnapshotChangedEvent-->
-      <!-- readonly attribute ISnapshotChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute ISession::type-->
+      <xsd:element name="ISession_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="ISession_getTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:SessionType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMousePointerShapeChangedEvent-->
-      <!-- readonly attribute IMousePointerShapeChangedEvent::visible-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getVisible">
+      <!-- read/write attribute ISession::name-->
+      <xsd:element name="ISession_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getVisibleResponse">
+      <xsd:element name="ISession_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::alpha-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getAlpha">
+      <xsd:element name="ISession_setName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getAlphaResponse">
+      <xsd:element name="ISession_setNameResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::xhot-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getXhot">
+      <!-- readonly attribute ISession::machine-->
+      <xsd:element name="ISession_getMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getXhotResponse">
+      <xsd:element name="ISession_getMachineResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::yhot-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getYhot">
+      <!-- readonly attribute ISession::console-->
+      <xsd:element name="ISession_getConsole">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getYhotResponse">
+      <xsd:element name="ISession_getConsoleResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::width-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getWidth">
+      <!-- method ISession::unlockMachine-->
+      <xsd:element name="ISession_unlockMachine">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getWidthResponse">
+      <xsd:element name="ISession_unlockMachineResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::height-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getHeight">
+      <!--Interface IStorageController-->
+      <!-- read/write attribute IStorageController::name-->
+      <xsd:element name="IStorageController_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getHeightResponse">
+      <xsd:element name="IStorageController_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMousePointerShapeChangedEvent::shape-->
-      <xsd:element name="IMousePointerShapeChangedEvent_getShape">
+      <xsd:element name="IStorageController_setName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMousePointerShapeChangedEvent_getShapeResponse">
+      <xsd:element name="IStorageController_setNameResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMouseCapabilityChangedEvent-->
-      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsAbsolute-->
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsAbsolute">
+      <!-- readonly attribute IStorageController::maxDevicesPerPortCount-->
+      <xsd:element name="IStorageController_getMaxDevicesPerPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsAbsoluteResponse">
+      <xsd:element name="IStorageController_getMaxDevicesPerPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsRelative-->
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsRelative">
+      <!-- readonly attribute IStorageController::minPortCount-->
+      <xsd:element name="IStorageController_getMinPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsRelativeResponse">
+      <xsd:element name="IStorageController_getMinPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsMultiTouch-->
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsMultiTouch">
+      <!-- readonly attribute IStorageController::maxPortCount-->
+      <xsd:element name="IStorageController_getMaxPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsMultiTouchResponse">
+      <xsd:element name="IStorageController_getMaxPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IMouseCapabilityChangedEvent::needsHostCursor-->
-      <xsd:element name="IMouseCapabilityChangedEvent_getNeedsHostCursor">
+      <!-- read/write attribute IStorageController::instance-->
+      <xsd:element name="IStorageController_getInstance">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMouseCapabilityChangedEvent_getNeedsHostCursorResponse">
+      <xsd:element name="IStorageController_getInstanceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IKeyboardLedsChangedEvent-->
-      <!-- readonly attribute IKeyboardLedsChangedEvent::numLock-->
-      <xsd:element name="IKeyboardLedsChangedEvent_getNumLock">
+      <xsd:element name="IStorageController_setInstance">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="instance" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboardLedsChangedEvent_getNumLockResponse">
+      <xsd:element name="IStorageController_setInstanceResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IKeyboardLedsChangedEvent::capsLock-->
-      <xsd:element name="IKeyboardLedsChangedEvent_getCapsLock">
+      <!-- read/write attribute IStorageController::portCount-->
+      <xsd:element name="IStorageController_getPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboardLedsChangedEvent_getCapsLockResponse">
+      <xsd:element name="IStorageController_getPortCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IKeyboardLedsChangedEvent::scrollLock-->
-      <xsd:element name="IKeyboardLedsChangedEvent_getScrollLock">
+      <xsd:element name="IStorageController_setPortCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="portCount" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IKeyboardLedsChangedEvent_getScrollLockResponse">
+      <xsd:element name="IStorageController_setPortCountResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IStateChangedEvent-->
-      <!-- readonly attribute IStateChangedEvent::state-->
-      <xsd:element name="IStateChangedEvent_getState">
+      <!-- readonly attribute IStorageController::bus-->
+      <xsd:element name="IStorageController_getBus">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStateChangedEvent_getStateResponse">
+      <xsd:element name="IStorageController_getBusResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:MachineState"/>
+            <xsd:element name="returnval" type="vbox:StorageBus"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IAdditionsStateChangedEvent-->
-      <!-- readonly attribute IAdditionsStateChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- read/write attribute IStorageController::controllerType-->
+      <xsd:element name="IStorageController_getControllerType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IStorageController_getControllerTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INetworkAdapterChangedEvent-->
-      <!-- readonly attribute INetworkAdapterChangedEvent::networkAdapter-->
-      <xsd:element name="INetworkAdapterChangedEvent_getNetworkAdapter">
+      <xsd:element name="IStorageController_setControllerType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="controllerType" type="vbox:StorageControllerType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INetworkAdapterChangedEvent_getNetworkAdapterResponse">
+      <xsd:element name="IStorageController_setControllerTypeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISerialPortChangedEvent-->
-      <!-- readonly attribute ISerialPortChangedEvent::serialPort-->
-      <xsd:element name="ISerialPortChangedEvent_getSerialPort">
+      <!-- read/write attribute IStorageController::useHostIOCache-->
+      <xsd:element name="IStorageController_getUseHostIOCache">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISerialPortChangedEvent_getSerialPortResponse">
+      <xsd:element name="IStorageController_getUseHostIOCacheResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IParallelPortChangedEvent-->
-      <!-- readonly attribute IParallelPortChangedEvent::parallelPort-->
-      <xsd:element name="IParallelPortChangedEvent_getParallelPort">
+      <xsd:element name="IStorageController_setUseHostIOCache">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="useHostIOCache" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IParallelPortChangedEvent_getParallelPortResponse">
+      <xsd:element name="IStorageController_setUseHostIOCacheResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IStorageControllerChangedEvent-->
-      <!-- readonly attribute IStorageControllerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute IStorageController::bootable-->
+      <xsd:element name="IStorageController_getBootable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IStorageController_getBootableResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IMediumChangedEvent-->
-      <!-- readonly attribute IMediumChangedEvent::mediumAttachment-->
-      <xsd:element name="IMediumChangedEvent_getMediumAttachment">
+      <!--Interface IManagedObjectRef-->
+      <!-- method IManagedObjectRef::getInterfaceName-->
+      <xsd:element name="IManagedObjectRef_getInterfaceName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IMediumChangedEvent_getMediumAttachmentResponse">
+      <xsd:element name="IManagedObjectRef_getInterfaceNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IClipboardModeChangedEvent-->
-      <!-- readonly attribute IClipboardModeChangedEvent::clipboardMode-->
-      <xsd:element name="IClipboardModeChangedEvent_getClipboardMode">
+      <!-- method IManagedObjectRef::release-->
+      <xsd:element name="IManagedObjectRef_release">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IClipboardModeChangedEvent_getClipboardModeResponse">
+      <xsd:element name="IManagedObjectRef_releaseResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ClipboardMode"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IDnDModeChangedEvent-->
-      <!-- readonly attribute IDnDModeChangedEvent::dndMode-->
-      <xsd:element name="IDnDModeChangedEvent_getDndMode">
+      <!--Interface IWebsessionManager-->
+      <!-- method IWebsessionManager::logon-->
+      <xsd:element name="IWebsessionManager_logon">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="username" type="xsd:string"/>
+            <xsd:element name="password" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IDnDModeChangedEvent_getDndModeResponse">
+      <xsd:element name="IWebsessionManager_logonResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:DnDMode"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ICPUChangedEvent-->
-      <!-- readonly attribute ICPUChangedEvent::CPU-->
-      <xsd:element name="ICPUChangedEvent_getCPU">
+      <!-- method IWebsessionManager::getSessionObject-->
+      <xsd:element name="IWebsessionManager_getSessionObject">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="refIVirtualBox" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ICPUChangedEvent_getCPUResponse">
+      <xsd:element name="IWebsessionManager_getSessionObjectResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute ICPUChangedEvent::add-->
-      <xsd:element name="ICPUChangedEvent_getAdd">
+      <!-- method IWebsessionManager::logoff-->
+      <xsd:element name="IWebsessionManager_logoff">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="refIVirtualBox" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ICPUChangedEvent_getAddResponse">
+      <xsd:element name="IWebsessionManager_logoffResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ICPUExecutionCapChangedEvent-->
-      <!-- readonly attribute ICPUExecutionCapChangedEvent::executionCap-->
-      <xsd:element name="ICPUExecutionCapChangedEvent_getExecutionCap">
+      <!--Interface IPerformanceMetric-->
+      <!-- readonly attribute IPerformanceMetric::metricName-->
+      <xsd:element name="IPerformanceMetric_getMetricName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ICPUExecutionCapChangedEvent_getExecutionCapResponse">
+      <xsd:element name="IPerformanceMetric_getMetricNameResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestKeyboardEvent-->
-      <!-- readonly attribute IGuestKeyboardEvent::scancodes-->
-      <xsd:element name="IGuestKeyboardEvent_getScancodes">
+      <!-- readonly attribute IPerformanceMetric::object-->
+      <xsd:element name="IPerformanceMetric_getObject">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestKeyboardEvent_getScancodesResponse">
+      <xsd:element name="IPerformanceMetric_getObjectResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestMouseEvent-->
-      <!-- readonly attribute IGuestMouseEvent::mode-->
-      <xsd:element name="IGuestMouseEvent_getMode">
+      <!-- readonly attribute IPerformanceMetric::description-->
+      <xsd:element name="IPerformanceMetric_getDescription">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getModeResponse">
+      <xsd:element name="IPerformanceMetric_getDescriptionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestMouseEventMode"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMouseEvent::x-->
-      <xsd:element name="IGuestMouseEvent_getX">
+      <!-- readonly attribute IPerformanceMetric::period-->
+      <xsd:element name="IPerformanceMetric_getPeriod">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getXResponse">
+      <xsd:element name="IPerformanceMetric_getPeriodResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMouseEvent::y-->
-      <xsd:element name="IGuestMouseEvent_getY">
+      <!-- readonly attribute IPerformanceMetric::count-->
+      <xsd:element name="IPerformanceMetric_getCount">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getYResponse">
+      <xsd:element name="IPerformanceMetric_getCountResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMouseEvent::z-->
-      <xsd:element name="IGuestMouseEvent_getZ">
+      <!-- readonly attribute IPerformanceMetric::unit-->
+      <xsd:element name="IPerformanceMetric_getUnit">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getZResponse">
+      <xsd:element name="IPerformanceMetric_getUnitResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMouseEvent::w-->
-      <xsd:element name="IGuestMouseEvent_getW">
+      <!-- readonly attribute IPerformanceMetric::minimumValue-->
+      <xsd:element name="IPerformanceMetric_getMinimumValue">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getWResponse">
+      <xsd:element name="IPerformanceMetric_getMinimumValueResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMouseEvent::buttons-->
-      <xsd:element name="IGuestMouseEvent_getButtons">
+      <!-- readonly attribute IPerformanceMetric::maximumValue-->
+      <xsd:element name="IPerformanceMetric_getMaximumValue">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMouseEvent_getButtonsResponse">
+      <xsd:element name="IPerformanceMetric_getMaximumValueResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestMultiTouchEvent-->
-      <!-- readonly attribute IGuestMultiTouchEvent::contactCount-->
-      <xsd:element name="IGuestMultiTouchEvent_getContactCount">
+      <!--Interface IPerformanceCollector-->
+      <!-- readonly attribute IPerformanceCollector::metricNames-->
+      <xsd:element name="IPerformanceCollector_getMetricNames">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getContactCountResponse">
+      <xsd:element name="IPerformanceCollector_getMetricNamesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMultiTouchEvent::xPositions-->
-      <xsd:element name="IGuestMultiTouchEvent_getXPositions">
+      <!-- method IPerformanceCollector::getMetrics-->
+      <xsd:element name="IPerformanceCollector_getMetrics">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getXPositionsResponse">
+      <xsd:element name="IPerformanceCollector_getMetricsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:short"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMultiTouchEvent::yPositions-->
-      <xsd:element name="IGuestMultiTouchEvent_getYPositions">
+      <!-- method IPerformanceCollector::setupMetrics-->
+      <xsd:element name="IPerformanceCollector_setupMetrics">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="period" type="xsd:unsignedInt"/>
+            <xsd:element name="count" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getYPositionsResponse">
+      <xsd:element name="IPerformanceCollector_setupMetricsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:short"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMultiTouchEvent::contactIds-->
-      <xsd:element name="IGuestMultiTouchEvent_getContactIds">
+      <!-- method IPerformanceCollector::enableMetrics-->
+      <xsd:element name="IPerformanceCollector_enableMetrics">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getContactIdsResponse">
+      <xsd:element name="IPerformanceCollector_enableMetricsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMultiTouchEvent::contactFlags-->
-      <xsd:element name="IGuestMultiTouchEvent_getContactFlags">
+      <!-- method IPerformanceCollector::disableMetrics-->
+      <xsd:element name="IPerformanceCollector_disableMetrics">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getContactFlagsResponse">
+      <xsd:element name="IPerformanceCollector_disableMetricsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedShort"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMultiTouchEvent::scanTime-->
-      <xsd:element name="IGuestMultiTouchEvent_getScanTime">
-        <xsd:complexType>
+      <!-- method IPerformanceCollector::queryMetricsData-->
+      <xsd:element name="IPerformanceCollector_queryMetricsData">
+        <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="metricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="objects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMultiTouchEvent_getScanTimeResponse">
+      <xsd:element name="IPerformanceCollector_queryMetricsDataResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnMetricNames" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnObjects" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnUnits" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnScales" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
+            <xsd:element name="returnSequenceNumbers" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
+            <xsd:element name="returnDataIndices" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
+            <xsd:element name="returnDataLengths" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestSessionEvent-->
-      <!-- readonly attribute IGuestSessionEvent::session-->
-      <xsd:element name="IGuestSessionEvent_getSession">
+      <!--Interface INATEngine-->
+      <!-- read/write attribute INATEngine::network-->
+      <xsd:element name="INATEngine_getNetwork">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSessionEvent_getSessionResponse">
+      <xsd:element name="INATEngine_getNetworkResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestSessionStateChangedEvent-->
-      <!-- readonly attribute IGuestSessionStateChangedEvent::id-->
-      <xsd:element name="IGuestSessionStateChangedEvent_getId">
+      <xsd:element name="INATEngine_setNetwork">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="network" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSessionStateChangedEvent_getIdResponse">
+      <xsd:element name="INATEngine_setNetworkResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute INATEngine::hostIP-->
+      <xsd:element name="INATEngine_getHostIP">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSessionStateChangedEvent::status-->
-      <xsd:element name="IGuestSessionStateChangedEvent_getStatus">
+      <xsd:element name="INATEngine_getHostIPResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSessionStateChangedEvent_getStatusResponse">
+      <xsd:element name="INATEngine_setHostIP">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestSessionStatus"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="hostIP" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestSessionStateChangedEvent::error-->
-      <xsd:element name="IGuestSessionStateChangedEvent_getError">
+      <xsd:element name="INATEngine_setHostIPResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- read/write attribute INATEngine::TFTPPrefix-->
+      <xsd:element name="INATEngine_getTFTPPrefix">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSessionStateChangedEvent_getErrorResponse">
+      <xsd:element name="INATEngine_getTFTPPrefixResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestSessionRegisteredEvent-->
-      <!-- readonly attribute IGuestSessionRegisteredEvent::registered-->
-      <xsd:element name="IGuestSessionRegisteredEvent_getRegistered">
+      <xsd:element name="INATEngine_setTFTPPrefix">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="TFTPPrefix" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestSessionRegisteredEvent_getRegisteredResponse">
+      <xsd:element name="INATEngine_setTFTPPrefixResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessEvent-->
-      <!-- readonly attribute IGuestProcessEvent::process-->
-      <xsd:element name="IGuestProcessEvent_getProcess">
+      <!-- read/write attribute INATEngine::TFTPBootFile-->
+      <xsd:element name="INATEngine_getTFTPBootFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessEvent_getProcessResponse">
+      <xsd:element name="INATEngine_getTFTPBootFileResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestProcessEvent::pid-->
-      <xsd:element name="IGuestProcessEvent_getPid">
+      <xsd:element name="INATEngine_setTFTPBootFile">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="TFTPBootFile" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessEvent_getPidResponse">
+      <xsd:element name="INATEngine_setTFTPBootFileResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessRegisteredEvent-->
-      <!-- readonly attribute IGuestProcessRegisteredEvent::registered-->
-      <xsd:element name="IGuestProcessRegisteredEvent_getRegistered">
+      <!-- read/write attribute INATEngine::TFTPNextServer-->
+      <xsd:element name="INATEngine_getTFTPNextServer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessRegisteredEvent_getRegisteredResponse">
+      <xsd:element name="INATEngine_getTFTPNextServerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessStateChangedEvent-->
-      <!-- readonly attribute IGuestProcessStateChangedEvent::status-->
-      <xsd:element name="IGuestProcessStateChangedEvent_getStatus">
+      <xsd:element name="INATEngine_setTFTPNextServer">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="TFTPNextServer" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessStateChangedEvent_getStatusResponse">
+      <xsd:element name="INATEngine_setTFTPNextServerResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ProcessStatus"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestProcessStateChangedEvent::error-->
-      <xsd:element name="IGuestProcessStateChangedEvent_getError">
+      <!-- read/write attribute INATEngine::aliasMode-->
+      <xsd:element name="INATEngine_getAliasMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessStateChangedEvent_getErrorResponse">
+      <xsd:element name="INATEngine_getAliasModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessIOEvent-->
-      <!-- readonly attribute IGuestProcessIOEvent::handle-->
-      <xsd:element name="IGuestProcessIOEvent_getHandle">
+      <xsd:element name="INATEngine_setAliasMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="aliasMode" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessIOEvent_getHandleResponse">
+      <xsd:element name="INATEngine_setAliasModeResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestProcessIOEvent::processed-->
-      <xsd:element name="IGuestProcessIOEvent_getProcessed">
+      <!-- read/write attribute INATEngine::DNSPassDomain-->
+      <xsd:element name="INATEngine_getDNSPassDomain">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessIOEvent_getProcessedResponse">
+      <xsd:element name="INATEngine_getDNSPassDomainResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessInputNotifyEvent-->
-      <!-- readonly attribute IGuestProcessInputNotifyEvent::status-->
-      <xsd:element name="IGuestProcessInputNotifyEvent_getStatus">
+      <xsd:element name="INATEngine_setDNSPassDomain">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="DNSPassDomain" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessInputNotifyEvent_getStatusResponse">
+      <xsd:element name="INATEngine_setDNSPassDomainResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:ProcessInputStatus"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestProcessOutputEvent-->
-      <!-- readonly attribute IGuestProcessOutputEvent::data-->
-      <xsd:element name="IGuestProcessOutputEvent_getData">
+      <!-- read/write attribute INATEngine::DNSProxy-->
+      <xsd:element name="INATEngine_getDNSProxy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestProcessOutputEvent_getDataResponse">
+      <xsd:element name="INATEngine_getDNSProxyResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileEvent-->
-      <!-- readonly attribute IGuestFileEvent::file-->
-      <xsd:element name="IGuestFileEvent_getFile">
+      <xsd:element name="INATEngine_setDNSProxy">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="DNSProxy" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileEvent_getFileResponse">
+      <xsd:element name="INATEngine_setDNSProxyResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileRegisteredEvent-->
-      <!-- readonly attribute IGuestFileRegisteredEvent::registered-->
-      <xsd:element name="IGuestFileRegisteredEvent_getRegistered">
+      <!-- read/write attribute INATEngine::DNSUseHostResolver-->
+      <xsd:element name="INATEngine_getDNSUseHostResolver">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileRegisteredEvent_getRegisteredResponse">
+      <xsd:element name="INATEngine_getDNSUseHostResolverResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileStateChangedEvent-->
-      <!-- readonly attribute IGuestFileStateChangedEvent::status-->
-      <xsd:element name="IGuestFileStateChangedEvent_getStatus">
+      <xsd:element name="INATEngine_setDNSUseHostResolver">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="DNSUseHostResolver" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileStateChangedEvent_getStatusResponse">
+      <xsd:element name="INATEngine_setDNSUseHostResolverResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:FileStatus"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestFileStateChangedEvent::error-->
-      <xsd:element name="IGuestFileStateChangedEvent_getError">
+      <!-- readonly attribute INATEngine::redirects-->
+      <xsd:element name="INATEngine_getRedirects">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileStateChangedEvent_getErrorResponse">
+      <xsd:element name="INATEngine_getRedirectsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileIOEvent-->
-      <!-- readonly attribute IGuestFileIOEvent::offset-->
-      <xsd:element name="IGuestFileIOEvent_getOffset">
+      <!-- method INATEngine::setNetworkSettings-->
+      <xsd:element name="INATEngine_setNetworkSettings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="mtu" type="xsd:unsignedInt"/>
+            <xsd:element name="sockSnd" type="xsd:unsignedInt"/>
+            <xsd:element name="sockRcv" type="xsd:unsignedInt"/>
+            <xsd:element name="TcpWndSnd" type="xsd:unsignedInt"/>
+            <xsd:element name="TcpWndRcv" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileIOEvent_getOffsetResponse">
+      <xsd:element name="INATEngine_setNetworkSettingsResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestFileIOEvent::processed-->
-      <xsd:element name="IGuestFileIOEvent_getProcessed">
+      <!-- method INATEngine::getNetworkSettings-->
+      <xsd:element name="INATEngine_getNetworkSettings">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileIOEvent_getProcessedResponse">
+      <xsd:element name="INATEngine_getNetworkSettingsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="mtu" type="xsd:unsignedInt"/>
+            <xsd:element name="sockSnd" type="xsd:unsignedInt"/>
+            <xsd:element name="sockRcv" type="xsd:unsignedInt"/>
+            <xsd:element name="TcpWndSnd" type="xsd:unsignedInt"/>
+            <xsd:element name="TcpWndRcv" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileOffsetChangedEvent-->
-      <!-- readonly attribute IGuestFileOffsetChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- method INATEngine::addRedirect-->
+      <xsd:element name="INATEngine_addRedirect">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="proto" type="vbox:NATProtocol"/>
+            <xsd:element name="hostIP" type="xsd:string"/>
+            <xsd:element name="hostPort" type="xsd:unsignedShort"/>
+            <xsd:element name="guestIP" type="xsd:string"/>
+            <xsd:element name="guestPort" type="xsd:unsignedShort"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="INATEngine_addRedirectResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method INATEngine::removeRedirect-->
+      <xsd:element name="INATEngine_removeRedirect">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileReadEvent-->
-      <!-- readonly attribute IGuestFileReadEvent::data-->
-      <xsd:element name="IGuestFileReadEvent_getData">
+      <xsd:element name="INATEngine_removeRedirectResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IBandwidthGroup-->
+      <!-- readonly attribute IBandwidthGroup::name-->
+      <xsd:element name="IBandwidthGroup_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileReadEvent_getDataResponse">
+      <xsd:element name="IBandwidthGroup_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestFileWriteEvent-->
-      <!-- readonly attribute IGuestFileWriteEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute IBandwidthGroup::type-->
+      <xsd:element name="IBandwidthGroup_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IBandwidthGroup_getTypeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:BandwidthGroupType"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVRDEServerChangedEvent-->
-      <!-- readonly attribute IVRDEServerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute IBandwidthGroup::reference-->
+      <xsd:element name="IBandwidthGroup_getReference">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IBandwidthGroup_getReferenceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVRDEServerInfoChangedEvent-->
-      <!-- readonly attribute IVRDEServerInfoChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- read/write attribute IBandwidthGroup::maxBytesPerSec-->
+      <xsd:element name="IBandwidthGroup_getMaxBytesPerSec">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IBandwidthGroup_getMaxBytesPerSecResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVideoCaptureChangedEvent-->
-      <!-- readonly attribute IVideoCaptureChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <xsd:element name="IBandwidthGroup_setMaxBytesPerSec">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="maxBytesPerSec" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IBandwidthGroup_setMaxBytesPerSecResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBControllerChangedEvent-->
-      <!-- readonly attribute IUSBControllerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface IBandwidthControl-->
+      <!-- readonly attribute IBandwidthControl::numGroups-->
+      <xsd:element name="IBandwidthControl_getNumGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IBandwidthControl_getNumGroupsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IUSBDeviceStateChangedEvent-->
-      <!-- readonly attribute IUSBDeviceStateChangedEvent::device-->
-      <xsd:element name="IUSBDeviceStateChangedEvent_getDevice">
+      <!-- method IBandwidthControl::createBandwidthGroup-->
+      <xsd:element name="IBandwidthControl_createBandwidthGroup">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
+            <xsd:element name="type" type="vbox:BandwidthGroupType"/>
+            <xsd:element name="maxBytesPerSec" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceStateChangedEvent_getDeviceResponse">
+      <xsd:element name="IBandwidthControl_createBandwidthGroupResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDeviceStateChangedEvent::attached-->
-      <xsd:element name="IUSBDeviceStateChangedEvent_getAttached">
+      <!-- method IBandwidthControl::deleteBandwidthGroup-->
+      <xsd:element name="IBandwidthControl_deleteBandwidthGroup">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceStateChangedEvent_getAttachedResponse">
+      <xsd:element name="IBandwidthControl_deleteBandwidthGroupResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IUSBDeviceStateChangedEvent::error-->
-      <xsd:element name="IUSBDeviceStateChangedEvent_getError">
+      <!-- method IBandwidthControl::getBandwidthGroup-->
+      <xsd:element name="IBandwidthControl_getBandwidthGroup">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="name" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IUSBDeviceStateChangedEvent_getErrorResponse">
+      <xsd:element name="IBandwidthControl_getBandwidthGroupResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ISharedFolderChangedEvent-->
-      <!-- readonly attribute ISharedFolderChangedEvent::scope-->
-      <xsd:element name="ISharedFolderChangedEvent_getScope">
+      <!-- method IBandwidthControl::getAllBandwidthGroups-->
+      <xsd:element name="IBandwidthControl_getAllBandwidthGroups">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ISharedFolderChangedEvent_getScopeResponse">
+      <xsd:element name="IBandwidthControl_getAllBandwidthGroupsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:Scope"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IRuntimeErrorEvent-->
-      <!-- readonly attribute IRuntimeErrorEvent::fatal-->
-      <xsd:element name="IRuntimeErrorEvent_getFatal">
+      <!--Interface IEventSource-->
+      <!-- method IEventSource::createListener-->
+      <xsd:element name="IEventSource_createListener">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IRuntimeErrorEvent_getFatalResponse">
+      <xsd:element name="IEventSource_createListenerResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IRuntimeErrorEvent::id-->
-      <xsd:element name="IRuntimeErrorEvent_getId">
+      <!-- method IEventSource::createAggregator-->
+      <xsd:element name="IEventSource_createAggregator">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="subordinates" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IRuntimeErrorEvent_getIdResponse">
+      <xsd:element name="IEventSource_createAggregatorResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IRuntimeErrorEvent::message-->
-      <xsd:element name="IRuntimeErrorEvent_getMessage">
+      <!-- method IEventSource::registerListener-->
+      <xsd:element name="IEventSource_registerListener">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="listener" type="xsd:string"/>
+            <xsd:element name="interesting" minOccurs="0" maxOccurs="unbounded" type="vbox:VBoxEventType"/>
+            <xsd:element name="active" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IRuntimeErrorEvent_getMessageResponse">
+      <xsd:element name="IEventSource_registerListenerResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IEventSourceChangedEvent-->
-      <!-- readonly attribute IEventSourceChangedEvent::listener-->
-      <xsd:element name="IEventSourceChangedEvent_getListener">
+      <!-- method IEventSource::unregisterListener-->
+      <xsd:element name="IEventSource_unregisterListener">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="listener" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSourceChangedEvent_getListenerResponse">
+      <xsd:element name="IEventSource_unregisterListenerResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IEventSourceChangedEvent::add-->
-      <xsd:element name="IEventSourceChangedEvent_getAdd">
+      <!-- method IEventSource::fireEvent-->
+      <xsd:element name="IEventSource_fireEvent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="event" type="xsd:string"/>
+            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IEventSourceChangedEvent_getAddResponse">
+      <xsd:element name="IEventSource_fireEventResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IExtraDataChangedEvent-->
-      <!-- readonly attribute IExtraDataChangedEvent::machineId-->
-      <xsd:element name="IExtraDataChangedEvent_getMachineId">
+      <!-- method IEventSource::getEvent-->
+      <xsd:element name="IEventSource_getEvent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="listener" type="xsd:string"/>
+            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataChangedEvent_getMachineIdResponse">
+      <xsd:element name="IEventSource_getEventResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IExtraDataChangedEvent::key-->
-      <xsd:element name="IExtraDataChangedEvent_getKey">
+      <!-- method IEventSource::eventProcessed-->
+      <xsd:element name="IEventSource_eventProcessed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="listener" type="xsd:string"/>
+            <xsd:element name="event" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataChangedEvent_getKeyResponse">
+      <xsd:element name="IEventSource_eventProcessedResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IExtraDataChangedEvent::value-->
-      <xsd:element name="IExtraDataChangedEvent_getValue">
+      <!--Interface IEventListener-->
+      <!-- method IEventListener::handleEvent-->
+      <xsd:element name="IEventListener_handleEvent">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="event" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataChangedEvent_getValueResponse">
+      <xsd:element name="IEventListener_handleEventResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVetoEvent-->
-      <!-- method IVetoEvent::addVeto-->
-      <xsd:element name="IVetoEvent_addVeto">
+      <!--Interface IEvent-->
+      <!-- readonly attribute IEvent::type-->
+      <xsd:element name="IEvent_getType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="reason" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_addVetoResponse">
+      <xsd:element name="IEvent_getTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:VBoxEventType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVetoEvent::isVetoed-->
-      <xsd:element name="IVetoEvent_isVetoed">
+      <!-- readonly attribute IEvent::source-->
+      <xsd:element name="IEvent_getSource">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_isVetoedResponse">
+      <xsd:element name="IEvent_getSourceResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVetoEvent::getVetos-->
-      <xsd:element name="IVetoEvent_getVetos">
+      <!-- readonly attribute IEvent::waitable-->
+      <xsd:element name="IEvent_getWaitable">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_getVetosResponse">
+      <xsd:element name="IEvent_getWaitableResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVetoEvent::addApproval-->
-      <xsd:element name="IVetoEvent_addApproval">
+      <!-- method IEvent::setProcessed-->
+      <xsd:element name="IEvent_setProcessed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="reason" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_addApprovalResponse">
+      <xsd:element name="IEvent_setProcessedResponse">
         <xsd:complexType>
           <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVetoEvent::isApproved-->
-      <xsd:element name="IVetoEvent_isApproved">
+      <!-- method IEvent::waitProcessed-->
+      <xsd:element name="IEvent_waitProcessed">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="timeout" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_isApprovedResponse">
+      <xsd:element name="IEvent_waitProcessedResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- method IVetoEvent::getApprovals-->
-      <xsd:element name="IVetoEvent_getApprovals">
+      <!--Interface IReusableEvent-->
+      <!-- readonly attribute IReusableEvent::generation-->
+      <xsd:element name="IReusableEvent_getGeneration">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVetoEvent_getApprovalsResponse">
+      <xsd:element name="IReusableEvent_getGenerationResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IExtraDataCanChangeEvent-->
-      <!-- readonly attribute IExtraDataCanChangeEvent::machineId-->
-      <xsd:element name="IExtraDataCanChangeEvent_getMachineId">
+      <!-- method IReusableEvent::reuse-->
+      <xsd:element name="IReusableEvent_reuse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataCanChangeEvent_getMachineIdResponse">
+      <xsd:element name="IReusableEvent_reuseResponse">
         <xsd:complexType>
-          <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
-          </xsd:sequence>
+          <xsd:sequence/>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IExtraDataCanChangeEvent::key-->
-      <xsd:element name="IExtraDataCanChangeEvent_getKey">
+      <!--Interface IMachineEvent-->
+      <!-- readonly attribute IMachineEvent::machineId-->
+      <xsd:element name="IMachineEvent_getMachineId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataCanChangeEvent_getKeyResponse">
+      <xsd:element name="IMachineEvent_getMachineIdResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IExtraDataCanChangeEvent::value-->
-      <xsd:element name="IExtraDataCanChangeEvent_getValue">
+      <!--Interface IMachineStateChangedEvent-->
+      <!-- readonly attribute IMachineStateChangedEvent::state-->
+      <xsd:element name="IMachineStateChangedEvent_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IExtraDataCanChangeEvent_getValueResponse">
+      <xsd:element name="IMachineStateChangedEvent_getStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:MachineState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface ICanShowWindowEvent-->
-      <!-- readonly attribute ICanShowWindowEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface IMachineDataChangedEvent-->
+      <!-- readonly attribute IMachineDataChangedEvent::temporary-->
+      <xsd:element name="IMachineDataChangedEvent_getTemporary">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IMachineDataChangedEvent_getTemporaryResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IShowWindowEvent-->
-      <!-- read/write attribute IShowWindowEvent::winId-->
-      <xsd:element name="IShowWindowEvent_getWinId">
+      <!--Interface IMediumRegisteredEvent-->
+      <!-- readonly attribute IMediumRegisteredEvent::mediumId-->
+      <xsd:element name="IMediumRegisteredEvent_getMediumId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IShowWindowEvent_getWinIdResponse">
+      <xsd:element name="IMediumRegisteredEvent_getMediumIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:long"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IShowWindowEvent_setWinId">
+      <!-- readonly attribute IMediumRegisteredEvent::mediumType-->
+      <xsd:element name="IMediumRegisteredEvent_getMediumType">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
-            <xsd:element name="winId" type="xsd:long"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IShowWindowEvent_setWinIdResponse">
+      <xsd:element name="IMediumRegisteredEvent_getMediumTypeResponse">
         <xsd:complexType>
-          <xsd:sequence/>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:DeviceType"/>
+          </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATRedirectEvent-->
-      <!-- readonly attribute INATRedirectEvent::slot-->
-      <xsd:element name="INATRedirectEvent_getSlot">
+      <!-- readonly attribute IMediumRegisteredEvent::registered-->
+      <xsd:element name="IMediumRegisteredEvent_getRegistered">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getSlotResponse">
+      <xsd:element name="IMediumRegisteredEvent_getRegisteredResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::remove-->
-      <xsd:element name="INATRedirectEvent_getRemove">
+      <!--Interface IMediumConfigChangedEvent-->
+      <!-- readonly attribute IMediumConfigChangedEvent::medium-->
+      <xsd:element name="IMediumConfigChangedEvent_getMedium">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getRemoveResponse">
+      <xsd:element name="IMediumConfigChangedEvent_getMediumResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::name-->
-      <xsd:element name="INATRedirectEvent_getName">
+      <!--Interface IMachineRegisteredEvent-->
+      <!-- readonly attribute IMachineRegisteredEvent::registered-->
+      <xsd:element name="IMachineRegisteredEvent_getRegistered">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getNameResponse">
+      <xsd:element name="IMachineRegisteredEvent_getRegisteredResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::proto-->
-      <xsd:element name="INATRedirectEvent_getProto">
+      <!--Interface ISessionStateChangedEvent-->
+      <!-- readonly attribute ISessionStateChangedEvent::state-->
+      <xsd:element name="ISessionStateChangedEvent_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getProtoResponse">
+      <xsd:element name="ISessionStateChangedEvent_getStateResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:NATProtocol"/>
+            <xsd:element name="returnval" type="vbox:SessionState"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::hostIP-->
-      <xsd:element name="INATRedirectEvent_getHostIP">
+      <!--Interface IGuestPropertyChangedEvent-->
+      <!-- readonly attribute IGuestPropertyChangedEvent::name-->
+      <xsd:element name="IGuestPropertyChangedEvent_getName">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getHostIPResponse">
+      <xsd:element name="IGuestPropertyChangedEvent_getNameResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::hostPort-->
-      <xsd:element name="INATRedirectEvent_getHostPort">
+      <!-- readonly attribute IGuestPropertyChangedEvent::value-->
+      <xsd:element name="IGuestPropertyChangedEvent_getValue">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getHostPortResponse">
+      <xsd:element name="IGuestPropertyChangedEvent_getValueResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::guestIP-->
-      <xsd:element name="INATRedirectEvent_getGuestIP">
+      <!-- readonly attribute IGuestPropertyChangedEvent::flags-->
+      <xsd:element name="IGuestPropertyChangedEvent_getFlags">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getGuestIPResponse">
+      <xsd:element name="IGuestPropertyChangedEvent_getFlagsResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATRedirectEvent::guestPort-->
-      <xsd:element name="INATRedirectEvent_getGuestPort">
+      <!--Interface ISnapshotEvent-->
+      <!-- readonly attribute ISnapshotEvent::snapshotId-->
+      <xsd:element name="ISnapshotEvent_getSnapshotId">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATRedirectEvent_getGuestPortResponse">
+      <xsd:element name="ISnapshotEvent_getSnapshotIdResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostPCIDevicePlugEvent-->
-      <!-- readonly attribute IHostPCIDevicePlugEvent::plugged-->
-      <xsd:element name="IHostPCIDevicePlugEvent_getPlugged">
+      <!--Interface ISnapshotTakenEvent-->
+      <!-- readonly attribute ISnapshotTakenEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostPCIDevicePlugEvent_getPluggedResponse">
+      <xsd:element name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostPCIDevicePlugEvent::success-->
-      <xsd:element name="IHostPCIDevicePlugEvent_getSuccess">
+      <!--Interface ISnapshotDeletedEvent-->
+      <!-- readonly attribute ISnapshotDeletedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostPCIDevicePlugEvent_getSuccessResponse">
+      <xsd:element name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostPCIDevicePlugEvent::attachment-->
-      <xsd:element name="IHostPCIDevicePlugEvent_getAttachment">
+      <!--Interface ISnapshotRestoredEvent-->
+      <!-- readonly attribute ISnapshotRestoredEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostPCIDevicePlugEvent_getAttachmentResponse">
+      <xsd:element name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:IPCIDeviceAttachment"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IHostPCIDevicePlugEvent::message-->
-      <xsd:element name="IHostPCIDevicePlugEvent_getMessage">
+      <!--Interface ISnapshotChangedEvent-->
+      <!-- readonly attribute ISnapshotChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostPCIDevicePlugEvent_getMessageResponse">
+      <xsd:element name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IVBoxSVCAvailabilityChangedEvent-->
-      <!-- readonly attribute IVBoxSVCAvailabilityChangedEvent::available-->
-      <xsd:element name="IVBoxSVCAvailabilityChangedEvent_getAvailable">
+      <!--Interface IMousePointerShapeChangedEvent-->
+      <!-- readonly attribute IMousePointerShapeChangedEvent::visible-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getVisible">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IVBoxSVCAvailabilityChangedEvent_getAvailableResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getVisibleResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IBandwidthGroupChangedEvent-->
-      <!-- readonly attribute IBandwidthGroupChangedEvent::bandwidthGroup-->
-      <xsd:element name="IBandwidthGroupChangedEvent_getBandwidthGroup">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::alpha-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getAlpha">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IBandwidthGroupChangedEvent_getBandwidthGroupResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getAlphaResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestMonitorChangedEvent-->
-      <!-- readonly attribute IGuestMonitorChangedEvent::changeType-->
-      <xsd:element name="IGuestMonitorChangedEvent_getChangeType">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::xhot-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getXhot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getChangeTypeResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getXhotResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestMonitorChangedEventType"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMonitorChangedEvent::screenId-->
-      <xsd:element name="IGuestMonitorChangedEvent_getScreenId">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::yhot-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getYhot">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getScreenIdResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getYhotResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMonitorChangedEvent::originX-->
-      <xsd:element name="IGuestMonitorChangedEvent_getOriginX">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::width-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getWidth">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getOriginXResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getWidthResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMonitorChangedEvent::originY-->
-      <xsd:element name="IGuestMonitorChangedEvent_getOriginY">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::height-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getHeight">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getOriginYResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getHeightResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMonitorChangedEvent::width-->
-      <xsd:element name="IGuestMonitorChangedEvent_getWidth">
+      <!-- readonly attribute IMousePointerShapeChangedEvent::shape-->
+      <xsd:element name="IMousePointerShapeChangedEvent_getShape">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getWidthResponse">
+      <xsd:element name="IMousePointerShapeChangedEvent_getShapeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestMonitorChangedEvent::height-->
-      <xsd:element name="IGuestMonitorChangedEvent_getHeight">
+      <!--Interface IMouseCapabilityChangedEvent-->
+      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsAbsolute-->
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsAbsolute">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestMonitorChangedEvent_getHeightResponse">
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsAbsoluteResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IGuestUserStateChangedEvent-->
-      <!-- readonly attribute IGuestUserStateChangedEvent::name-->
-      <xsd:element name="IGuestUserStateChangedEvent_getName">
+      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsRelative-->
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsRelative">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestUserStateChangedEvent_getNameResponse">
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsRelativeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestUserStateChangedEvent::domain-->
-      <xsd:element name="IGuestUserStateChangedEvent_getDomain">
+      <!-- readonly attribute IMouseCapabilityChangedEvent::supportsMultiTouch-->
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsMultiTouch">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestUserStateChangedEvent_getDomainResponse">
+      <xsd:element name="IMouseCapabilityChangedEvent_getSupportsMultiTouchResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestUserStateChangedEvent::state-->
-      <xsd:element name="IGuestUserStateChangedEvent_getState">
+      <!-- readonly attribute IMouseCapabilityChangedEvent::needsHostCursor-->
+      <xsd:element name="IMouseCapabilityChangedEvent_getNeedsHostCursor">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestUserStateChangedEvent_getStateResponse">
+      <xsd:element name="IMouseCapabilityChangedEvent_getNeedsHostCursorResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:GuestUserState"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IGuestUserStateChangedEvent::stateDetails-->
-      <xsd:element name="IGuestUserStateChangedEvent_getStateDetails">
+      <!--Interface IKeyboardLedsChangedEvent-->
+      <!-- readonly attribute IKeyboardLedsChangedEvent::numLock-->
+      <xsd:element name="IKeyboardLedsChangedEvent_getNumLock">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IGuestUserStateChangedEvent_getStateDetailsResponse">
+      <xsd:element name="IKeyboardLedsChangedEvent_getNumLockResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IStorageDeviceChangedEvent-->
-      <!-- readonly attribute IStorageDeviceChangedEvent::storageDevice-->
-      <xsd:element name="IStorageDeviceChangedEvent_getStorageDevice">
+      <!-- readonly attribute IKeyboardLedsChangedEvent::capsLock-->
+      <xsd:element name="IKeyboardLedsChangedEvent_getCapsLock">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageDeviceChangedEvent_getStorageDeviceResponse">
+      <xsd:element name="IKeyboardLedsChangedEvent_getCapsLockResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
+            <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageDeviceChangedEvent::removed-->
-      <xsd:element name="IStorageDeviceChangedEvent_getRemoved">
+      <!-- readonly attribute IKeyboardLedsChangedEvent::scrollLock-->
+      <xsd:element name="IKeyboardLedsChangedEvent_getScrollLock">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageDeviceChangedEvent_getRemovedResponse">
+      <xsd:element name="IKeyboardLedsChangedEvent_getScrollLockResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute IStorageDeviceChangedEvent::silent-->
-      <xsd:element name="IStorageDeviceChangedEvent_getSilent">
+      <!--Interface IStateChangedEvent-->
+      <!-- readonly attribute IStateChangedEvent::state-->
+      <xsd:element name="IStateChangedEvent_getState">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IStorageDeviceChangedEvent_getSilentResponse">
+      <xsd:element name="IStateChangedEvent_getStateResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:MachineState"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IAdditionsStateChangedEvent-->
+      <!-- readonly attribute IAdditionsStateChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkChangedEvent-->
-      <!-- readonly attribute INATNetworkChangedEvent::networkName-->
-      <xsd:element name="INATNetworkChangedEvent_getNetworkName">
+      <!--Interface INetworkAdapterChangedEvent-->
+      <!-- readonly attribute INetworkAdapterChangedEvent::networkAdapter-->
+      <xsd:element name="INetworkAdapterChangedEvent_getNetworkAdapter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkChangedEvent_getNetworkNameResponse">
+      <xsd:element name="INetworkAdapterChangedEvent_getNetworkAdapterResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkStartStopEvent-->
-      <!-- readonly attribute INATNetworkStartStopEvent::startEvent-->
-      <xsd:element name="INATNetworkStartStopEvent_getStartEvent">
+      <!--Interface IAudioAdapterChangedEvent-->
+      <!-- readonly attribute IAudioAdapterChangedEvent::audioAdapter-->
+      <xsd:element name="IAudioAdapterChangedEvent_getAudioAdapter">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkStartStopEvent_getStartEventResponse">
+      <xsd:element name="IAudioAdapterChangedEvent_getAudioAdapterResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkAlterEvent-->
-      <!-- readonly attribute INATNetworkAlterEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!--Interface ISerialPortChangedEvent-->
+      <!-- readonly attribute ISerialPortChangedEvent::serialPort-->
+      <xsd:element name="ISerialPortChangedEvent_getSerialPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="ISerialPortChangedEvent_getSerialPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkCreationDeletionEvent-->
-      <!-- readonly attribute INATNetworkCreationDeletionEvent::creationEvent-->
-      <xsd:element name="INATNetworkCreationDeletionEvent_getCreationEvent">
+      <!--Interface IParallelPortChangedEvent-->
+      <!-- readonly attribute IParallelPortChangedEvent::parallelPort-->
+      <xsd:element name="IParallelPortChangedEvent_getParallelPort">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkCreationDeletionEvent_getCreationEventResponse">
+      <xsd:element name="IParallelPortChangedEvent_getParallelPortResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkSettingEvent-->
-      <!-- readonly attribute INATNetworkSettingEvent::enabled-->
-      <xsd:element name="INATNetworkSettingEvent_getEnabled">
+      <!--Interface IStorageControllerChangedEvent-->
+      <!-- readonly attribute IStorageControllerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkSettingEvent_getEnabledResponse">
+      <xsd:element name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkSettingEvent::network-->
-      <xsd:element name="INATNetworkSettingEvent_getNetwork">
+      <!--Interface IMediumChangedEvent-->
+      <!-- readonly attribute IMediumChangedEvent::mediumAttachment-->
+      <xsd:element name="IMediumChangedEvent_getMediumAttachment">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkSettingEvent_getNetworkResponse">
+      <xsd:element name="IMediumChangedEvent_getMediumAttachmentResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkSettingEvent::gateway-->
-      <xsd:element name="INATNetworkSettingEvent_getGateway">
+      <!--Interface IClipboardModeChangedEvent-->
+      <!-- readonly attribute IClipboardModeChangedEvent::clipboardMode-->
+      <xsd:element name="IClipboardModeChangedEvent_getClipboardMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkSettingEvent_getGatewayResponse">
+      <xsd:element name="IClipboardModeChangedEvent_getClipboardModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="vbox:ClipboardMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkSettingEvent::advertiseDefaultIPv6RouteEnabled-->
-      <xsd:element name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled">
+      <!--Interface IDnDModeChangedEvent-->
+      <!-- readonly attribute IDnDModeChangedEvent::dndMode-->
+      <xsd:element name="IDnDModeChangedEvent_getDndMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResponse">
+      <xsd:element name="IDnDModeChangedEvent_getDndModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="vbox:DnDMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkSettingEvent::needDhcpServer-->
-      <xsd:element name="INATNetworkSettingEvent_getNeedDhcpServer">
+      <!--Interface ICPUChangedEvent-->
+      <!-- readonly attribute ICPUChangedEvent::CPU-->
+      <xsd:element name="ICPUChangedEvent_getCPU">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkSettingEvent_getNeedDhcpServerResponse">
+      <xsd:element name="ICPUChangedEvent_getCPUResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface INATNetworkPortForwardEvent-->
-      <!-- readonly attribute INATNetworkPortForwardEvent::create-->
-      <xsd:element name="INATNetworkPortForwardEvent_getCreate">
+      <!-- readonly attribute ICPUChangedEvent::add-->
+      <xsd:element name="ICPUChangedEvent_getAdd">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getCreateResponse">
+      <xsd:element name="ICPUChangedEvent_getAddResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:boolean"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::ipv6-->
-      <xsd:element name="INATNetworkPortForwardEvent_getIpv6">
+      <!--Interface ICPUExecutionCapChangedEvent-->
+      <!-- readonly attribute ICPUExecutionCapChangedEvent::executionCap-->
+      <xsd:element name="ICPUExecutionCapChangedEvent_getExecutionCap">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getIpv6Response">
+      <xsd:element name="ICPUExecutionCapChangedEvent_getExecutionCapResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::name-->
-      <xsd:element name="INATNetworkPortForwardEvent_getName">
+      <!--Interface IGuestKeyboardEvent-->
+      <!-- readonly attribute IGuestKeyboardEvent::scancodes-->
+      <xsd:element name="IGuestKeyboardEvent_getScancodes">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getNameResponse">
+      <xsd:element name="IGuestKeyboardEvent_getScancodesResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::proto-->
-      <xsd:element name="INATNetworkPortForwardEvent_getProto">
+      <!--Interface IGuestMouseEvent-->
+      <!-- readonly attribute IGuestMouseEvent::mode-->
+      <xsd:element name="IGuestMouseEvent_getMode">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getProtoResponse">
+      <xsd:element name="IGuestMouseEvent_getModeResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="vbox:NATProtocol"/>
+            <xsd:element name="returnval" type="vbox:GuestMouseEventMode"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::hostIp-->
-      <xsd:element name="INATNetworkPortForwardEvent_getHostIp">
+      <!-- readonly attribute IGuestMouseEvent::x-->
+      <xsd:element name="IGuestMouseEvent_getX">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getHostIpResponse">
+      <xsd:element name="IGuestMouseEvent_getXResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::hostPort-->
-      <xsd:element name="INATNetworkPortForwardEvent_getHostPort">
+      <!-- readonly attribute IGuestMouseEvent::y-->
+      <xsd:element name="IGuestMouseEvent_getY">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getHostPortResponse">
+      <xsd:element name="IGuestMouseEvent_getYResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::guestIp-->
-      <xsd:element name="INATNetworkPortForwardEvent_getGuestIp">
+      <!-- readonly attribute IGuestMouseEvent::z-->
+      <xsd:element name="IGuestMouseEvent_getZ">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getGuestIpResponse">
+      <xsd:element name="IGuestMouseEvent_getZResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:string"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!-- readonly attribute INATNetworkPortForwardEvent::guestPort-->
-      <xsd:element name="INATNetworkPortForwardEvent_getGuestPort">
+      <!-- readonly attribute IGuestMouseEvent::w-->
+      <xsd:element name="IGuestMouseEvent_getW">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="INATNetworkPortForwardEvent_getGuestPortResponse">
+      <xsd:element name="IGuestMouseEvent_getWResponse">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--Interface IHostNameResolutionConfigurationChangeEvent-->
-      <!-- readonly attribute IHostNameResolutionConfigurationChangeEvent::midlDoesNotLikeEmptyInterfaces-->
-      <xsd:element name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <!-- readonly attribute IGuestMouseEvent::buttons-->
+      <xsd:element name="IGuestMouseEvent_getButtons">
         <xsd:complexType>
           <xsd:sequence>
             <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+      <xsd:element name="IGuestMouseEvent_getButtonsResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="returnval" type="xsd:boolean"/>
+            <xsd:element name="returnval" type="xsd:int"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <!--
-      ******************************************************
-      * faults
-      ******************************************************
--->
-      <xsd:element name="InvalidObjectFault">
+      <!--Interface IGuestMultiTouchEvent-->
+      <!-- readonly attribute IGuestMultiTouchEvent::contactCount-->
+      <xsd:element name="IGuestMultiTouchEvent_getContactCount">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="badObjectID" type="xsd:string"/>
+            <xsd:element name="_this" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-      <xsd:element name="RuntimeFault">
+      <xsd:element name="IGuestMultiTouchEvent_getContactCountResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMultiTouchEvent::xPositions-->
+      <xsd:element name="IGuestMultiTouchEvent_getXPositions">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMultiTouchEvent_getXPositionsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:short"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMultiTouchEvent::yPositions-->
+      <xsd:element name="IGuestMultiTouchEvent_getYPositions">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMultiTouchEvent_getYPositionsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:short"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMultiTouchEvent::contactIds-->
+      <xsd:element name="IGuestMultiTouchEvent_getContactIds">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMultiTouchEvent_getContactIdsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedShort"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMultiTouchEvent::contactFlags-->
+      <xsd:element name="IGuestMultiTouchEvent_getContactFlags">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMultiTouchEvent_getContactFlagsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:unsignedShort"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMultiTouchEvent::scanTime-->
+      <xsd:element name="IGuestMultiTouchEvent_getScanTime">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMultiTouchEvent_getScanTimeResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestSessionEvent-->
+      <!-- readonly attribute IGuestSessionEvent::session-->
+      <xsd:element name="IGuestSessionEvent_getSession">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestSessionEvent_getSessionResponse">
         <xsd:complexType>
           <xsd:sequence>
-            <xsd:element name="resultCode" type="xsd:int"/>
             <xsd:element name="returnval" type="xsd:string"/>
           </xsd:sequence>
         </xsd:complexType>
       </xsd:element>
-    </xsd:schema>
-  </wsdl:types>
-  <wsdl:message name="InvalidObjectFaultMsg">
-    <wsdl:part name="fault" element="vbox:InvalidObjectFault"/>
+      <!--Interface IGuestSessionStateChangedEvent-->
+      <!-- readonly attribute IGuestSessionStateChangedEvent::id-->
+      <xsd:element name="IGuestSessionStateChangedEvent_getId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestSessionStateChangedEvent_getIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestSessionStateChangedEvent::status-->
+      <xsd:element name="IGuestSessionStateChangedEvent_getStatus">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestSessionStateChangedEvent_getStatusResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:GuestSessionStatus"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestSessionStateChangedEvent::error-->
+      <xsd:element name="IGuestSessionStateChangedEvent_getError">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestSessionStateChangedEvent_getErrorResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestSessionRegisteredEvent-->
+      <!-- readonly attribute IGuestSessionRegisteredEvent::registered-->
+      <xsd:element name="IGuestSessionRegisteredEvent_getRegistered">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestSessionRegisteredEvent_getRegisteredResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessEvent-->
+      <!-- readonly attribute IGuestProcessEvent::process-->
+      <xsd:element name="IGuestProcessEvent_getProcess">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessEvent_getProcessResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestProcessEvent::pid-->
+      <xsd:element name="IGuestProcessEvent_getPid">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessEvent_getPidResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessRegisteredEvent-->
+      <!-- readonly attribute IGuestProcessRegisteredEvent::registered-->
+      <xsd:element name="IGuestProcessRegisteredEvent_getRegistered">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessRegisteredEvent_getRegisteredResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessStateChangedEvent-->
+      <!-- readonly attribute IGuestProcessStateChangedEvent::status-->
+      <xsd:element name="IGuestProcessStateChangedEvent_getStatus">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessStateChangedEvent_getStatusResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:ProcessStatus"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestProcessStateChangedEvent::error-->
+      <xsd:element name="IGuestProcessStateChangedEvent_getError">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessStateChangedEvent_getErrorResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessIOEvent-->
+      <!-- readonly attribute IGuestProcessIOEvent::handle-->
+      <xsd:element name="IGuestProcessIOEvent_getHandle">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessIOEvent_getHandleResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestProcessIOEvent::processed-->
+      <xsd:element name="IGuestProcessIOEvent_getProcessed">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessIOEvent_getProcessedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessInputNotifyEvent-->
+      <!-- readonly attribute IGuestProcessInputNotifyEvent::status-->
+      <xsd:element name="IGuestProcessInputNotifyEvent_getStatus">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessInputNotifyEvent_getStatusResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:ProcessInputStatus"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestProcessOutputEvent-->
+      <!-- readonly attribute IGuestProcessOutputEvent::data-->
+      <xsd:element name="IGuestProcessOutputEvent_getData">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestProcessOutputEvent_getDataResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileEvent-->
+      <!-- readonly attribute IGuestFileEvent::file-->
+      <xsd:element name="IGuestFileEvent_getFile">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileEvent_getFileResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileRegisteredEvent-->
+      <!-- readonly attribute IGuestFileRegisteredEvent::registered-->
+      <xsd:element name="IGuestFileRegisteredEvent_getRegistered">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileRegisteredEvent_getRegisteredResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileStateChangedEvent-->
+      <!-- readonly attribute IGuestFileStateChangedEvent::status-->
+      <xsd:element name="IGuestFileStateChangedEvent_getStatus">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileStateChangedEvent_getStatusResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:FileStatus"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestFileStateChangedEvent::error-->
+      <xsd:element name="IGuestFileStateChangedEvent_getError">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileStateChangedEvent_getErrorResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileIOEvent-->
+      <!-- readonly attribute IGuestFileIOEvent::offset-->
+      <xsd:element name="IGuestFileIOEvent_getOffset">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileIOEvent_getOffsetResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestFileIOEvent::processed-->
+      <xsd:element name="IGuestFileIOEvent_getProcessed">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileIOEvent_getProcessedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileOffsetChangedEvent-->
+      <!-- readonly attribute IGuestFileOffsetChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileReadEvent-->
+      <!-- readonly attribute IGuestFileReadEvent::data-->
+      <xsd:element name="IGuestFileReadEvent_getData">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileReadEvent_getDataResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestFileWriteEvent-->
+      <!-- readonly attribute IGuestFileWriteEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IVRDEServerChangedEvent-->
+      <!-- readonly attribute IVRDEServerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IVRDEServerInfoChangedEvent-->
+      <!-- readonly attribute IVRDEServerInfoChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IVideoCaptureChangedEvent-->
+      <!-- readonly attribute IVideoCaptureChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IUSBControllerChangedEvent-->
+      <!-- readonly attribute IUSBControllerChangedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IUSBDeviceStateChangedEvent-->
+      <!-- readonly attribute IUSBDeviceStateChangedEvent::device-->
+      <xsd:element name="IUSBDeviceStateChangedEvent_getDevice">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IUSBDeviceStateChangedEvent_getDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IUSBDeviceStateChangedEvent::attached-->
+      <xsd:element name="IUSBDeviceStateChangedEvent_getAttached">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IUSBDeviceStateChangedEvent_getAttachedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IUSBDeviceStateChangedEvent::error-->
+      <xsd:element name="IUSBDeviceStateChangedEvent_getError">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IUSBDeviceStateChangedEvent_getErrorResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface ISharedFolderChangedEvent-->
+      <!-- readonly attribute ISharedFolderChangedEvent::scope-->
+      <xsd:element name="ISharedFolderChangedEvent_getScope">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="ISharedFolderChangedEvent_getScopeResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:Scope"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IRuntimeErrorEvent-->
+      <!-- readonly attribute IRuntimeErrorEvent::fatal-->
+      <xsd:element name="IRuntimeErrorEvent_getFatal">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IRuntimeErrorEvent_getFatalResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IRuntimeErrorEvent::id-->
+      <xsd:element name="IRuntimeErrorEvent_getId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IRuntimeErrorEvent_getIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IRuntimeErrorEvent::message-->
+      <xsd:element name="IRuntimeErrorEvent_getMessage">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IRuntimeErrorEvent_getMessageResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IEventSourceChangedEvent-->
+      <!-- readonly attribute IEventSourceChangedEvent::listener-->
+      <xsd:element name="IEventSourceChangedEvent_getListener">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IEventSourceChangedEvent_getListenerResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IEventSourceChangedEvent::add-->
+      <xsd:element name="IEventSourceChangedEvent_getAdd">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IEventSourceChangedEvent_getAddResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IExtraDataChangedEvent-->
+      <!-- readonly attribute IExtraDataChangedEvent::machineId-->
+      <xsd:element name="IExtraDataChangedEvent_getMachineId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataChangedEvent_getMachineIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IExtraDataChangedEvent::key-->
+      <xsd:element name="IExtraDataChangedEvent_getKey">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataChangedEvent_getKeyResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IExtraDataChangedEvent::value-->
+      <xsd:element name="IExtraDataChangedEvent_getValue">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataChangedEvent_getValueResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IVetoEvent-->
+      <!-- method IVetoEvent::addVeto-->
+      <xsd:element name="IVetoEvent_addVeto">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="reason" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_addVetoResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IVetoEvent::isVetoed-->
+      <xsd:element name="IVetoEvent_isVetoed">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_isVetoedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IVetoEvent::getVetos-->
+      <xsd:element name="IVetoEvent_getVetos">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_getVetosResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IVetoEvent::addApproval-->
+      <xsd:element name="IVetoEvent_addApproval">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="reason" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_addApprovalResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IVetoEvent::isApproved-->
+      <xsd:element name="IVetoEvent_isApproved">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_isApprovedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- method IVetoEvent::getApprovals-->
+      <xsd:element name="IVetoEvent_getApprovals">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVetoEvent_getApprovalsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IExtraDataCanChangeEvent-->
+      <!-- readonly attribute IExtraDataCanChangeEvent::machineId-->
+      <xsd:element name="IExtraDataCanChangeEvent_getMachineId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataCanChangeEvent_getMachineIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IExtraDataCanChangeEvent::key-->
+      <xsd:element name="IExtraDataCanChangeEvent_getKey">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataCanChangeEvent_getKeyResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IExtraDataCanChangeEvent::value-->
+      <xsd:element name="IExtraDataCanChangeEvent_getValue">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IExtraDataCanChangeEvent_getValueResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface ICanShowWindowEvent-->
+      <!-- readonly attribute ICanShowWindowEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IShowWindowEvent-->
+      <!-- read/write attribute IShowWindowEvent::winId-->
+      <xsd:element name="IShowWindowEvent_getWinId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IShowWindowEvent_getWinIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:long"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IShowWindowEvent_setWinId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+            <xsd:element name="winId" type="xsd:long"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IShowWindowEvent_setWinIdResponse">
+        <xsd:complexType>
+          <xsd:sequence/>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATRedirectEvent-->
+      <!-- readonly attribute INATRedirectEvent::slot-->
+      <xsd:element name="INATRedirectEvent_getSlot">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getSlotResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::remove-->
+      <xsd:element name="INATRedirectEvent_getRemove">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getRemoveResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::name-->
+      <xsd:element name="INATRedirectEvent_getName">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getNameResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::proto-->
+      <xsd:element name="INATRedirectEvent_getProto">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getProtoResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:NATProtocol"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::hostIP-->
+      <xsd:element name="INATRedirectEvent_getHostIP">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getHostIPResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::hostPort-->
+      <xsd:element name="INATRedirectEvent_getHostPort">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getHostPortResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::guestIP-->
+      <xsd:element name="INATRedirectEvent_getGuestIP">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getGuestIPResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATRedirectEvent::guestPort-->
+      <xsd:element name="INATRedirectEvent_getGuestPort">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATRedirectEvent_getGuestPortResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IHostPCIDevicePlugEvent-->
+      <!-- readonly attribute IHostPCIDevicePlugEvent::plugged-->
+      <xsd:element name="IHostPCIDevicePlugEvent_getPlugged">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IHostPCIDevicePlugEvent_getPluggedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IHostPCIDevicePlugEvent::success-->
+      <xsd:element name="IHostPCIDevicePlugEvent_getSuccess">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IHostPCIDevicePlugEvent_getSuccessResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IHostPCIDevicePlugEvent::attachment-->
+      <xsd:element name="IHostPCIDevicePlugEvent_getAttachment">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IHostPCIDevicePlugEvent_getAttachmentResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:IPCIDeviceAttachment"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IHostPCIDevicePlugEvent::message-->
+      <xsd:element name="IHostPCIDevicePlugEvent_getMessage">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IHostPCIDevicePlugEvent_getMessageResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IVBoxSVCAvailabilityChangedEvent-->
+      <!-- readonly attribute IVBoxSVCAvailabilityChangedEvent::available-->
+      <xsd:element name="IVBoxSVCAvailabilityChangedEvent_getAvailable">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IVBoxSVCAvailabilityChangedEvent_getAvailableResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IBandwidthGroupChangedEvent-->
+      <!-- readonly attribute IBandwidthGroupChangedEvent::bandwidthGroup-->
+      <xsd:element name="IBandwidthGroupChangedEvent_getBandwidthGroup">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IBandwidthGroupChangedEvent_getBandwidthGroupResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestMonitorChangedEvent-->
+      <!-- readonly attribute IGuestMonitorChangedEvent::changeType-->
+      <xsd:element name="IGuestMonitorChangedEvent_getChangeType">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getChangeTypeResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:GuestMonitorChangedEventType"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMonitorChangedEvent::screenId-->
+      <xsd:element name="IGuestMonitorChangedEvent_getScreenId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getScreenIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMonitorChangedEvent::originX-->
+      <xsd:element name="IGuestMonitorChangedEvent_getOriginX">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getOriginXResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMonitorChangedEvent::originY-->
+      <xsd:element name="IGuestMonitorChangedEvent_getOriginY">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getOriginYResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMonitorChangedEvent::width-->
+      <xsd:element name="IGuestMonitorChangedEvent_getWidth">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getWidthResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestMonitorChangedEvent::height-->
+      <xsd:element name="IGuestMonitorChangedEvent_getHeight">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestMonitorChangedEvent_getHeightResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:unsignedInt"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IGuestUserStateChangedEvent-->
+      <!-- readonly attribute IGuestUserStateChangedEvent::name-->
+      <xsd:element name="IGuestUserStateChangedEvent_getName">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestUserStateChangedEvent_getNameResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestUserStateChangedEvent::domain-->
+      <xsd:element name="IGuestUserStateChangedEvent_getDomain">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestUserStateChangedEvent_getDomainResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestUserStateChangedEvent::state-->
+      <xsd:element name="IGuestUserStateChangedEvent_getState">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestUserStateChangedEvent_getStateResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:GuestUserState"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IGuestUserStateChangedEvent::stateDetails-->
+      <xsd:element name="IGuestUserStateChangedEvent_getStateDetails">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IGuestUserStateChangedEvent_getStateDetailsResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IStorageDeviceChangedEvent-->
+      <!-- readonly attribute IStorageDeviceChangedEvent::storageDevice-->
+      <xsd:element name="IStorageDeviceChangedEvent_getStorageDevice">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IStorageDeviceChangedEvent_getStorageDeviceResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:IMediumAttachment"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IStorageDeviceChangedEvent::removed-->
+      <xsd:element name="IStorageDeviceChangedEvent_getRemoved">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IStorageDeviceChangedEvent_getRemovedResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute IStorageDeviceChangedEvent::silent-->
+      <xsd:element name="IStorageDeviceChangedEvent_getSilent">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IStorageDeviceChangedEvent_getSilentResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkChangedEvent-->
+      <!-- readonly attribute INATNetworkChangedEvent::networkName-->
+      <xsd:element name="INATNetworkChangedEvent_getNetworkName">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkChangedEvent_getNetworkNameResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkStartStopEvent-->
+      <!-- readonly attribute INATNetworkStartStopEvent::startEvent-->
+      <xsd:element name="INATNetworkStartStopEvent_getStartEvent">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkStartStopEvent_getStartEventResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkAlterEvent-->
+      <!-- readonly attribute INATNetworkAlterEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkCreationDeletionEvent-->
+      <!-- readonly attribute INATNetworkCreationDeletionEvent::creationEvent-->
+      <xsd:element name="INATNetworkCreationDeletionEvent_getCreationEvent">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkCreationDeletionEvent_getCreationEventResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkSettingEvent-->
+      <!-- readonly attribute INATNetworkSettingEvent::enabled-->
+      <xsd:element name="INATNetworkSettingEvent_getEnabled">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkSettingEvent_getEnabledResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkSettingEvent::network-->
+      <xsd:element name="INATNetworkSettingEvent_getNetwork">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkSettingEvent_getNetworkResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkSettingEvent::gateway-->
+      <xsd:element name="INATNetworkSettingEvent_getGateway">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkSettingEvent_getGatewayResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkSettingEvent::advertiseDefaultIPv6RouteEnabled-->
+      <xsd:element name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkSettingEvent::needDhcpServer-->
+      <xsd:element name="INATNetworkSettingEvent_getNeedDhcpServer">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkSettingEvent_getNeedDhcpServerResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface INATNetworkPortForwardEvent-->
+      <!-- readonly attribute INATNetworkPortForwardEvent::create-->
+      <xsd:element name="INATNetworkPortForwardEvent_getCreate">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getCreateResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::ipv6-->
+      <xsd:element name="INATNetworkPortForwardEvent_getIpv6">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getIpv6Response">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::name-->
+      <xsd:element name="INATNetworkPortForwardEvent_getName">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getNameResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::proto-->
+      <xsd:element name="INATNetworkPortForwardEvent_getProto">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getProtoResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="vbox:NATProtocol"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::hostIp-->
+      <xsd:element name="INATNetworkPortForwardEvent_getHostIp">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getHostIpResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::hostPort-->
+      <xsd:element name="INATNetworkPortForwardEvent_getHostPort">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getHostPortResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::guestIp-->
+      <xsd:element name="INATNetworkPortForwardEvent_getGuestIp">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getGuestIpResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!-- readonly attribute INATNetworkPortForwardEvent::guestPort-->
+      <xsd:element name="INATNetworkPortForwardEvent_getGuestPort">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="INATNetworkPortForwardEvent_getGuestPortResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IHostNameResolutionConfigurationChangeEvent-->
+      <!-- readonly attribute IHostNameResolutionConfigurationChangeEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IProgressEvent-->
+      <!-- readonly attribute IProgressEvent::progressId-->
+      <xsd:element name="IProgressEvent_getProgressId">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IProgressEvent_getProgressIdResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IProgressPercentageChangedEvent-->
+      <!-- readonly attribute IProgressPercentageChangedEvent::percent-->
+      <xsd:element name="IProgressPercentageChangedEvent_getPercent">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IProgressPercentageChangedEvent_getPercentResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:int"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--Interface IProgressTaskCompletedEvent-->
+      <!-- readonly attribute IProgressTaskCompletedEvent::midlDoesNotLikeEmptyInterfaces-->
+      <xsd:element name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="_this" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesResponse">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="returnval" type="xsd:boolean"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <!--
+      ******************************************************
+      * faults
+      ******************************************************
+-->
+      <xsd:element name="InvalidObjectFault">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="badObjectID" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+      <xsd:element name="RuntimeFault">
+        <xsd:complexType>
+          <xsd:sequence>
+            <xsd:element name="resultCode" type="xsd:int"/>
+            <xsd:element name="returnval" type="xsd:string"/>
+          </xsd:sequence>
+        </xsd:complexType>
+      </xsd:element>
+    </xsd:schema>
+  </wsdl:types>
+  <wsdl:message name="InvalidObjectFaultMsg">
+    <wsdl:part name="fault" element="vbox:InvalidObjectFault"/>
   </wsdl:message>
   <wsdl:message name="RuntimeFaultMsg">
     <wsdl:part name="fault" element="vbox:RuntimeFault"/>
@@ -21776,6 +23524,13 @@
   <wsdl:message name="IVirtualBox_createApplianceResultMsg">
     <wsdl:part name="parameters" element="vbox:IVirtualBox_createApplianceResponse"/>
   </wsdl:message>
+  <!-- method IVirtualBox::createUnattendedInstaller-->
+  <wsdl:message name="IVirtualBox_createUnattendedInstallerRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVirtualBox_createUnattendedInstaller"/>
+  </wsdl:message>
+  <wsdl:message name="IVirtualBox_createUnattendedInstallerResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVirtualBox_createUnattendedInstallerResponse"/>
+  </wsdl:message>
   <!-- method IVirtualBox::createMedium-->
   <wsdl:message name="IVirtualBox_createMediumRequestMsg">
     <wsdl:part name="parameters" element="vbox:IVirtualBox_createMedium"/>
@@ -21900,54 +23655,220 @@
   <wsdl:message name="IVFSExplorer_getPathResultMsg">
     <wsdl:part name="parameters" element="vbox:IVFSExplorer_getPathResponse"/>
   </wsdl:message>
-  <!-- readonly attribute IVFSExplorer::type-->
-  <wsdl:message name="IVFSExplorer_getTypeRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_getType"/>
+  <!-- readonly attribute IVFSExplorer::type-->
+  <wsdl:message name="IVFSExplorer_getTypeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_getType"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_getTypeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_getTypeResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::update-->
+  <wsdl:message name="IVFSExplorer_updateRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_update"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_updateResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_updateResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::cd-->
+  <wsdl:message name="IVFSExplorer_cdRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cd"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_cdResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::cdUp-->
+  <wsdl:message name="IVFSExplorer_cdUpRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdUp"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_cdUpResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdUpResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::entryList-->
+  <wsdl:message name="IVFSExplorer_entryListRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_entryList"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_entryListResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_entryListResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::exists-->
+  <wsdl:message name="IVFSExplorer_existsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_exists"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_existsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_existsResponse"/>
+  </wsdl:message>
+  <!-- method IVFSExplorer::remove-->
+  <wsdl:message name="IVFSExplorer_removeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_remove"/>
+  </wsdl:message>
+  <wsdl:message name="IVFSExplorer_removeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IVFSExplorer_removeResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
+        messages for interface ICertificate
+        *************************************
+      -->
+  <!-- readonly attribute ICertificate::versionNumber-->
+  <wsdl:message name="ICertificate_getVersionNumberRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getVersionNumber"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getVersionNumberResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getVersionNumberResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::serialNumber-->
+  <wsdl:message name="ICertificate_getSerialNumberRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSerialNumber"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSerialNumberResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSerialNumberResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::signatureAlgorithmOID-->
+  <wsdl:message name="ICertificate_getSignatureAlgorithmOIDRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSignatureAlgorithmOID"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSignatureAlgorithmOIDResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSignatureAlgorithmOIDResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::signatureAlgorithmName-->
+  <wsdl:message name="ICertificate_getSignatureAlgorithmNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSignatureAlgorithmName"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSignatureAlgorithmNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSignatureAlgorithmNameResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::issuerName-->
+  <wsdl:message name="ICertificate_getIssuerNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getIssuerName"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getIssuerNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getIssuerNameResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::subjectName-->
+  <wsdl:message name="ICertificate_getSubjectNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectName"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSubjectNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectNameResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::friendlyName-->
+  <wsdl:message name="ICertificate_getFriendlyNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getFriendlyName"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getFriendlyNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getFriendlyNameResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::validityPeriodNotBefore-->
+  <wsdl:message name="ICertificate_getValidityPeriodNotBeforeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getValidityPeriodNotBefore"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getValidityPeriodNotBeforeResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getValidityPeriodNotBeforeResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::validityPeriodNotAfter-->
+  <wsdl:message name="ICertificate_getValidityPeriodNotAfterRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getValidityPeriodNotAfter"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getValidityPeriodNotAfterResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getValidityPeriodNotAfterResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::publicKeyAlgorithmOID-->
+  <wsdl:message name="ICertificate_getPublicKeyAlgorithmOIDRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getPublicKeyAlgorithmOID"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getPublicKeyAlgorithmOIDResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getPublicKeyAlgorithmOIDResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::publicKeyAlgorithm-->
+  <wsdl:message name="ICertificate_getPublicKeyAlgorithmRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getPublicKeyAlgorithm"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getPublicKeyAlgorithmResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getPublicKeyAlgorithmResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::subjectPublicKey-->
+  <wsdl:message name="ICertificate_getSubjectPublicKeyRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectPublicKey"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSubjectPublicKeyResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectPublicKeyResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::issuerUniqueIdentifier-->
+  <wsdl:message name="ICertificate_getIssuerUniqueIdentifierRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getIssuerUniqueIdentifier"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getIssuerUniqueIdentifierResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getIssuerUniqueIdentifierResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::subjectUniqueIdentifier-->
+  <wsdl:message name="ICertificate_getSubjectUniqueIdentifierRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectUniqueIdentifier"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getSubjectUniqueIdentifierResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSubjectUniqueIdentifierResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::certificateAuthority-->
+  <wsdl:message name="ICertificate_getCertificateAuthorityRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getCertificateAuthority"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getCertificateAuthorityResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getCertificateAuthorityResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::keyUsage-->
+  <wsdl:message name="ICertificate_getKeyUsageRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getKeyUsage"/>
+  </wsdl:message>
+  <wsdl:message name="ICertificate_getKeyUsageResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getKeyUsageResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute ICertificate::extendedKeyUsage-->
+  <wsdl:message name="ICertificate_getExtendedKeyUsageRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getExtendedKeyUsage"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_getTypeResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_getTypeResponse"/>
+  <wsdl:message name="ICertificate_getExtendedKeyUsageResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getExtendedKeyUsageResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::update-->
-  <wsdl:message name="IVFSExplorer_updateRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_update"/>
+  <!-- readonly attribute ICertificate::rawCertData-->
+  <wsdl:message name="ICertificate_getRawCertDataRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getRawCertData"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_updateResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_updateResponse"/>
+  <wsdl:message name="ICertificate_getRawCertDataResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getRawCertDataResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::cd-->
-  <wsdl:message name="IVFSExplorer_cdRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cd"/>
+  <!-- readonly attribute ICertificate::selfSigned-->
+  <wsdl:message name="ICertificate_getSelfSignedRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSelfSigned"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_cdResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdResponse"/>
+  <wsdl:message name="ICertificate_getSelfSignedResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getSelfSignedResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::cdUp-->
-  <wsdl:message name="IVFSExplorer_cdUpRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdUp"/>
+  <!-- readonly attribute ICertificate::trusted-->
+  <wsdl:message name="ICertificate_getTrustedRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getTrusted"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_cdUpResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_cdUpResponse"/>
+  <wsdl:message name="ICertificate_getTrustedResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getTrustedResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::entryList-->
-  <wsdl:message name="IVFSExplorer_entryListRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_entryList"/>
+  <!-- readonly attribute ICertificate::expired-->
+  <wsdl:message name="ICertificate_getExpiredRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getExpired"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_entryListResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_entryListResponse"/>
+  <wsdl:message name="ICertificate_getExpiredResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_getExpiredResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::exists-->
-  <wsdl:message name="IVFSExplorer_existsRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_exists"/>
+  <!-- method ICertificate::isCurrentlyExpired-->
+  <wsdl:message name="ICertificate_isCurrentlyExpiredRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_isCurrentlyExpired"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_existsResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_existsResponse"/>
+  <wsdl:message name="ICertificate_isCurrentlyExpiredResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_isCurrentlyExpiredResponse"/>
   </wsdl:message>
-  <!-- method IVFSExplorer::remove-->
-  <wsdl:message name="IVFSExplorer_removeRequestMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_remove"/>
+  <!-- method ICertificate::queryInfo-->
+  <wsdl:message name="ICertificate_queryInfoRequestMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_queryInfo"/>
   </wsdl:message>
-  <wsdl:message name="IVFSExplorer_removeResultMsg">
-    <wsdl:part name="parameters" element="vbox:IVFSExplorer_removeResponse"/>
+  <wsdl:message name="ICertificate_queryInfoResultMsg">
+    <wsdl:part name="parameters" element="vbox:ICertificate_queryInfoResponse"/>
   </wsdl:message>
   <!--
         *************************************
@@ -21982,6 +23903,13 @@
   <wsdl:message name="IAppliance_getMachinesResultMsg">
     <wsdl:part name="parameters" element="vbox:IAppliance_getMachinesResponse"/>
   </wsdl:message>
+  <!-- readonly attribute IAppliance::certificate-->
+  <wsdl:message name="IAppliance_getCertificateRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IAppliance_getCertificate"/>
+  </wsdl:message>
+  <wsdl:message name="IAppliance_getCertificateResultMsg">
+    <wsdl:part name="parameters" element="vbox:IAppliance_getCertificateResponse"/>
+  </wsdl:message>
   <!-- method IAppliance::read-->
   <wsdl:message name="IAppliance_readRequestMsg">
     <wsdl:part name="parameters" element="vbox:IAppliance_read"/>
@@ -22094,6 +24022,380 @@
   </wsdl:message>
   <!--
         *************************************
+        messages for interface IUnattended
+        *************************************
+      -->
+  <!-- read/write attribute IUnattended::isoPath-->
+  <wsdl:message name="IUnattended_getIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getIsoPathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setIsoPathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::machine-->
+  <wsdl:message name="IUnattended_getMachineRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getMachine"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getMachineResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getMachineResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setMachineRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setMachine"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setMachineResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setMachineResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::user-->
+  <wsdl:message name="IUnattended_getUserRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getUser"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getUserResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getUserResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setUserRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setUser"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setUserResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setUserResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::password-->
+  <wsdl:message name="IUnattended_getPasswordRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPassword"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getPasswordResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPasswordResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPasswordRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPassword"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPasswordResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPasswordResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::fullUserName-->
+  <wsdl:message name="IUnattended_getFullUserNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getFullUserName"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getFullUserNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getFullUserNameResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setFullUserNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setFullUserName"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setFullUserNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setFullUserNameResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::productKey-->
+  <wsdl:message name="IUnattended_getProductKeyRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getProductKey"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getProductKeyResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getProductKeyResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setProductKeyRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setProductKey"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setProductKeyResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setProductKeyResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::additionsIsoPath-->
+  <wsdl:message name="IUnattended_getAdditionsIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getAdditionsIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getAdditionsIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getAdditionsIsoPathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setAdditionsIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setAdditionsIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setAdditionsIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setAdditionsIsoPathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::installGuestAdditions-->
+  <wsdl:message name="IUnattended_getInstallGuestAdditionsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getInstallGuestAdditions"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getInstallGuestAdditionsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getInstallGuestAdditionsResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setInstallGuestAdditionsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setInstallGuestAdditions"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setInstallGuestAdditionsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setInstallGuestAdditionsResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::validationKitIsoPath-->
+  <wsdl:message name="IUnattended_getValidationKitIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getValidationKitIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getValidationKitIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getValidationKitIsoPathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setValidationKitIsoPathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setValidationKitIsoPath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setValidationKitIsoPathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setValidationKitIsoPathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::installTestExecService-->
+  <wsdl:message name="IUnattended_getInstallTestExecServiceRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getInstallTestExecService"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getInstallTestExecServiceResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getInstallTestExecServiceResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setInstallTestExecServiceRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setInstallTestExecService"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setInstallTestExecServiceResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setInstallTestExecServiceResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::timeZone-->
+  <wsdl:message name="IUnattended_getTimeZoneRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getTimeZone"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getTimeZoneResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getTimeZoneResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setTimeZoneRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setTimeZone"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setTimeZoneResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setTimeZoneResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::locale-->
+  <wsdl:message name="IUnattended_getLocaleRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getLocale"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getLocaleResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getLocaleResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setLocaleRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setLocale"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setLocaleResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setLocaleResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::language-->
+  <wsdl:message name="IUnattended_getLanguageRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getLanguage"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getLanguageResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getLanguageResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setLanguageRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setLanguage"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setLanguageResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setLanguageResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::country-->
+  <wsdl:message name="IUnattended_getCountryRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getCountry"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getCountryResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getCountryResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setCountryRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setCountry"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setCountryResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setCountryResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::proxy-->
+  <wsdl:message name="IUnattended_getProxyRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getProxy"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getProxyResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getProxyResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setProxyRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setProxy"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setProxyResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setProxyResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::packageSelectionAdjustments-->
+  <wsdl:message name="IUnattended_getPackageSelectionAdjustmentsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPackageSelectionAdjustments"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getPackageSelectionAdjustmentsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPackageSelectionAdjustmentsResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPackageSelectionAdjustmentsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPackageSelectionAdjustments"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPackageSelectionAdjustmentsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPackageSelectionAdjustmentsResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::hostname-->
+  <wsdl:message name="IUnattended_getHostnameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getHostname"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getHostnameResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getHostnameResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setHostnameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setHostname"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setHostnameResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setHostnameResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::auxiliaryBasePath-->
+  <wsdl:message name="IUnattended_getAuxiliaryBasePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getAuxiliaryBasePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getAuxiliaryBasePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getAuxiliaryBasePathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setAuxiliaryBasePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setAuxiliaryBasePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setAuxiliaryBasePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setAuxiliaryBasePathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::imageIndex-->
+  <wsdl:message name="IUnattended_getImageIndexRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getImageIndex"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getImageIndexResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getImageIndexResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setImageIndexRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setImageIndex"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setImageIndexResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setImageIndexResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::scriptTemplatePath-->
+  <wsdl:message name="IUnattended_getScriptTemplatePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getScriptTemplatePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getScriptTemplatePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getScriptTemplatePathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setScriptTemplatePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setScriptTemplatePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setScriptTemplatePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setScriptTemplatePathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::postInstallScriptTemplatePath-->
+  <wsdl:message name="IUnattended_getPostInstallScriptTemplatePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPostInstallScriptTemplatePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getPostInstallScriptTemplatePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPostInstallScriptTemplatePathResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPostInstallScriptTemplatePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPostInstallScriptTemplatePath"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPostInstallScriptTemplatePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPostInstallScriptTemplatePathResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::postInstallCommand-->
+  <wsdl:message name="IUnattended_getPostInstallCommandRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPostInstallCommand"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getPostInstallCommandResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getPostInstallCommandResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPostInstallCommandRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPostInstallCommand"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setPostInstallCommandResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setPostInstallCommandResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IUnattended::extraInstallKernelParameters-->
+  <wsdl:message name="IUnattended_getExtraInstallKernelParametersRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getExtraInstallKernelParameters"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getExtraInstallKernelParametersResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getExtraInstallKernelParametersResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setExtraInstallKernelParametersRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setExtraInstallKernelParameters"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_setExtraInstallKernelParametersResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_setExtraInstallKernelParametersResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUnattended::detectedOSTypeId-->
+  <wsdl:message name="IUnattended_getDetectedOSTypeIdRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSTypeId"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getDetectedOSTypeIdResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSTypeIdResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUnattended::detectedOSVersion-->
+  <wsdl:message name="IUnattended_getDetectedOSVersionRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSVersion"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getDetectedOSVersionResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSVersionResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUnattended::detectedOSFlavor-->
+  <wsdl:message name="IUnattended_getDetectedOSFlavorRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSFlavor"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getDetectedOSFlavorResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSFlavorResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUnattended::detectedOSLanguages-->
+  <wsdl:message name="IUnattended_getDetectedOSLanguagesRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSLanguages"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getDetectedOSLanguagesResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSLanguagesResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUnattended::detectedOSHints-->
+  <wsdl:message name="IUnattended_getDetectedOSHintsRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSHints"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_getDetectedOSHintsResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_getDetectedOSHintsResponse"/>
+  </wsdl:message>
+  <!-- method IUnattended::detectIsoOS-->
+  <wsdl:message name="IUnattended_detectIsoOSRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_detectIsoOS"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_detectIsoOSResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_detectIsoOSResponse"/>
+  </wsdl:message>
+  <!-- method IUnattended::prepare-->
+  <wsdl:message name="IUnattended_prepareRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_prepare"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_prepareResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_prepareResponse"/>
+  </wsdl:message>
+  <!-- method IUnattended::constructMedia-->
+  <wsdl:message name="IUnattended_constructMediaRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_constructMedia"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_constructMediaResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_constructMediaResponse"/>
+  </wsdl:message>
+  <!-- method IUnattended::reconfigureVM-->
+  <wsdl:message name="IUnattended_reconfigureVMRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_reconfigureVM"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_reconfigureVMResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_reconfigureVMResponse"/>
+  </wsdl:message>
+  <!-- method IUnattended::done-->
+  <wsdl:message name="IUnattended_doneRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_done"/>
+  </wsdl:message>
+  <wsdl:message name="IUnattended_doneResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUnattended_doneResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
         messages for interface IInternalMachineControl
         *************************************
       -->
@@ -22193,6 +24495,19 @@
   <wsdl:message name="IBIOSSettings_setIOAPICEnabledResultMsg">
     <wsdl:part name="parameters" element="vbox:IBIOSSettings_setIOAPICEnabledResponse"/>
   </wsdl:message>
+  <!-- read/write attribute IBIOSSettings::APICMode-->
+  <wsdl:message name="IBIOSSettings_getAPICModeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IBIOSSettings_getAPICMode"/>
+  </wsdl:message>
+  <wsdl:message name="IBIOSSettings_getAPICModeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IBIOSSettings_getAPICModeResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IBIOSSettings_setAPICModeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IBIOSSettings_setAPICMode"/>
+  </wsdl:message>
+  <wsdl:message name="IBIOSSettings_setAPICModeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IBIOSSettings_setAPICModeResponse"/>
+  </wsdl:message>
   <!-- read/write attribute IBIOSSettings::timeOffset-->
   <wsdl:message name="IBIOSSettings_getTimeOffsetRequestMsg">
     <wsdl:part name="parameters" element="vbox:IBIOSSettings_getTimeOffset"/>
@@ -22846,6 +25161,13 @@
   <wsdl:message name="IMachine_getSettingsFilePathResultMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_getSettingsFilePathResponse"/>
   </wsdl:message>
+  <!-- readonly attribute IMachine::settingsAuxFilePath-->
+  <wsdl:message name="IMachine_getSettingsAuxFilePathRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getSettingsAuxFilePath"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_getSettingsAuxFilePathResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getSettingsAuxFilePathResponse"/>
+  </wsdl:message>
   <!-- readonly attribute IMachine::settingsModified-->
   <wsdl:message name="IMachine_getSettingsModifiedRequestMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_getSettingsModified"/>
@@ -23250,6 +25572,32 @@
   <wsdl:message name="IMachine_setVMProcessPriorityResultMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_setVMProcessPriorityResponse"/>
   </wsdl:message>
+  <!-- read/write attribute IMachine::paravirtDebug-->
+  <wsdl:message name="IMachine_getParavirtDebugRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getParavirtDebug"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_getParavirtDebugResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getParavirtDebugResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_setParavirtDebugRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_setParavirtDebug"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_setParavirtDebugResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_setParavirtDebugResponse"/>
+  </wsdl:message>
+  <!-- read/write attribute IMachine::CPUProfile-->
+  <wsdl:message name="IMachine_getCPUProfileRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getCPUProfile"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_getCPUProfileResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getCPUProfileResponse"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_setCPUProfileRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_setCPUProfile"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_setCPUProfileResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_setCPUProfileResponse"/>
+  </wsdl:message>
   <!-- method IMachine::lockMachine-->
   <wsdl:message name="IMachine_lockMachineRequestMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_lockMachine"/>
@@ -23516,6 +25864,13 @@
   <wsdl:message name="IMachine_setCPUPropertyResultMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_setCPUPropertyResponse"/>
   </wsdl:message>
+  <!-- method IMachine::getCPUIDLeafByOrdinal-->
+  <wsdl:message name="IMachine_getCPUIDLeafByOrdinalRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getCPUIDLeafByOrdinal"/>
+  </wsdl:message>
+  <wsdl:message name="IMachine_getCPUIDLeafByOrdinalResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachine_getCPUIDLeafByOrdinalResponse"/>
+  </wsdl:message>
   <!-- method IMachine::getCPUIDLeaf-->
   <wsdl:message name="IMachine_getCPUIDLeafRequestMsg">
     <wsdl:part name="parameters" element="vbox:IMachine_getCPUIDLeaf"/>
@@ -24228,6 +26583,13 @@
   <wsdl:message name="IHostNetworkInterface_getInterfaceTypeResultMsg">
     <wsdl:part name="parameters" element="vbox:IHostNetworkInterface_getInterfaceTypeResponse"/>
   </wsdl:message>
+  <!-- readonly attribute IHostNetworkInterface::wireless-->
+  <wsdl:message name="IHostNetworkInterface_getWirelessRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IHostNetworkInterface_getWireless"/>
+  </wsdl:message>
+  <wsdl:message name="IHostNetworkInterface_getWirelessResultMsg">
+    <wsdl:part name="parameters" element="vbox:IHostNetworkInterface_getWirelessResponse"/>
+  </wsdl:message>
   <!-- method IHostNetworkInterface::enableStaticIPConfig-->
   <wsdl:message name="IHostNetworkInterface_enableStaticIPConfigRequestMsg">
     <wsdl:part name="parameters" element="vbox:IHostNetworkInterface_enableStaticIPConfig"/>
@@ -24539,6 +26901,20 @@
   <wsdl:message name="IHost_generateMACAddressResultMsg">
     <wsdl:part name="parameters" element="vbox:IHost_generateMACAddressResponse"/>
   </wsdl:message>
+  <!-- method IHost::addUSBDeviceSource-->
+  <wsdl:message name="IHost_addUSBDeviceSourceRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IHost_addUSBDeviceSource"/>
+  </wsdl:message>
+  <wsdl:message name="IHost_addUSBDeviceSourceResultMsg">
+    <wsdl:part name="parameters" element="vbox:IHost_addUSBDeviceSourceResponse"/>
+  </wsdl:message>
+  <!-- method IHost::removeUSBDeviceSource-->
+  <wsdl:message name="IHost_removeUSBDeviceSourceRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IHost_removeUSBDeviceSource"/>
+  </wsdl:message>
+  <wsdl:message name="IHost_removeUSBDeviceSourceResultMsg">
+    <wsdl:part name="parameters" element="vbox:IHost_removeUSBDeviceSourceResponse"/>
+  </wsdl:message>
   <!--
         *************************************
         messages for interface ISystemProperties
@@ -26167,6 +28543,13 @@
   <wsdl:message name="IProgress_setTimeoutResultMsg">
     <wsdl:part name="parameters" element="vbox:IProgress_setTimeoutResponse"/>
   </wsdl:message>
+  <!-- readonly attribute IProgress::eventSource-->
+  <wsdl:message name="IProgress_getEventSourceRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IProgress_getEventSource"/>
+  </wsdl:message>
+  <wsdl:message name="IProgress_getEventSourceResultMsg">
+    <wsdl:part name="parameters" element="vbox:IProgress_getEventSourceResponse"/>
+  </wsdl:message>
   <!-- method IProgress::setCurrentOperationProgress-->
   <wsdl:message name="IProgress_setCurrentOperationProgressRequestMsg">
     <wsdl:part name="parameters" element="vbox:IProgress_setCurrentOperationProgress"/>
@@ -27022,9 +29405,91 @@
   </wsdl:message>
   <!--
         *************************************
+        messages for interface IGuestScreenInfo
+        *************************************
+      -->
+  <!-- readonly attribute IGuestScreenInfo::screenId-->
+  <wsdl:message name="IGuestScreenInfo_getScreenIdRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getScreenId"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getScreenIdResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getScreenIdResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::guestMonitorStatus-->
+  <wsdl:message name="IGuestScreenInfo_getGuestMonitorStatusRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getGuestMonitorStatus"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getGuestMonitorStatusResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getGuestMonitorStatusResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::primary-->
+  <wsdl:message name="IGuestScreenInfo_getPrimaryRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getPrimary"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getPrimaryResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getPrimaryResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::origin-->
+  <wsdl:message name="IGuestScreenInfo_getOriginRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOrigin"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getOriginResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOriginResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::originX-->
+  <wsdl:message name="IGuestScreenInfo_getOriginXRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOriginX"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getOriginXResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOriginXResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::originY-->
+  <wsdl:message name="IGuestScreenInfo_getOriginYRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOriginY"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getOriginYResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getOriginYResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::width-->
+  <wsdl:message name="IGuestScreenInfo_getWidthRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getWidth"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getWidthResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getWidthResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::height-->
+  <wsdl:message name="IGuestScreenInfo_getHeightRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getHeight"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getHeightResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getHeightResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::bitsPerPixel-->
+  <wsdl:message name="IGuestScreenInfo_getBitsPerPixelRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getBitsPerPixel"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getBitsPerPixelResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getBitsPerPixelResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IGuestScreenInfo::extendedInfo-->
+  <wsdl:message name="IGuestScreenInfo_getExtendedInfoRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getExtendedInfo"/>
+  </wsdl:message>
+  <wsdl:message name="IGuestScreenInfo_getExtendedInfoResultMsg">
+    <wsdl:part name="parameters" element="vbox:IGuestScreenInfo_getExtendedInfoResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
         messages for interface IDisplay
         *************************************
       -->
+  <!-- readonly attribute IDisplay::guestScreenLayout-->
+  <wsdl:message name="IDisplay_getGuestScreenLayoutRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_getGuestScreenLayout"/>
+  </wsdl:message>
+  <wsdl:message name="IDisplay_getGuestScreenLayoutResultMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_getGuestScreenLayoutResponse"/>
+  </wsdl:message>
   <!-- method IDisplay::getScreenResolution-->
   <wsdl:message name="IDisplay_getScreenResolutionRequestMsg">
     <wsdl:part name="parameters" element="vbox:IDisplay_getScreenResolution"/>
@@ -27117,6 +29582,20 @@
   <wsdl:message name="IDisplay_notifyHiDPIOutputPolicyChangeResultMsg">
     <wsdl:part name="parameters" element="vbox:IDisplay_notifyHiDPIOutputPolicyChangeResponse"/>
   </wsdl:message>
+  <!-- method IDisplay::setScreenLayout-->
+  <wsdl:message name="IDisplay_setScreenLayoutRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_setScreenLayout"/>
+  </wsdl:message>
+  <wsdl:message name="IDisplay_setScreenLayoutResultMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_setScreenLayoutResponse"/>
+  </wsdl:message>
+  <!-- method IDisplay::detachScreens-->
+  <wsdl:message name="IDisplay_detachScreensRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_detachScreens"/>
+  </wsdl:message>
+  <wsdl:message name="IDisplay_detachScreensResultMsg">
+    <wsdl:part name="parameters" element="vbox:IDisplay_detachScreensResponse"/>
+  </wsdl:message>
   <!--
         *************************************
         messages for interface INetworkAdapter
@@ -27720,6 +30199,13 @@
     <wsdl:part name="parameters" element="vbox:IMachineDebugger_setVirtualTimeRateResponse"/>
   </wsdl:message>
   <!--skipping attribute VM for it is suppressed-->
+  <!-- readonly attribute IMachineDebugger::uptime-->
+  <wsdl:message name="IMachineDebugger_getUptimeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IMachineDebugger_getUptime"/>
+  </wsdl:message>
+  <wsdl:message name="IMachineDebugger_getUptimeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IMachineDebugger_getUptimeResponse"/>
+  </wsdl:message>
   <!-- method IMachineDebugger::dumpGuestCore-->
   <wsdl:message name="IMachineDebugger_dumpGuestCoreRequestMsg">
     <wsdl:part name="parameters" element="vbox:IMachineDebugger_dumpGuestCore"/>
@@ -28048,6 +30534,20 @@
   <wsdl:message name="IUSBDevice_getRemoteResultMsg">
     <wsdl:part name="parameters" element="vbox:IUSBDevice_getRemoteResponse"/>
   </wsdl:message>
+  <!-- readonly attribute IUSBDevice::deviceInfo-->
+  <wsdl:message name="IUSBDevice_getDeviceInfoRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBDevice_getDeviceInfo"/>
+  </wsdl:message>
+  <wsdl:message name="IUSBDevice_getDeviceInfoResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBDevice_getDeviceInfoResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUSBDevice::backend-->
+  <wsdl:message name="IUSBDevice_getBackendRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBDevice_getBackend"/>
+  </wsdl:message>
+  <wsdl:message name="IUSBDevice_getBackendResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBDevice_getBackendResponse"/>
+  </wsdl:message>
   <!--
         *************************************
         messages for interface IUSBDeviceFilter
@@ -28228,6 +30728,25 @@
   </wsdl:message>
   <!--
         *************************************
+        messages for interface IUSBProxyBackend
+        *************************************
+      -->
+  <!-- readonly attribute IUSBProxyBackend::name-->
+  <wsdl:message name="IUSBProxyBackend_getNameRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBProxyBackend_getName"/>
+  </wsdl:message>
+  <wsdl:message name="IUSBProxyBackend_getNameResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBProxyBackend_getNameResponse"/>
+  </wsdl:message>
+  <!-- readonly attribute IUSBProxyBackend::type-->
+  <wsdl:message name="IUSBProxyBackend_getTypeRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBProxyBackend_getType"/>
+  </wsdl:message>
+  <wsdl:message name="IUSBProxyBackend_getTypeResultMsg">
+    <wsdl:part name="parameters" element="vbox:IUSBProxyBackend_getTypeResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
         messages for interface IAudioAdapter
         *************************************
       -->
@@ -29494,6 +32013,18 @@
   </wsdl:message>
   <!--
         *************************************
+        messages for interface IAudioAdapterChangedEvent
+        *************************************
+      -->
+  <!-- readonly attribute IAudioAdapterChangedEvent::audioAdapter-->
+  <wsdl:message name="IAudioAdapterChangedEvent_getAudioAdapterRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IAudioAdapterChangedEvent_getAudioAdapter"/>
+  </wsdl:message>
+  <wsdl:message name="IAudioAdapterChangedEvent_getAudioAdapterResultMsg">
+    <wsdl:part name="parameters" element="vbox:IAudioAdapterChangedEvent_getAudioAdapterResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
         messages for interface ISerialPortChangedEvent
         *************************************
       -->
@@ -30588,6 +33119,42 @@
     <wsdl:part name="parameters" element="vbox:IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResponse"/>
   </wsdl:message>
   <!--
+        *************************************
+        messages for interface IProgressEvent
+        *************************************
+      -->
+  <!-- readonly attribute IProgressEvent::progressId-->
+  <wsdl:message name="IProgressEvent_getProgressIdRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressEvent_getProgressId"/>
+  </wsdl:message>
+  <wsdl:message name="IProgressEvent_getProgressIdResultMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressEvent_getProgressIdResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
+        messages for interface IProgressPercentageChangedEvent
+        *************************************
+      -->
+  <!-- readonly attribute IProgressPercentageChangedEvent::percent-->
+  <wsdl:message name="IProgressPercentageChangedEvent_getPercentRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressPercentageChangedEvent_getPercent"/>
+  </wsdl:message>
+  <wsdl:message name="IProgressPercentageChangedEvent_getPercentResultMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressPercentageChangedEvent_getPercentResponse"/>
+  </wsdl:message>
+  <!--
+        *************************************
+        messages for interface IProgressTaskCompletedEvent
+        *************************************
+      -->
+  <!-- readonly attribute IProgressTaskCompletedEvent::midlDoesNotLikeEmptyInterfaces-->
+  <wsdl:message name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces"/>
+  </wsdl:message>
+  <wsdl:message name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg">
+    <wsdl:part name="parameters" element="vbox:IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesResponse"/>
+  </wsdl:message>
+  <!--
       ******************************************************
       *
       * one portType for all interfaces
@@ -31108,6 +33675,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IVirtualBox_createUnattendedInstaller">
+      <wsdl:input message="vbox:IVirtualBox_createUnattendedInstallerRequestMsg"/>
+      <wsdl:output message="vbox:IVirtualBox_createUnattendedInstallerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IVirtualBox_createMedium">
       <wsdl:input message="vbox:IVirtualBox_createMediumRequestMsg"/>
       <wsdl:output message="vbox:IVirtualBox_createMediumResultMsg"/>
@@ -31259,6 +33832,149 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface ICertificate
+          *************************************
+        -->
+    <wsdl:operation name="ICertificate_getVersionNumber">
+      <wsdl:input message="vbox:ICertificate_getVersionNumberRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getVersionNumberResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSerialNumber">
+      <wsdl:input message="vbox:ICertificate_getSerialNumberRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSerialNumberResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSignatureAlgorithmOID">
+      <wsdl:input message="vbox:ICertificate_getSignatureAlgorithmOIDRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSignatureAlgorithmOIDResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSignatureAlgorithmName">
+      <wsdl:input message="vbox:ICertificate_getSignatureAlgorithmNameRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSignatureAlgorithmNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getIssuerName">
+      <wsdl:input message="vbox:ICertificate_getIssuerNameRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getIssuerNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSubjectName">
+      <wsdl:input message="vbox:ICertificate_getSubjectNameRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSubjectNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getFriendlyName">
+      <wsdl:input message="vbox:ICertificate_getFriendlyNameRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getFriendlyNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getValidityPeriodNotBefore">
+      <wsdl:input message="vbox:ICertificate_getValidityPeriodNotBeforeRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getValidityPeriodNotBeforeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getValidityPeriodNotAfter">
+      <wsdl:input message="vbox:ICertificate_getValidityPeriodNotAfterRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getValidityPeriodNotAfterResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getPublicKeyAlgorithmOID">
+      <wsdl:input message="vbox:ICertificate_getPublicKeyAlgorithmOIDRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getPublicKeyAlgorithmOIDResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getPublicKeyAlgorithm">
+      <wsdl:input message="vbox:ICertificate_getPublicKeyAlgorithmRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getPublicKeyAlgorithmResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSubjectPublicKey">
+      <wsdl:input message="vbox:ICertificate_getSubjectPublicKeyRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSubjectPublicKeyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getIssuerUniqueIdentifier">
+      <wsdl:input message="vbox:ICertificate_getIssuerUniqueIdentifierRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getIssuerUniqueIdentifierResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSubjectUniqueIdentifier">
+      <wsdl:input message="vbox:ICertificate_getSubjectUniqueIdentifierRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSubjectUniqueIdentifierResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getCertificateAuthority">
+      <wsdl:input message="vbox:ICertificate_getCertificateAuthorityRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getCertificateAuthorityResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getKeyUsage">
+      <wsdl:input message="vbox:ICertificate_getKeyUsageRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getKeyUsageResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getExtendedKeyUsage">
+      <wsdl:input message="vbox:ICertificate_getExtendedKeyUsageRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getExtendedKeyUsageResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getRawCertData">
+      <wsdl:input message="vbox:ICertificate_getRawCertDataRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getRawCertDataResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSelfSigned">
+      <wsdl:input message="vbox:ICertificate_getSelfSignedRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getSelfSignedResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getTrusted">
+      <wsdl:input message="vbox:ICertificate_getTrustedRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getTrustedResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getExpired">
+      <wsdl:input message="vbox:ICertificate_getExpiredRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_getExpiredResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_isCurrentlyExpired">
+      <wsdl:input message="vbox:ICertificate_isCurrentlyExpiredRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_isCurrentlyExpiredResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_queryInfo">
+      <wsdl:input message="vbox:ICertificate_queryInfoRequestMsg"/>
+      <wsdl:output message="vbox:ICertificate_queryInfoResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IAppliance
           *************************************
         -->
@@ -31286,6 +34002,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IAppliance_getCertificate">
+      <wsdl:input message="vbox:IAppliance_getCertificateRequestMsg"/>
+      <wsdl:output message="vbox:IAppliance_getCertificateResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IAppliance_read">
       <wsdl:input message="vbox:IAppliance_readRequestMsg"/>
       <wsdl:output message="vbox:IAppliance_readResultMsg"/>
@@ -31383,6 +34105,347 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IUnattended
+          *************************************
+        -->
+    <wsdl:operation name="IUnattended_getIsoPath">
+      <wsdl:input message="vbox:IUnattended_getIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setIsoPath">
+      <wsdl:input message="vbox:IUnattended_setIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getMachine">
+      <wsdl:input message="vbox:IUnattended_getMachineRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getMachineResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setMachine">
+      <wsdl:input message="vbox:IUnattended_setMachineRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setMachineResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getUser">
+      <wsdl:input message="vbox:IUnattended_getUserRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getUserResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setUser">
+      <wsdl:input message="vbox:IUnattended_setUserRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setUserResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getPassword">
+      <wsdl:input message="vbox:IUnattended_getPasswordRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getPasswordResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setPassword">
+      <wsdl:input message="vbox:IUnattended_setPasswordRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setPasswordResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getFullUserName">
+      <wsdl:input message="vbox:IUnattended_getFullUserNameRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getFullUserNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setFullUserName">
+      <wsdl:input message="vbox:IUnattended_setFullUserNameRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setFullUserNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getProductKey">
+      <wsdl:input message="vbox:IUnattended_getProductKeyRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getProductKeyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setProductKey">
+      <wsdl:input message="vbox:IUnattended_setProductKeyRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setProductKeyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getAdditionsIsoPath">
+      <wsdl:input message="vbox:IUnattended_getAdditionsIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getAdditionsIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setAdditionsIsoPath">
+      <wsdl:input message="vbox:IUnattended_setAdditionsIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setAdditionsIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getInstallGuestAdditions">
+      <wsdl:input message="vbox:IUnattended_getInstallGuestAdditionsRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getInstallGuestAdditionsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setInstallGuestAdditions">
+      <wsdl:input message="vbox:IUnattended_setInstallGuestAdditionsRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setInstallGuestAdditionsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getValidationKitIsoPath">
+      <wsdl:input message="vbox:IUnattended_getValidationKitIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getValidationKitIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setValidationKitIsoPath">
+      <wsdl:input message="vbox:IUnattended_setValidationKitIsoPathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setValidationKitIsoPathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getInstallTestExecService">
+      <wsdl:input message="vbox:IUnattended_getInstallTestExecServiceRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getInstallTestExecServiceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setInstallTestExecService">
+      <wsdl:input message="vbox:IUnattended_setInstallTestExecServiceRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setInstallTestExecServiceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getTimeZone">
+      <wsdl:input message="vbox:IUnattended_getTimeZoneRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getTimeZoneResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setTimeZone">
+      <wsdl:input message="vbox:IUnattended_setTimeZoneRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setTimeZoneResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getLocale">
+      <wsdl:input message="vbox:IUnattended_getLocaleRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getLocaleResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setLocale">
+      <wsdl:input message="vbox:IUnattended_setLocaleRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setLocaleResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getLanguage">
+      <wsdl:input message="vbox:IUnattended_getLanguageRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getLanguageResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setLanguage">
+      <wsdl:input message="vbox:IUnattended_setLanguageRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setLanguageResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getCountry">
+      <wsdl:input message="vbox:IUnattended_getCountryRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getCountryResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setCountry">
+      <wsdl:input message="vbox:IUnattended_setCountryRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setCountryResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getProxy">
+      <wsdl:input message="vbox:IUnattended_getProxyRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getProxyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setProxy">
+      <wsdl:input message="vbox:IUnattended_setProxyRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setProxyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getPackageSelectionAdjustments">
+      <wsdl:input message="vbox:IUnattended_getPackageSelectionAdjustmentsRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getPackageSelectionAdjustmentsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setPackageSelectionAdjustments">
+      <wsdl:input message="vbox:IUnattended_setPackageSelectionAdjustmentsRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setPackageSelectionAdjustmentsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getHostname">
+      <wsdl:input message="vbox:IUnattended_getHostnameRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getHostnameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setHostname">
+      <wsdl:input message="vbox:IUnattended_setHostnameRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setHostnameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getAuxiliaryBasePath">
+      <wsdl:input message="vbox:IUnattended_getAuxiliaryBasePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getAuxiliaryBasePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setAuxiliaryBasePath">
+      <wsdl:input message="vbox:IUnattended_setAuxiliaryBasePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setAuxiliaryBasePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getImageIndex">
+      <wsdl:input message="vbox:IUnattended_getImageIndexRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getImageIndexResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setImageIndex">
+      <wsdl:input message="vbox:IUnattended_setImageIndexRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setImageIndexResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getScriptTemplatePath">
+      <wsdl:input message="vbox:IUnattended_getScriptTemplatePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getScriptTemplatePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setScriptTemplatePath">
+      <wsdl:input message="vbox:IUnattended_setScriptTemplatePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setScriptTemplatePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getPostInstallScriptTemplatePath">
+      <wsdl:input message="vbox:IUnattended_getPostInstallScriptTemplatePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getPostInstallScriptTemplatePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setPostInstallScriptTemplatePath">
+      <wsdl:input message="vbox:IUnattended_setPostInstallScriptTemplatePathRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setPostInstallScriptTemplatePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getPostInstallCommand">
+      <wsdl:input message="vbox:IUnattended_getPostInstallCommandRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getPostInstallCommandResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setPostInstallCommand">
+      <wsdl:input message="vbox:IUnattended_setPostInstallCommandRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setPostInstallCommandResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getExtraInstallKernelParameters">
+      <wsdl:input message="vbox:IUnattended_getExtraInstallKernelParametersRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getExtraInstallKernelParametersResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_setExtraInstallKernelParameters">
+      <wsdl:input message="vbox:IUnattended_setExtraInstallKernelParametersRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_setExtraInstallKernelParametersResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSTypeId">
+      <wsdl:input message="vbox:IUnattended_getDetectedOSTypeIdRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getDetectedOSTypeIdResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSVersion">
+      <wsdl:input message="vbox:IUnattended_getDetectedOSVersionRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getDetectedOSVersionResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSFlavor">
+      <wsdl:input message="vbox:IUnattended_getDetectedOSFlavorRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getDetectedOSFlavorResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSLanguages">
+      <wsdl:input message="vbox:IUnattended_getDetectedOSLanguagesRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getDetectedOSLanguagesResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSHints">
+      <wsdl:input message="vbox:IUnattended_getDetectedOSHintsRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_getDetectedOSHintsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_detectIsoOS">
+      <wsdl:input message="vbox:IUnattended_detectIsoOSRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_detectIsoOSResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_prepare">
+      <wsdl:input message="vbox:IUnattended_prepareRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_prepareResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_constructMedia">
+      <wsdl:input message="vbox:IUnattended_constructMediaRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_constructMediaResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_reconfigureVM">
+      <wsdl:input message="vbox:IUnattended_reconfigureVMRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_reconfigureVMResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_done">
+      <wsdl:input message="vbox:IUnattended_doneRequestMsg"/>
+      <wsdl:output message="vbox:IUnattended_doneResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IInternalMachineControl
           *************************************
         -->
@@ -31475,6 +34538,18 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IBIOSSettings_getAPICMode">
+      <wsdl:input message="vbox:IBIOSSettings_getAPICModeRequestMsg"/>
+      <wsdl:output message="vbox:IBIOSSettings_getAPICModeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBIOSSettings_setAPICMode">
+      <wsdl:input message="vbox:IBIOSSettings_setAPICModeRequestMsg"/>
+      <wsdl:output message="vbox:IBIOSSettings_setAPICModeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IBIOSSettings_getTimeOffset">
       <wsdl:input message="vbox:IBIOSSettings_getTimeOffsetRequestMsg"/>
       <wsdl:output message="vbox:IBIOSSettings_getTimeOffsetResultMsg"/>
@@ -32072,6 +35147,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getSettingsAuxFilePath">
+      <wsdl:input message="vbox:IMachine_getSettingsAuxFilePathRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_getSettingsAuxFilePathResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_getSettingsModified">
       <wsdl:input message="vbox:IMachine_getSettingsModifiedRequestMsg"/>
       <wsdl:output message="vbox:IMachine_getSettingsModifiedResultMsg"/>
@@ -32438,6 +35519,30 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getParavirtDebug">
+      <wsdl:input message="vbox:IMachine_getParavirtDebugRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_getParavirtDebugResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_setParavirtDebug">
+      <wsdl:input message="vbox:IMachine_setParavirtDebugRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_setParavirtDebugResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_getCPUProfile">
+      <wsdl:input message="vbox:IMachine_getCPUProfileRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_getCPUProfileResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_setCPUProfile">
+      <wsdl:input message="vbox:IMachine_setCPUProfileRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_setCPUProfileResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_lockMachine">
       <wsdl:input message="vbox:IMachine_lockMachineRequestMsg"/>
       <wsdl:output message="vbox:IMachine_lockMachineResultMsg"/>
@@ -32666,6 +35771,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getCPUIDLeafByOrdinal">
+      <wsdl:input message="vbox:IMachine_getCPUIDLeafByOrdinalRequestMsg"/>
+      <wsdl:output message="vbox:IMachine_getCPUIDLeafByOrdinalResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_getCPUIDLeaf">
       <wsdl:input message="vbox:IMachine_getCPUIDLeafRequestMsg"/>
       <wsdl:output message="vbox:IMachine_getCPUIDLeafResultMsg"/>
@@ -33280,6 +36391,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IHostNetworkInterface_getWireless">
+      <wsdl:input message="vbox:IHostNetworkInterface_getWirelessRequestMsg"/>
+      <wsdl:output message="vbox:IHostNetworkInterface_getWirelessResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IHostNetworkInterface_enableStaticIPConfig">
       <wsdl:input message="vbox:IHostNetworkInterface_enableStaticIPConfigRequestMsg"/>
       <wsdl:output message="vbox:IHostNetworkInterface_enableStaticIPConfigResultMsg"/>
@@ -33548,6 +36665,18 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IHost_addUSBDeviceSource">
+      <wsdl:input message="vbox:IHost_addUSBDeviceSourceRequestMsg"/>
+      <wsdl:output message="vbox:IHost_addUSBDeviceSourceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IHost_removeUSBDeviceSource">
+      <wsdl:input message="vbox:IHost_removeUSBDeviceSourceRequestMsg"/>
+      <wsdl:output message="vbox:IHost_removeUSBDeviceSourceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface ISystemProperties
@@ -34975,6 +38104,12 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IProgress_getEventSource">
+      <wsdl:input message="vbox:IProgress_getEventSourceRequestMsg"/>
+      <wsdl:output message="vbox:IProgress_getEventSourceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IProgress_setCurrentOperationProgress">
       <wsdl:input message="vbox:IProgress_setCurrentOperationProgressRequestMsg"/>
       <wsdl:output message="vbox:IProgress_setCurrentOperationProgressResultMsg"/>
@@ -35720,9 +38855,80 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IGuestScreenInfo
+          *************************************
+        -->
+    <wsdl:operation name="IGuestScreenInfo_getScreenId">
+      <wsdl:input message="vbox:IGuestScreenInfo_getScreenIdRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getScreenIdResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getGuestMonitorStatus">
+      <wsdl:input message="vbox:IGuestScreenInfo_getGuestMonitorStatusRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getGuestMonitorStatusResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getPrimary">
+      <wsdl:input message="vbox:IGuestScreenInfo_getPrimaryRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getPrimaryResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOrigin">
+      <wsdl:input message="vbox:IGuestScreenInfo_getOriginRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getOriginResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOriginX">
+      <wsdl:input message="vbox:IGuestScreenInfo_getOriginXRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getOriginXResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOriginY">
+      <wsdl:input message="vbox:IGuestScreenInfo_getOriginYRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getOriginYResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getWidth">
+      <wsdl:input message="vbox:IGuestScreenInfo_getWidthRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getWidthResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getHeight">
+      <wsdl:input message="vbox:IGuestScreenInfo_getHeightRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getHeightResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getBitsPerPixel">
+      <wsdl:input message="vbox:IGuestScreenInfo_getBitsPerPixelRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getBitsPerPixelResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getExtendedInfo">
+      <wsdl:input message="vbox:IGuestScreenInfo_getExtendedInfoRequestMsg"/>
+      <wsdl:output message="vbox:IGuestScreenInfo_getExtendedInfoResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IDisplay
           *************************************
         -->
+    <wsdl:operation name="IDisplay_getGuestScreenLayout">
+      <wsdl:input message="vbox:IDisplay_getGuestScreenLayoutRequestMsg"/>
+      <wsdl:output message="vbox:IDisplay_getGuestScreenLayoutResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IDisplay_getScreenResolution">
       <wsdl:input message="vbox:IDisplay_getScreenResolutionRequestMsg"/>
       <wsdl:output message="vbox:IDisplay_getScreenResolutionResultMsg"/>
@@ -35799,6 +39005,18 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IDisplay_setScreenLayout">
+      <wsdl:input message="vbox:IDisplay_setScreenLayoutRequestMsg"/>
+      <wsdl:output message="vbox:IDisplay_setScreenLayoutResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IDisplay_detachScreens">
+      <wsdl:input message="vbox:IDisplay_detachScreensRequestMsg"/>
+      <wsdl:output message="vbox:IDisplay_detachScreensResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface INetworkAdapter
@@ -36348,6 +39566,12 @@
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--skipping attribute VM for it is suppressed-->
+    <wsdl:operation name="IMachineDebugger_getUptime">
+      <wsdl:input message="vbox:IMachineDebugger_getUptimeRequestMsg"/>
+      <wsdl:output message="vbox:IMachineDebugger_getUptimeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <wsdl:operation name="IMachineDebugger_dumpGuestCore">
       <wsdl:input message="vbox:IMachineDebugger_dumpGuestCoreRequestMsg"/>
       <wsdl:output message="vbox:IMachineDebugger_dumpGuestCoreResultMsg"/>
@@ -36633,6 +39857,18 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+    <wsdl:operation name="IUSBDevice_getDeviceInfo">
+      <wsdl:input message="vbox:IUSBDevice_getDeviceInfoRequestMsg"/>
+      <wsdl:output message="vbox:IUSBDevice_getDeviceInfoResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUSBDevice_getBackend">
+      <wsdl:input message="vbox:IUSBDevice_getBackendRequestMsg"/>
+      <wsdl:output message="vbox:IUSBDevice_getBackendResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface IUSBDeviceFilter
@@ -36800,6 +40036,23 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IUSBProxyBackend
+          *************************************
+        -->
+    <wsdl:operation name="IUSBProxyBackend_getName">
+      <wsdl:input message="vbox:IUSBProxyBackend_getNameRequestMsg"/>
+      <wsdl:output message="vbox:IUSBProxyBackend_getNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IUSBProxyBackend_getType">
+      <wsdl:input message="vbox:IUSBProxyBackend_getTypeRequestMsg"/>
+      <wsdl:output message="vbox:IUSBProxyBackend_getTypeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IAudioAdapter
           *************************************
         -->
@@ -37227,1711 +40480,2896 @@
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceMetric_getUnit">
-      <wsdl:input message="vbox:IPerformanceMetric_getUnitRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceMetric_getUnitResultMsg"/>
+    <wsdl:operation name="IPerformanceMetric_getUnit">
+      <wsdl:input message="vbox:IPerformanceMetric_getUnitRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceMetric_getUnitResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceMetric_getMinimumValue">
+      <wsdl:input message="vbox:IPerformanceMetric_getMinimumValueRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceMetric_getMinimumValueResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceMetric_getMaximumValue">
+      <wsdl:input message="vbox:IPerformanceMetric_getMaximumValueRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceMetric_getMaximumValueResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IPerformanceCollector
+          *************************************
+        -->
+    <wsdl:operation name="IPerformanceCollector_getMetricNames">
+      <wsdl:input message="vbox:IPerformanceCollector_getMetricNamesRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_getMetricNamesResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceCollector_getMetrics">
+      <wsdl:input message="vbox:IPerformanceCollector_getMetricsRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_getMetricsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceCollector_setupMetrics">
+      <wsdl:input message="vbox:IPerformanceCollector_setupMetricsRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_setupMetricsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceCollector_enableMetrics">
+      <wsdl:input message="vbox:IPerformanceCollector_enableMetricsRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_enableMetricsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceCollector_disableMetrics">
+      <wsdl:input message="vbox:IPerformanceCollector_disableMetricsRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_disableMetricsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IPerformanceCollector_queryMetricsData">
+      <wsdl:input message="vbox:IPerformanceCollector_queryMetricsDataRequestMsg"/>
+      <wsdl:output message="vbox:IPerformanceCollector_queryMetricsDataResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface INATEngine
+          *************************************
+        -->
+    <wsdl:operation name="INATEngine_getNetwork">
+      <wsdl:input message="vbox:INATEngine_getNetworkRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getNetworkResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setNetwork">
+      <wsdl:input message="vbox:INATEngine_setNetworkRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setNetworkResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getHostIP">
+      <wsdl:input message="vbox:INATEngine_getHostIPRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getHostIPResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setHostIP">
+      <wsdl:input message="vbox:INATEngine_setHostIPRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setHostIPResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getTFTPPrefix">
+      <wsdl:input message="vbox:INATEngine_getTFTPPrefixRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getTFTPPrefixResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setTFTPPrefix">
+      <wsdl:input message="vbox:INATEngine_setTFTPPrefixRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setTFTPPrefixResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getTFTPBootFile">
+      <wsdl:input message="vbox:INATEngine_getTFTPBootFileRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getTFTPBootFileResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setTFTPBootFile">
+      <wsdl:input message="vbox:INATEngine_setTFTPBootFileRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setTFTPBootFileResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getTFTPNextServer">
+      <wsdl:input message="vbox:INATEngine_getTFTPNextServerRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getTFTPNextServerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setTFTPNextServer">
+      <wsdl:input message="vbox:INATEngine_setTFTPNextServerRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setTFTPNextServerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getAliasMode">
+      <wsdl:input message="vbox:INATEngine_getAliasModeRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getAliasModeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setAliasMode">
+      <wsdl:input message="vbox:INATEngine_setAliasModeRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setAliasModeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getDNSPassDomain">
+      <wsdl:input message="vbox:INATEngine_getDNSPassDomainRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getDNSPassDomainResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setDNSPassDomain">
+      <wsdl:input message="vbox:INATEngine_setDNSPassDomainRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setDNSPassDomainResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getDNSProxy">
+      <wsdl:input message="vbox:INATEngine_getDNSProxyRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getDNSProxyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setDNSProxy">
+      <wsdl:input message="vbox:INATEngine_setDNSProxyRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setDNSProxyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getDNSUseHostResolver">
+      <wsdl:input message="vbox:INATEngine_getDNSUseHostResolverRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getDNSUseHostResolverResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setDNSUseHostResolver">
+      <wsdl:input message="vbox:INATEngine_setDNSUseHostResolverRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setDNSUseHostResolverResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getRedirects">
+      <wsdl:input message="vbox:INATEngine_getRedirectsRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getRedirectsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_setNetworkSettings">
+      <wsdl:input message="vbox:INATEngine_setNetworkSettingsRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_setNetworkSettingsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_getNetworkSettings">
+      <wsdl:input message="vbox:INATEngine_getNetworkSettingsRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_getNetworkSettingsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_addRedirect">
+      <wsdl:input message="vbox:INATEngine_addRedirectRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_addRedirectResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATEngine_removeRedirect">
+      <wsdl:input message="vbox:INATEngine_removeRedirectRequestMsg"/>
+      <wsdl:output message="vbox:INATEngine_removeRedirectResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IExtPackPlugIn
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IExtPackBase
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IExtPack
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IExtPackFile
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IExtPackManager
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IBandwidthGroup
+          *************************************
+        -->
+    <wsdl:operation name="IBandwidthGroup_getName">
+      <wsdl:input message="vbox:IBandwidthGroup_getNameRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroup_getNameResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthGroup_getType">
+      <wsdl:input message="vbox:IBandwidthGroup_getTypeRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroup_getTypeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthGroup_getReference">
+      <wsdl:input message="vbox:IBandwidthGroup_getReferenceRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroup_getReferenceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthGroup_getMaxBytesPerSec">
+      <wsdl:input message="vbox:IBandwidthGroup_getMaxBytesPerSecRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroup_getMaxBytesPerSecResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthGroup_setMaxBytesPerSec">
+      <wsdl:input message="vbox:IBandwidthGroup_setMaxBytesPerSecRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroup_setMaxBytesPerSecResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IBandwidthControl
+          *************************************
+        -->
+    <wsdl:operation name="IBandwidthControl_getNumGroups">
+      <wsdl:input message="vbox:IBandwidthControl_getNumGroupsRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthControl_getNumGroupsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthControl_createBandwidthGroup">
+      <wsdl:input message="vbox:IBandwidthControl_createBandwidthGroupRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthControl_createBandwidthGroupResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthControl_deleteBandwidthGroup">
+      <wsdl:input message="vbox:IBandwidthControl_deleteBandwidthGroupRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthControl_deleteBandwidthGroupResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthControl_getBandwidthGroup">
+      <wsdl:input message="vbox:IBandwidthControl_getBandwidthGroupRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthControl_getBandwidthGroupResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IBandwidthControl_getAllBandwidthGroups">
+      <wsdl:input message="vbox:IBandwidthControl_getAllBandwidthGroupsRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthControl_getAllBandwidthGroupsResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IVirtualBoxClient
+          *************************************
+        -->
+    <!--
+          *************************************
+          operations in portType for interface IEventSource
+          *************************************
+        -->
+    <wsdl:operation name="IEventSource_createListener">
+      <wsdl:input message="vbox:IEventSource_createListenerRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_createListenerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_createAggregator">
+      <wsdl:input message="vbox:IEventSource_createAggregatorRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_createAggregatorResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_registerListener">
+      <wsdl:input message="vbox:IEventSource_registerListenerRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_registerListenerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_unregisterListener">
+      <wsdl:input message="vbox:IEventSource_unregisterListenerRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_unregisterListenerResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_fireEvent">
+      <wsdl:input message="vbox:IEventSource_fireEventRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_fireEventResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_getEvent">
+      <wsdl:input message="vbox:IEventSource_getEventRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_getEventResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEventSource_eventProcessed">
+      <wsdl:input message="vbox:IEventSource_eventProcessedRequestMsg"/>
+      <wsdl:output message="vbox:IEventSource_eventProcessedResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IEventListener
+          *************************************
+        -->
+    <wsdl:operation name="IEventListener_handleEvent">
+      <wsdl:input message="vbox:IEventListener_handleEventRequestMsg"/>
+      <wsdl:output message="vbox:IEventListener_handleEventResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IEvent
+          *************************************
+        -->
+    <wsdl:operation name="IEvent_getType">
+      <wsdl:input message="vbox:IEvent_getTypeRequestMsg"/>
+      <wsdl:output message="vbox:IEvent_getTypeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEvent_getSource">
+      <wsdl:input message="vbox:IEvent_getSourceRequestMsg"/>
+      <wsdl:output message="vbox:IEvent_getSourceResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEvent_getWaitable">
+      <wsdl:input message="vbox:IEvent_getWaitableRequestMsg"/>
+      <wsdl:output message="vbox:IEvent_getWaitableResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEvent_setProcessed">
+      <wsdl:input message="vbox:IEvent_setProcessedRequestMsg"/>
+      <wsdl:output message="vbox:IEvent_setProcessedResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IEvent_waitProcessed">
+      <wsdl:input message="vbox:IEvent_waitProcessedRequestMsg"/>
+      <wsdl:output message="vbox:IEvent_waitProcessedResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IReusableEvent
+          *************************************
+        -->
+    <wsdl:operation name="IReusableEvent_getGeneration">
+      <wsdl:input message="vbox:IReusableEvent_getGenerationRequestMsg"/>
+      <wsdl:output message="vbox:IReusableEvent_getGenerationResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IReusableEvent_reuse">
+      <wsdl:input message="vbox:IReusableEvent_reuseRequestMsg"/>
+      <wsdl:output message="vbox:IReusableEvent_reuseResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IMachineEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMachineEvent_getMachineId">
+      <wsdl:input message="vbox:IMachineEvent_getMachineIdRequestMsg"/>
+      <wsdl:output message="vbox:IMachineEvent_getMachineIdResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IMachineStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMachineStateChangedEvent_getState">
+      <wsdl:input message="vbox:IMachineStateChangedEvent_getStateRequestMsg"/>
+      <wsdl:output message="vbox:IMachineStateChangedEvent_getStateResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IMachineDataChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMachineDataChangedEvent_getTemporary">
+      <wsdl:input message="vbox:IMachineDataChangedEvent_getTemporaryRequestMsg"/>
+      <wsdl:output message="vbox:IMachineDataChangedEvent_getTemporaryResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IMediumRegisteredEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMediumRegisteredEvent_getMediumId">
+      <wsdl:input message="vbox:IMediumRegisteredEvent_getMediumIdRequestMsg"/>
+      <wsdl:output message="vbox:IMediumRegisteredEvent_getMediumIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceMetric_getMinimumValue">
-      <wsdl:input message="vbox:IPerformanceMetric_getMinimumValueRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceMetric_getMinimumValueResultMsg"/>
+    <wsdl:operation name="IMediumRegisteredEvent_getMediumType">
+      <wsdl:input message="vbox:IMediumRegisteredEvent_getMediumTypeRequestMsg"/>
+      <wsdl:output message="vbox:IMediumRegisteredEvent_getMediumTypeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceMetric_getMaximumValue">
-      <wsdl:input message="vbox:IPerformanceMetric_getMaximumValueRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceMetric_getMaximumValueResultMsg"/>
+    <wsdl:operation name="IMediumRegisteredEvent_getRegistered">
+      <wsdl:input message="vbox:IMediumRegisteredEvent_getRegisteredRequestMsg"/>
+      <wsdl:output message="vbox:IMediumRegisteredEvent_getRegisteredResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IPerformanceCollector
+          operations in portType for interface IMediumConfigChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IPerformanceCollector_getMetricNames">
-      <wsdl:input message="vbox:IPerformanceCollector_getMetricNamesRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_getMetricNamesResultMsg"/>
+    <wsdl:operation name="IMediumConfigChangedEvent_getMedium">
+      <wsdl:input message="vbox:IMediumConfigChangedEvent_getMediumRequestMsg"/>
+      <wsdl:output message="vbox:IMediumConfigChangedEvent_getMediumResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceCollector_getMetrics">
-      <wsdl:input message="vbox:IPerformanceCollector_getMetricsRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_getMetricsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IMachineRegisteredEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMachineRegisteredEvent_getRegistered">
+      <wsdl:input message="vbox:IMachineRegisteredEvent_getRegisteredRequestMsg"/>
+      <wsdl:output message="vbox:IMachineRegisteredEvent_getRegisteredResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceCollector_setupMetrics">
-      <wsdl:input message="vbox:IPerformanceCollector_setupMetricsRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_setupMetricsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISessionStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISessionStateChangedEvent_getState">
+      <wsdl:input message="vbox:ISessionStateChangedEvent_getStateRequestMsg"/>
+      <wsdl:output message="vbox:ISessionStateChangedEvent_getStateResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceCollector_enableMetrics">
-      <wsdl:input message="vbox:IPerformanceCollector_enableMetricsRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_enableMetricsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestPropertyChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestPropertyChangedEvent_getName">
+      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getNameRequestMsg"/>
+      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getNameResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceCollector_disableMetrics">
-      <wsdl:input message="vbox:IPerformanceCollector_disableMetricsRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_disableMetricsResultMsg"/>
+    <wsdl:operation name="IGuestPropertyChangedEvent_getValue">
+      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getValueRequestMsg"/>
+      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getValueResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IPerformanceCollector_queryMetricsData">
-      <wsdl:input message="vbox:IPerformanceCollector_queryMetricsDataRequestMsg"/>
-      <wsdl:output message="vbox:IPerformanceCollector_queryMetricsDataResultMsg"/>
+    <wsdl:operation name="IGuestPropertyChangedEvent_getFlags">
+      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getFlagsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getFlagsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface INATEngine
+          operations in portType for interface ISnapshotEvent
           *************************************
         -->
-    <wsdl:operation name="INATEngine_getNetwork">
-      <wsdl:input message="vbox:INATEngine_getNetworkRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getNetworkResultMsg"/>
+    <wsdl:operation name="ISnapshotEvent_getSnapshotId">
+      <wsdl:input message="vbox:ISnapshotEvent_getSnapshotIdRequestMsg"/>
+      <wsdl:output message="vbox:ISnapshotEvent_getSnapshotIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setNetwork">
-      <wsdl:input message="vbox:INATEngine_setNetworkRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setNetworkResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISnapshotTakenEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getHostIP">
-      <wsdl:input message="vbox:INATEngine_getHostIPRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getHostIPResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISnapshotDeletedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setHostIP">
-      <wsdl:input message="vbox:INATEngine_setHostIPRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setHostIPResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISnapshotRestoredEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getTFTPPrefix">
-      <wsdl:input message="vbox:INATEngine_getTFTPPrefixRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getTFTPPrefixResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISnapshotChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setTFTPPrefix">
-      <wsdl:input message="vbox:INATEngine_setTFTPPrefixRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setTFTPPrefixResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IMousePointerShapeChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getVisible">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getVisibleRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getVisibleResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getTFTPBootFile">
-      <wsdl:input message="vbox:INATEngine_getTFTPBootFileRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getTFTPBootFileResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getAlpha">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getAlphaRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getAlphaResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setTFTPBootFile">
-      <wsdl:input message="vbox:INATEngine_setTFTPBootFileRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setTFTPBootFileResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getXhot">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getXhotRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getXhotResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getTFTPNextServer">
-      <wsdl:input message="vbox:INATEngine_getTFTPNextServerRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getTFTPNextServerResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getYhot">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getYhotRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getYhotResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setTFTPNextServer">
-      <wsdl:input message="vbox:INATEngine_setTFTPNextServerRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setTFTPNextServerResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getWidth">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getWidthRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getWidthResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getAliasMode">
-      <wsdl:input message="vbox:INATEngine_getAliasModeRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getAliasModeResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getHeight">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getHeightRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getHeightResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setAliasMode">
-      <wsdl:input message="vbox:INATEngine_setAliasModeRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setAliasModeResultMsg"/>
+    <wsdl:operation name="IMousePointerShapeChangedEvent_getShape">
+      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getShapeRequestMsg"/>
+      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getShapeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getDNSPassDomain">
-      <wsdl:input message="vbox:INATEngine_getDNSPassDomainRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getDNSPassDomainResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IMouseCapabilityChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsAbsolute">
+      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg"/>
+      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsAbsoluteResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setDNSPassDomain">
-      <wsdl:input message="vbox:INATEngine_setDNSPassDomainRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setDNSPassDomainResultMsg"/>
+    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsRelative">
+      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg"/>
+      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsRelativeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getDNSProxy">
-      <wsdl:input message="vbox:INATEngine_getDNSProxyRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getDNSProxyResultMsg"/>
+    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsMultiTouch">
+      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg"/>
+      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsMultiTouchResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setDNSProxy">
-      <wsdl:input message="vbox:INATEngine_setDNSProxyRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setDNSProxyResultMsg"/>
+    <wsdl:operation name="IMouseCapabilityChangedEvent_getNeedsHostCursor">
+      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg"/>
+      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getNeedsHostCursorResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getDNSUseHostResolver">
-      <wsdl:input message="vbox:INATEngine_getDNSUseHostResolverRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getDNSUseHostResolverResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IKeyboardLedsChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IKeyboardLedsChangedEvent_getNumLock">
+      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getNumLockRequestMsg"/>
+      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getNumLockResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setDNSUseHostResolver">
-      <wsdl:input message="vbox:INATEngine_setDNSUseHostResolverRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setDNSUseHostResolverResultMsg"/>
+    <wsdl:operation name="IKeyboardLedsChangedEvent_getCapsLock">
+      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getCapsLockRequestMsg"/>
+      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getCapsLockResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getRedirects">
-      <wsdl:input message="vbox:INATEngine_getRedirectsRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getRedirectsResultMsg"/>
+    <wsdl:operation name="IKeyboardLedsChangedEvent_getScrollLock">
+      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getScrollLockRequestMsg"/>
+      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getScrollLockResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_setNetworkSettings">
-      <wsdl:input message="vbox:INATEngine_setNetworkSettingsRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_setNetworkSettingsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IStateChangedEvent_getState">
+      <wsdl:input message="vbox:IStateChangedEvent_getStateRequestMsg"/>
+      <wsdl:output message="vbox:IStateChangedEvent_getStateResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_getNetworkSettings">
-      <wsdl:input message="vbox:INATEngine_getNetworkSettingsRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_getNetworkSettingsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IAdditionsStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_addRedirect">
-      <wsdl:input message="vbox:INATEngine_addRedirectRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_addRedirectResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface INetworkAdapterChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="INetworkAdapterChangedEvent_getNetworkAdapter">
+      <wsdl:input message="vbox:INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg"/>
+      <wsdl:output message="vbox:INetworkAdapterChangedEvent_getNetworkAdapterResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="INATEngine_removeRedirect">
-      <wsdl:input message="vbox:INATEngine_removeRedirectRequestMsg"/>
-      <wsdl:output message="vbox:INATEngine_removeRedirectResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IAudioAdapterChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IAudioAdapterChangedEvent_getAudioAdapter">
+      <wsdl:input message="vbox:IAudioAdapterChangedEvent_getAudioAdapterRequestMsg"/>
+      <wsdl:output message="vbox:IAudioAdapterChangedEvent_getAudioAdapterResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IExtPackPlugIn
+          operations in portType for interface ISerialPortChangedEvent
           *************************************
         -->
+    <wsdl:operation name="ISerialPortChangedEvent_getSerialPort">
+      <wsdl:input message="vbox:ISerialPortChangedEvent_getSerialPortRequestMsg"/>
+      <wsdl:output message="vbox:ISerialPortChangedEvent_getSerialPortResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IExtPackBase
+          operations in portType for interface IParallelPortChangedEvent
           *************************************
         -->
+    <wsdl:operation name="IParallelPortChangedEvent_getParallelPort">
+      <wsdl:input message="vbox:IParallelPortChangedEvent_getParallelPortRequestMsg"/>
+      <wsdl:output message="vbox:IParallelPortChangedEvent_getParallelPortResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IExtPack
+          operations in portType for interface IStorageControllerChangedEvent
           *************************************
         -->
+    <wsdl:operation name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IExtPackFile
+          operations in portType for interface IMediumChangedEvent
           *************************************
         -->
+    <wsdl:operation name="IMediumChangedEvent_getMediumAttachment">
+      <wsdl:input message="vbox:IMediumChangedEvent_getMediumAttachmentRequestMsg"/>
+      <wsdl:output message="vbox:IMediumChangedEvent_getMediumAttachmentResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IExtPackManager
+          operations in portType for interface IClipboardModeChangedEvent
           *************************************
         -->
+    <wsdl:operation name="IClipboardModeChangedEvent_getClipboardMode">
+      <wsdl:input message="vbox:IClipboardModeChangedEvent_getClipboardModeRequestMsg"/>
+      <wsdl:output message="vbox:IClipboardModeChangedEvent_getClipboardModeResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IBandwidthGroup
+          operations in portType for interface IDnDModeChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IBandwidthGroup_getName">
-      <wsdl:input message="vbox:IBandwidthGroup_getNameRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroup_getNameResultMsg"/>
+    <wsdl:operation name="IDnDModeChangedEvent_getDndMode">
+      <wsdl:input message="vbox:IDnDModeChangedEvent_getDndModeRequestMsg"/>
+      <wsdl:output message="vbox:IDnDModeChangedEvent_getDndModeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthGroup_getType">
-      <wsdl:input message="vbox:IBandwidthGroup_getTypeRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroup_getTypeResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ICPUChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ICPUChangedEvent_getCPU">
+      <wsdl:input message="vbox:ICPUChangedEvent_getCPURequestMsg"/>
+      <wsdl:output message="vbox:ICPUChangedEvent_getCPUResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthGroup_getReference">
-      <wsdl:input message="vbox:IBandwidthGroup_getReferenceRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroup_getReferenceResultMsg"/>
+    <wsdl:operation name="ICPUChangedEvent_getAdd">
+      <wsdl:input message="vbox:ICPUChangedEvent_getAddRequestMsg"/>
+      <wsdl:output message="vbox:ICPUChangedEvent_getAddResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthGroup_getMaxBytesPerSec">
-      <wsdl:input message="vbox:IBandwidthGroup_getMaxBytesPerSecRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroup_getMaxBytesPerSecResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ICPUExecutionCapChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ICPUExecutionCapChangedEvent_getExecutionCap">
+      <wsdl:input message="vbox:ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg"/>
+      <wsdl:output message="vbox:ICPUExecutionCapChangedEvent_getExecutionCapResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthGroup_setMaxBytesPerSec">
-      <wsdl:input message="vbox:IBandwidthGroup_setMaxBytesPerSecRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroup_setMaxBytesPerSecResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestKeyboardEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestKeyboardEvent_getScancodes">
+      <wsdl:input message="vbox:IGuestKeyboardEvent_getScancodesRequestMsg"/>
+      <wsdl:output message="vbox:IGuestKeyboardEvent_getScancodesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IBandwidthControl
+          operations in portType for interface IGuestMouseEvent
           *************************************
         -->
-    <wsdl:operation name="IBandwidthControl_getNumGroups">
-      <wsdl:input message="vbox:IBandwidthControl_getNumGroupsRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthControl_getNumGroupsResultMsg"/>
+    <wsdl:operation name="IGuestMouseEvent_getMode">
+      <wsdl:input message="vbox:IGuestMouseEvent_getModeRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getModeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthControl_createBandwidthGroup">
-      <wsdl:input message="vbox:IBandwidthControl_createBandwidthGroupRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthControl_createBandwidthGroupResultMsg"/>
+    <wsdl:operation name="IGuestMouseEvent_getX">
+      <wsdl:input message="vbox:IGuestMouseEvent_getXRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getXResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthControl_deleteBandwidthGroup">
-      <wsdl:input message="vbox:IBandwidthControl_deleteBandwidthGroupRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthControl_deleteBandwidthGroupResultMsg"/>
+    <wsdl:operation name="IGuestMouseEvent_getY">
+      <wsdl:input message="vbox:IGuestMouseEvent_getYRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getYResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthControl_getBandwidthGroup">
-      <wsdl:input message="vbox:IBandwidthControl_getBandwidthGroupRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthControl_getBandwidthGroupResultMsg"/>
+    <wsdl:operation name="IGuestMouseEvent_getZ">
+      <wsdl:input message="vbox:IGuestMouseEvent_getZRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getZResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IBandwidthControl_getAllBandwidthGroups">
-      <wsdl:input message="vbox:IBandwidthControl_getAllBandwidthGroupsRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthControl_getAllBandwidthGroupsResultMsg"/>
+    <wsdl:operation name="IGuestMouseEvent_getW">
+      <wsdl:input message="vbox:IGuestMouseEvent_getWRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getWResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestMouseEvent_getButtons">
+      <wsdl:input message="vbox:IGuestMouseEvent_getButtonsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMouseEvent_getButtonsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IVirtualBoxClient
-          *************************************
-        -->
-    <!--
-          *************************************
-          operations in portType for interface IEventSource
+          operations in portType for interface IGuestMultiTouchEvent
           *************************************
         -->
-    <wsdl:operation name="IEventSource_createListener">
-      <wsdl:input message="vbox:IEventSource_createListenerRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_createListenerResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getContactCount">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactCountRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactCountResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_createAggregator">
-      <wsdl:input message="vbox:IEventSource_createAggregatorRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_createAggregatorResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getXPositions">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getXPositionsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getXPositionsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_registerListener">
-      <wsdl:input message="vbox:IEventSource_registerListenerRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_registerListenerResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getYPositions">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getYPositionsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getYPositionsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_unregisterListener">
-      <wsdl:input message="vbox:IEventSource_unregisterListenerRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_unregisterListenerResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getContactIds">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactIdsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactIdsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_fireEvent">
-      <wsdl:input message="vbox:IEventSource_fireEventRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_fireEventResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getContactFlags">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactFlagsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactFlagsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_getEvent">
-      <wsdl:input message="vbox:IEventSource_getEventRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_getEventResultMsg"/>
+    <wsdl:operation name="IGuestMultiTouchEvent_getScanTime">
+      <wsdl:input message="vbox:IGuestMultiTouchEvent_getScanTimeRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMultiTouchEvent_getScanTimeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEventSource_eventProcessed">
-      <wsdl:input message="vbox:IEventSource_eventProcessedRequestMsg"/>
-      <wsdl:output message="vbox:IEventSource_eventProcessedResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestSessionEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestSessionEvent_getSession">
+      <wsdl:input message="vbox:IGuestSessionEvent_getSessionRequestMsg"/>
+      <wsdl:output message="vbox:IGuestSessionEvent_getSessionResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IEventListener
+          operations in portType for interface IGuestSessionStateChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IEventListener_handleEvent">
-      <wsdl:input message="vbox:IEventListener_handleEventRequestMsg"/>
-      <wsdl:output message="vbox:IEventListener_handleEventResultMsg"/>
+    <wsdl:operation name="IGuestSessionStateChangedEvent_getId">
+      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getIdRequestMsg"/>
+      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getIdResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestSessionStateChangedEvent_getStatus">
+      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getStatusRequestMsg"/>
+      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getStatusResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestSessionStateChangedEvent_getError">
+      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getErrorRequestMsg"/>
+      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getErrorResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IEvent
+          operations in portType for interface IGuestSessionRegisteredEvent
           *************************************
         -->
-    <wsdl:operation name="IEvent_getType">
-      <wsdl:input message="vbox:IEvent_getTypeRequestMsg"/>
-      <wsdl:output message="vbox:IEvent_getTypeResultMsg"/>
+    <wsdl:operation name="IGuestSessionRegisteredEvent_getRegistered">
+      <wsdl:input message="vbox:IGuestSessionRegisteredEvent_getRegisteredRequestMsg"/>
+      <wsdl:output message="vbox:IGuestSessionRegisteredEvent_getRegisteredResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEvent_getSource">
-      <wsdl:input message="vbox:IEvent_getSourceRequestMsg"/>
-      <wsdl:output message="vbox:IEvent_getSourceResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestProcessEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestProcessEvent_getProcess">
+      <wsdl:input message="vbox:IGuestProcessEvent_getProcessRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessEvent_getProcessResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEvent_getWaitable">
-      <wsdl:input message="vbox:IEvent_getWaitableRequestMsg"/>
-      <wsdl:output message="vbox:IEvent_getWaitableResultMsg"/>
+    <wsdl:operation name="IGuestProcessEvent_getPid">
+      <wsdl:input message="vbox:IGuestProcessEvent_getPidRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessEvent_getPidResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEvent_setProcessed">
-      <wsdl:input message="vbox:IEvent_setProcessedRequestMsg"/>
-      <wsdl:output message="vbox:IEvent_setProcessedResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestProcessRegisteredEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestProcessRegisteredEvent_getRegistered">
+      <wsdl:input message="vbox:IGuestProcessRegisteredEvent_getRegisteredRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessRegisteredEvent_getRegisteredResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IGuestProcessStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestProcessStateChangedEvent_getStatus">
+      <wsdl:input message="vbox:IGuestProcessStateChangedEvent_getStatusRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessStateChangedEvent_getStatusResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IEvent_waitProcessed">
-      <wsdl:input message="vbox:IEvent_waitProcessedRequestMsg"/>
-      <wsdl:output message="vbox:IEvent_waitProcessedResultMsg"/>
+    <wsdl:operation name="IGuestProcessStateChangedEvent_getError">
+      <wsdl:input message="vbox:IGuestProcessStateChangedEvent_getErrorRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessStateChangedEvent_getErrorResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IReusableEvent
+          operations in portType for interface IGuestProcessIOEvent
           *************************************
         -->
-    <wsdl:operation name="IReusableEvent_getGeneration">
-      <wsdl:input message="vbox:IReusableEvent_getGenerationRequestMsg"/>
-      <wsdl:output message="vbox:IReusableEvent_getGenerationResultMsg"/>
+    <wsdl:operation name="IGuestProcessIOEvent_getHandle">
+      <wsdl:input message="vbox:IGuestProcessIOEvent_getHandleRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessIOEvent_getHandleResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IReusableEvent_reuse">
-      <wsdl:input message="vbox:IReusableEvent_reuseRequestMsg"/>
-      <wsdl:output message="vbox:IReusableEvent_reuseResultMsg"/>
+    <wsdl:operation name="IGuestProcessIOEvent_getProcessed">
+      <wsdl:input message="vbox:IGuestProcessIOEvent_getProcessedRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessIOEvent_getProcessedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMachineEvent
+          operations in portType for interface IGuestProcessInputNotifyEvent
           *************************************
         -->
-    <wsdl:operation name="IMachineEvent_getMachineId">
-      <wsdl:input message="vbox:IMachineEvent_getMachineIdRequestMsg"/>
-      <wsdl:output message="vbox:IMachineEvent_getMachineIdResultMsg"/>
+    <wsdl:operation name="IGuestProcessInputNotifyEvent_getStatus">
+      <wsdl:input message="vbox:IGuestProcessInputNotifyEvent_getStatusRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessInputNotifyEvent_getStatusResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMachineStateChangedEvent
+          operations in portType for interface IGuestProcessOutputEvent
           *************************************
         -->
-    <wsdl:operation name="IMachineStateChangedEvent_getState">
-      <wsdl:input message="vbox:IMachineStateChangedEvent_getStateRequestMsg"/>
-      <wsdl:output message="vbox:IMachineStateChangedEvent_getStateResultMsg"/>
+    <wsdl:operation name="IGuestProcessOutputEvent_getData">
+      <wsdl:input message="vbox:IGuestProcessOutputEvent_getDataRequestMsg"/>
+      <wsdl:output message="vbox:IGuestProcessOutputEvent_getDataResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMachineDataChangedEvent
+          operations in portType for interface IGuestFileEvent
           *************************************
         -->
-    <wsdl:operation name="IMachineDataChangedEvent_getTemporary">
-      <wsdl:input message="vbox:IMachineDataChangedEvent_getTemporaryRequestMsg"/>
-      <wsdl:output message="vbox:IMachineDataChangedEvent_getTemporaryResultMsg"/>
+    <wsdl:operation name="IGuestFileEvent_getFile">
+      <wsdl:input message="vbox:IGuestFileEvent_getFileRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileEvent_getFileResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMediumRegisteredEvent
+          operations in portType for interface IGuestFileRegisteredEvent
           *************************************
         -->
-    <wsdl:operation name="IMediumRegisteredEvent_getMediumId">
-      <wsdl:input message="vbox:IMediumRegisteredEvent_getMediumIdRequestMsg"/>
-      <wsdl:output message="vbox:IMediumRegisteredEvent_getMediumIdResultMsg"/>
+    <wsdl:operation name="IGuestFileRegisteredEvent_getRegistered">
+      <wsdl:input message="vbox:IGuestFileRegisteredEvent_getRegisteredRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileRegisteredEvent_getRegisteredResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMediumRegisteredEvent_getMediumType">
-      <wsdl:input message="vbox:IMediumRegisteredEvent_getMediumTypeRequestMsg"/>
-      <wsdl:output message="vbox:IMediumRegisteredEvent_getMediumTypeResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IGuestFileStateChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IGuestFileStateChangedEvent_getStatus">
+      <wsdl:input message="vbox:IGuestFileStateChangedEvent_getStatusRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileStateChangedEvent_getStatusResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMediumRegisteredEvent_getRegistered">
-      <wsdl:input message="vbox:IMediumRegisteredEvent_getRegisteredRequestMsg"/>
-      <wsdl:output message="vbox:IMediumRegisteredEvent_getRegisteredResultMsg"/>
+    <wsdl:operation name="IGuestFileStateChangedEvent_getError">
+      <wsdl:input message="vbox:IGuestFileStateChangedEvent_getErrorRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileStateChangedEvent_getErrorResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMediumConfigChangedEvent
+          operations in portType for interface IGuestFileIOEvent
           *************************************
         -->
-    <wsdl:operation name="IMediumConfigChangedEvent_getMedium">
-      <wsdl:input message="vbox:IMediumConfigChangedEvent_getMediumRequestMsg"/>
-      <wsdl:output message="vbox:IMediumConfigChangedEvent_getMediumResultMsg"/>
+    <wsdl:operation name="IGuestFileIOEvent_getOffset">
+      <wsdl:input message="vbox:IGuestFileIOEvent_getOffsetRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileIOEvent_getOffsetResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IMachineRegisteredEvent
-          *************************************
-        -->
-    <wsdl:operation name="IMachineRegisteredEvent_getRegistered">
-      <wsdl:input message="vbox:IMachineRegisteredEvent_getRegisteredRequestMsg"/>
-      <wsdl:output message="vbox:IMachineRegisteredEvent_getRegisteredResultMsg"/>
+    <wsdl:operation name="IGuestFileIOEvent_getProcessed">
+      <wsdl:input message="vbox:IGuestFileIOEvent_getProcessedRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileIOEvent_getProcessedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISessionStateChangedEvent
+          operations in portType for interface IGuestFileOffsetChangedEvent
           *************************************
         -->
-    <wsdl:operation name="ISessionStateChangedEvent_getState">
-      <wsdl:input message="vbox:ISessionStateChangedEvent_getStateRequestMsg"/>
-      <wsdl:output message="vbox:ISessionStateChangedEvent_getStateResultMsg"/>
+    <wsdl:operation name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestPropertyChangedEvent
+          operations in portType for interface IGuestFileReadEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestPropertyChangedEvent_getName">
-      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getNameRequestMsg"/>
-      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getNameResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IGuestPropertyChangedEvent_getValue">
-      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getValueRequestMsg"/>
-      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getValueResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IGuestPropertyChangedEvent_getFlags">
-      <wsdl:input message="vbox:IGuestPropertyChangedEvent_getFlagsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestPropertyChangedEvent_getFlagsResultMsg"/>
+    <wsdl:operation name="IGuestFileReadEvent_getData">
+      <wsdl:input message="vbox:IGuestFileReadEvent_getDataRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileReadEvent_getDataResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISnapshotEvent
+          operations in portType for interface IGuestFileWriteEvent
           *************************************
         -->
-    <wsdl:operation name="ISnapshotEvent_getSnapshotId">
-      <wsdl:input message="vbox:ISnapshotEvent_getSnapshotIdRequestMsg"/>
-      <wsdl:output message="vbox:ISnapshotEvent_getSnapshotIdResultMsg"/>
+    <wsdl:operation name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISnapshotTakenEvent
+          operations in portType for interface IVRDEServerChangedEvent
           *************************************
         -->
-    <wsdl:operation name="ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:ISnapshotTakenEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISnapshotDeletedEvent
+          operations in portType for interface IVRDEServerInfoChangedEvent
           *************************************
         -->
-    <wsdl:operation name="ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:ISnapshotDeletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISnapshotRestoredEvent
+          operations in portType for interface IVideoCaptureChangedEvent
           *************************************
         -->
-    <wsdl:operation name="ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:ISnapshotRestoredEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISnapshotChangedEvent
+          operations in portType for interface IUSBControllerChangedEvent
           *************************************
         -->
-    <wsdl:operation name="ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:ISnapshotChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMousePointerShapeChangedEvent
+          operations in portType for interface IUSBDeviceStateChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getVisible">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getVisibleRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getVisibleResultMsg"/>
+    <wsdl:operation name="IUSBDeviceStateChangedEvent_getDevice">
+      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getDeviceRequestMsg"/>
+      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getDeviceResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getAlpha">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getAlphaRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getAlphaResultMsg"/>
+    <wsdl:operation name="IUSBDeviceStateChangedEvent_getAttached">
+      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getAttachedRequestMsg"/>
+      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getAttachedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getXhot">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getXhotRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getXhotResultMsg"/>
+    <wsdl:operation name="IUSBDeviceStateChangedEvent_getError">
+      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getErrorRequestMsg"/>
+      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getErrorResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getYhot">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getYhotRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getYhotResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface ISharedFolderChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="ISharedFolderChangedEvent_getScope">
+      <wsdl:input message="vbox:ISharedFolderChangedEvent_getScopeRequestMsg"/>
+      <wsdl:output message="vbox:ISharedFolderChangedEvent_getScopeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getWidth">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getWidthRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getWidthResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IRuntimeErrorEvent
+          *************************************
+        -->
+    <wsdl:operation name="IRuntimeErrorEvent_getFatal">
+      <wsdl:input message="vbox:IRuntimeErrorEvent_getFatalRequestMsg"/>
+      <wsdl:output message="vbox:IRuntimeErrorEvent_getFatalResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getHeight">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getHeightRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getHeightResultMsg"/>
+    <wsdl:operation name="IRuntimeErrorEvent_getId">
+      <wsdl:input message="vbox:IRuntimeErrorEvent_getIdRequestMsg"/>
+      <wsdl:output message="vbox:IRuntimeErrorEvent_getIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMousePointerShapeChangedEvent_getShape">
-      <wsdl:input message="vbox:IMousePointerShapeChangedEvent_getShapeRequestMsg"/>
-      <wsdl:output message="vbox:IMousePointerShapeChangedEvent_getShapeResultMsg"/>
+    <wsdl:operation name="IRuntimeErrorEvent_getMessage">
+      <wsdl:input message="vbox:IRuntimeErrorEvent_getMessageRequestMsg"/>
+      <wsdl:output message="vbox:IRuntimeErrorEvent_getMessageResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMouseCapabilityChangedEvent
+          operations in portType for interface IEventSourceChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsAbsolute">
-      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsAbsoluteRequestMsg"/>
-      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsAbsoluteResultMsg"/>
+    <wsdl:operation name="IEventSourceChangedEvent_getListener">
+      <wsdl:input message="vbox:IEventSourceChangedEvent_getListenerRequestMsg"/>
+      <wsdl:output message="vbox:IEventSourceChangedEvent_getListenerResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsRelative">
-      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsRelativeRequestMsg"/>
-      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsRelativeResultMsg"/>
+    <wsdl:operation name="IEventSourceChangedEvent_getAdd">
+      <wsdl:input message="vbox:IEventSourceChangedEvent_getAddRequestMsg"/>
+      <wsdl:output message="vbox:IEventSourceChangedEvent_getAddResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMouseCapabilityChangedEvent_getSupportsMultiTouch">
-      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getSupportsMultiTouchRequestMsg"/>
-      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getSupportsMultiTouchResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IExtraDataChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IExtraDataChangedEvent_getMachineId">
+      <wsdl:input message="vbox:IExtraDataChangedEvent_getMachineIdRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataChangedEvent_getMachineIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IMouseCapabilityChangedEvent_getNeedsHostCursor">
-      <wsdl:input message="vbox:IMouseCapabilityChangedEvent_getNeedsHostCursorRequestMsg"/>
-      <wsdl:output message="vbox:IMouseCapabilityChangedEvent_getNeedsHostCursorResultMsg"/>
+    <wsdl:operation name="IExtraDataChangedEvent_getKey">
+      <wsdl:input message="vbox:IExtraDataChangedEvent_getKeyRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataChangedEvent_getKeyResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="IExtraDataChangedEvent_getValue">
+      <wsdl:input message="vbox:IExtraDataChangedEvent_getValueRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataChangedEvent_getValueResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IKeyboardLedsChangedEvent
+          operations in portType for interface IVetoEvent
           *************************************
         -->
-    <wsdl:operation name="IKeyboardLedsChangedEvent_getNumLock">
-      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getNumLockRequestMsg"/>
-      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getNumLockResultMsg"/>
+    <wsdl:operation name="IVetoEvent_addVeto">
+      <wsdl:input message="vbox:IVetoEvent_addVetoRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_addVetoResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IKeyboardLedsChangedEvent_getCapsLock">
-      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getCapsLockRequestMsg"/>
-      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getCapsLockResultMsg"/>
+    <wsdl:operation name="IVetoEvent_isVetoed">
+      <wsdl:input message="vbox:IVetoEvent_isVetoedRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_isVetoedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IKeyboardLedsChangedEvent_getScrollLock">
-      <wsdl:input message="vbox:IKeyboardLedsChangedEvent_getScrollLockRequestMsg"/>
-      <wsdl:output message="vbox:IKeyboardLedsChangedEvent_getScrollLockResultMsg"/>
+    <wsdl:operation name="IVetoEvent_getVetos">
+      <wsdl:input message="vbox:IVetoEvent_getVetosRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_getVetosResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IStateChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IStateChangedEvent_getState">
-      <wsdl:input message="vbox:IStateChangedEvent_getStateRequestMsg"/>
-      <wsdl:output message="vbox:IStateChangedEvent_getStateResultMsg"/>
+    <wsdl:operation name="IVetoEvent_addApproval">
+      <wsdl:input message="vbox:IVetoEvent_addApprovalRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_addApprovalResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IAdditionsStateChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IAdditionsStateChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IVetoEvent_isApproved">
+      <wsdl:input message="vbox:IVetoEvent_isApprovedRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_isApprovedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INetworkAdapterChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="INetworkAdapterChangedEvent_getNetworkAdapter">
-      <wsdl:input message="vbox:INetworkAdapterChangedEvent_getNetworkAdapterRequestMsg"/>
-      <wsdl:output message="vbox:INetworkAdapterChangedEvent_getNetworkAdapterResultMsg"/>
+    <wsdl:operation name="IVetoEvent_getApprovals">
+      <wsdl:input message="vbox:IVetoEvent_getApprovalsRequestMsg"/>
+      <wsdl:output message="vbox:IVetoEvent_getApprovalsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISerialPortChangedEvent
+          operations in portType for interface IExtraDataCanChangeEvent
           *************************************
         -->
-    <wsdl:operation name="ISerialPortChangedEvent_getSerialPort">
-      <wsdl:input message="vbox:ISerialPortChangedEvent_getSerialPortRequestMsg"/>
-      <wsdl:output message="vbox:ISerialPortChangedEvent_getSerialPortResultMsg"/>
+    <wsdl:operation name="IExtraDataCanChangeEvent_getMachineId">
+      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getMachineIdRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getMachineIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IParallelPortChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IParallelPortChangedEvent_getParallelPort">
-      <wsdl:input message="vbox:IParallelPortChangedEvent_getParallelPortRequestMsg"/>
-      <wsdl:output message="vbox:IParallelPortChangedEvent_getParallelPortResultMsg"/>
+    <wsdl:operation name="IExtraDataCanChangeEvent_getKey">
+      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getKeyRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getKeyResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IStorageControllerChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IStorageControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IExtraDataCanChangeEvent_getValue">
+      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getValueRequestMsg"/>
+      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getValueResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IMediumChangedEvent
+          operations in portType for interface ICanShowWindowEvent
           *************************************
         -->
-    <wsdl:operation name="IMediumChangedEvent_getMediumAttachment">
-      <wsdl:input message="vbox:IMediumChangedEvent_getMediumAttachmentRequestMsg"/>
-      <wsdl:output message="vbox:IMediumChangedEvent_getMediumAttachmentResultMsg"/>
+    <wsdl:operation name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IClipboardModeChangedEvent
+          operations in portType for interface IShowWindowEvent
           *************************************
         -->
-    <wsdl:operation name="IClipboardModeChangedEvent_getClipboardMode">
-      <wsdl:input message="vbox:IClipboardModeChangedEvent_getClipboardModeRequestMsg"/>
-      <wsdl:output message="vbox:IClipboardModeChangedEvent_getClipboardModeResultMsg"/>
+    <wsdl:operation name="IShowWindowEvent_getWinId">
+      <wsdl:input message="vbox:IShowWindowEvent_getWinIdRequestMsg"/>
+      <wsdl:output message="vbox:IShowWindowEvent_getWinIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IDnDModeChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IDnDModeChangedEvent_getDndMode">
-      <wsdl:input message="vbox:IDnDModeChangedEvent_getDndModeRequestMsg"/>
-      <wsdl:output message="vbox:IDnDModeChangedEvent_getDndModeResultMsg"/>
+    <wsdl:operation name="IShowWindowEvent_setWinId">
+      <wsdl:input message="vbox:IShowWindowEvent_setWinIdRequestMsg"/>
+      <wsdl:output message="vbox:IShowWindowEvent_setWinIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ICPUChangedEvent
+          operations in portType for interface INATRedirectEvent
           *************************************
         -->
-    <wsdl:operation name="ICPUChangedEvent_getCPU">
-      <wsdl:input message="vbox:ICPUChangedEvent_getCPURequestMsg"/>
-      <wsdl:output message="vbox:ICPUChangedEvent_getCPUResultMsg"/>
+    <wsdl:operation name="INATRedirectEvent_getSlot">
+      <wsdl:input message="vbox:INATRedirectEvent_getSlotRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getSlotResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="ICPUChangedEvent_getAdd">
-      <wsdl:input message="vbox:ICPUChangedEvent_getAddRequestMsg"/>
-      <wsdl:output message="vbox:ICPUChangedEvent_getAddResultMsg"/>
+    <wsdl:operation name="INATRedirectEvent_getRemove">
+      <wsdl:input message="vbox:INATRedirectEvent_getRemoveRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getRemoveResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface ICPUExecutionCapChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="ICPUExecutionCapChangedEvent_getExecutionCap">
-      <wsdl:input message="vbox:ICPUExecutionCapChangedEvent_getExecutionCapRequestMsg"/>
-      <wsdl:output message="vbox:ICPUExecutionCapChangedEvent_getExecutionCapResultMsg"/>
+    <wsdl:operation name="INATRedirectEvent_getName">
+      <wsdl:input message="vbox:INATRedirectEvent_getNameRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getNameResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestKeyboardEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestKeyboardEvent_getScancodes">
-      <wsdl:input message="vbox:IGuestKeyboardEvent_getScancodesRequestMsg"/>
-      <wsdl:output message="vbox:IGuestKeyboardEvent_getScancodesResultMsg"/>
+    <wsdl:operation name="INATRedirectEvent_getProto">
+      <wsdl:input message="vbox:INATRedirectEvent_getProtoRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getProtoResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATRedirectEvent_getHostIP">
+      <wsdl:input message="vbox:INATRedirectEvent_getHostIPRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getHostIPResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATRedirectEvent_getHostPort">
+      <wsdl:input message="vbox:INATRedirectEvent_getHostPortRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getHostPortResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATRedirectEvent_getGuestIP">
+      <wsdl:input message="vbox:INATRedirectEvent_getGuestIPRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getGuestIPResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATRedirectEvent_getGuestPort">
+      <wsdl:input message="vbox:INATRedirectEvent_getGuestPortRequestMsg"/>
+      <wsdl:output message="vbox:INATRedirectEvent_getGuestPortResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestMouseEvent
+          operations in portType for interface IHostPCIDevicePlugEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestMouseEvent_getMode">
-      <wsdl:input message="vbox:IGuestMouseEvent_getModeRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getModeResultMsg"/>
+    <wsdl:operation name="IHostPCIDevicePlugEvent_getPlugged">
+      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getPluggedRequestMsg"/>
+      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getPluggedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMouseEvent_getX">
-      <wsdl:input message="vbox:IGuestMouseEvent_getXRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getXResultMsg"/>
+    <wsdl:operation name="IHostPCIDevicePlugEvent_getSuccess">
+      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getSuccessRequestMsg"/>
+      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getSuccessResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMouseEvent_getY">
-      <wsdl:input message="vbox:IGuestMouseEvent_getYRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getYResultMsg"/>
+    <wsdl:operation name="IHostPCIDevicePlugEvent_getAttachment">
+      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getAttachmentRequestMsg"/>
+      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getAttachmentResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMouseEvent_getZ">
-      <wsdl:input message="vbox:IGuestMouseEvent_getZRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getZResultMsg"/>
+    <wsdl:operation name="IHostPCIDevicePlugEvent_getMessage">
+      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getMessageRequestMsg"/>
+      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getMessageResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMouseEvent_getW">
-      <wsdl:input message="vbox:IGuestMouseEvent_getWRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getWResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IVBoxSVCAvailabilityChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IVBoxSVCAvailabilityChangedEvent_getAvailable">
+      <wsdl:input message="vbox:IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg"/>
+      <wsdl:output message="vbox:IVBoxSVCAvailabilityChangedEvent_getAvailableResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMouseEvent_getButtons">
-      <wsdl:input message="vbox:IGuestMouseEvent_getButtonsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMouseEvent_getButtonsResultMsg"/>
+    <!--
+          *************************************
+          operations in portType for interface IBandwidthGroupChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IBandwidthGroupChangedEvent_getBandwidthGroup">
+      <wsdl:input message="vbox:IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg"/>
+      <wsdl:output message="vbox:IBandwidthGroupChangedEvent_getBandwidthGroupResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestMultiTouchEvent
+          operations in portType for interface IGuestMonitorChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestMultiTouchEvent_getContactCount">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactCountRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactCountResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getChangeType">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getChangeTypeRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getChangeTypeResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMultiTouchEvent_getXPositions">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getXPositionsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getXPositionsResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getScreenId">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getScreenIdRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getScreenIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMultiTouchEvent_getYPositions">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getYPositionsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getYPositionsResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getOriginX">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getOriginXRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getOriginXResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMultiTouchEvent_getContactIds">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactIdsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactIdsResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getOriginY">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getOriginYRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getOriginYResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMultiTouchEvent_getContactFlags">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getContactFlagsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getContactFlagsResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getWidth">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getWidthRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getWidthResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMultiTouchEvent_getScanTime">
-      <wsdl:input message="vbox:IGuestMultiTouchEvent_getScanTimeRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMultiTouchEvent_getScanTimeResultMsg"/>
+    <wsdl:operation name="IGuestMonitorChangedEvent_getHeight">
+      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getHeightRequestMsg"/>
+      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getHeightResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestSessionEvent
+          operations in portType for interface IGuestUserStateChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestSessionEvent_getSession">
-      <wsdl:input message="vbox:IGuestSessionEvent_getSessionRequestMsg"/>
-      <wsdl:output message="vbox:IGuestSessionEvent_getSessionResultMsg"/>
+    <wsdl:operation name="IGuestUserStateChangedEvent_getName">
+      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getNameRequestMsg"/>
+      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getNameResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestSessionStateChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestSessionStateChangedEvent_getId">
-      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getIdRequestMsg"/>
-      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getIdResultMsg"/>
+    <wsdl:operation name="IGuestUserStateChangedEvent_getDomain">
+      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getDomainRequestMsg"/>
+      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getDomainResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestSessionStateChangedEvent_getStatus">
-      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getStatusRequestMsg"/>
-      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getStatusResultMsg"/>
+    <wsdl:operation name="IGuestUserStateChangedEvent_getState">
+      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getStateRequestMsg"/>
+      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getStateResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestSessionStateChangedEvent_getError">
-      <wsdl:input message="vbox:IGuestSessionStateChangedEvent_getErrorRequestMsg"/>
-      <wsdl:output message="vbox:IGuestSessionStateChangedEvent_getErrorResultMsg"/>
+    <wsdl:operation name="IGuestUserStateChangedEvent_getStateDetails">
+      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getStateDetailsRequestMsg"/>
+      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getStateDetailsResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestSessionRegisteredEvent
+          operations in portType for interface IStorageDeviceChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestSessionRegisteredEvent_getRegistered">
-      <wsdl:input message="vbox:IGuestSessionRegisteredEvent_getRegisteredRequestMsg"/>
-      <wsdl:output message="vbox:IGuestSessionRegisteredEvent_getRegisteredResultMsg"/>
+    <wsdl:operation name="IStorageDeviceChangedEvent_getStorageDevice">
+      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getStorageDeviceRequestMsg"/>
+      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getStorageDeviceResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestProcessEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestProcessEvent_getProcess">
-      <wsdl:input message="vbox:IGuestProcessEvent_getProcessRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessEvent_getProcessResultMsg"/>
+    <wsdl:operation name="IStorageDeviceChangedEvent_getRemoved">
+      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getRemovedRequestMsg"/>
+      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getRemovedResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestProcessEvent_getPid">
-      <wsdl:input message="vbox:IGuestProcessEvent_getPidRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessEvent_getPidResultMsg"/>
+    <wsdl:operation name="IStorageDeviceChangedEvent_getSilent">
+      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getSilentRequestMsg"/>
+      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getSilentResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestProcessRegisteredEvent
+          operations in portType for interface INATNetworkChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestProcessRegisteredEvent_getRegistered">
-      <wsdl:input message="vbox:IGuestProcessRegisteredEvent_getRegisteredRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessRegisteredEvent_getRegisteredResultMsg"/>
+    <wsdl:operation name="INATNetworkChangedEvent_getNetworkName">
+      <wsdl:input message="vbox:INATNetworkChangedEvent_getNetworkNameRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkChangedEvent_getNetworkNameResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestProcessStateChangedEvent
+          operations in portType for interface INATNetworkStartStopEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestProcessStateChangedEvent_getStatus">
-      <wsdl:input message="vbox:IGuestProcessStateChangedEvent_getStatusRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessStateChangedEvent_getStatusResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IGuestProcessStateChangedEvent_getError">
-      <wsdl:input message="vbox:IGuestProcessStateChangedEvent_getErrorRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessStateChangedEvent_getErrorResultMsg"/>
+    <wsdl:operation name="INATNetworkStartStopEvent_getStartEvent">
+      <wsdl:input message="vbox:INATNetworkStartStopEvent_getStartEventRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkStartStopEvent_getStartEventResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestProcessIOEvent
+          operations in portType for interface INATNetworkAlterEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestProcessIOEvent_getHandle">
-      <wsdl:input message="vbox:IGuestProcessIOEvent_getHandleRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessIOEvent_getHandleResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IGuestProcessIOEvent_getProcessed">
-      <wsdl:input message="vbox:IGuestProcessIOEvent_getProcessedRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessIOEvent_getProcessedResultMsg"/>
+    <wsdl:operation name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestProcessInputNotifyEvent
+          operations in portType for interface INATNetworkCreationDeletionEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestProcessInputNotifyEvent_getStatus">
-      <wsdl:input message="vbox:IGuestProcessInputNotifyEvent_getStatusRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessInputNotifyEvent_getStatusResultMsg"/>
+    <wsdl:operation name="INATNetworkCreationDeletionEvent_getCreationEvent">
+      <wsdl:input message="vbox:INATNetworkCreationDeletionEvent_getCreationEventRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkCreationDeletionEvent_getCreationEventResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestProcessOutputEvent
+          operations in portType for interface INATNetworkSettingEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestProcessOutputEvent_getData">
-      <wsdl:input message="vbox:IGuestProcessOutputEvent_getDataRequestMsg"/>
-      <wsdl:output message="vbox:IGuestProcessOutputEvent_getDataResultMsg"/>
+    <wsdl:operation name="INATNetworkSettingEvent_getEnabled">
+      <wsdl:input message="vbox:INATNetworkSettingEvent_getEnabledRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkSettingEvent_getEnabledResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileEvent_getFile">
-      <wsdl:input message="vbox:IGuestFileEvent_getFileRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileEvent_getFileResultMsg"/>
+    <wsdl:operation name="INATNetworkSettingEvent_getNetwork">
+      <wsdl:input message="vbox:INATNetworkSettingEvent_getNetworkRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkSettingEvent_getNetworkResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileRegisteredEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileRegisteredEvent_getRegistered">
-      <wsdl:input message="vbox:IGuestFileRegisteredEvent_getRegisteredRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileRegisteredEvent_getRegisteredResultMsg"/>
+    <wsdl:operation name="INATNetworkSettingEvent_getGateway">
+      <wsdl:input message="vbox:INATNetworkSettingEvent_getGatewayRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkSettingEvent_getGatewayResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileStateChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileStateChangedEvent_getStatus">
-      <wsdl:input message="vbox:IGuestFileStateChangedEvent_getStatusRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileStateChangedEvent_getStatusResultMsg"/>
+    <wsdl:operation name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled">
+      <wsdl:input message="vbox:INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestFileStateChangedEvent_getError">
-      <wsdl:input message="vbox:IGuestFileStateChangedEvent_getErrorRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileStateChangedEvent_getErrorResultMsg"/>
+    <wsdl:operation name="INATNetworkSettingEvent_getNeedDhcpServer">
+      <wsdl:input message="vbox:INATNetworkSettingEvent_getNeedDhcpServerRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkSettingEvent_getNeedDhcpServerResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestFileIOEvent
+          operations in portType for interface INATNetworkPortForwardEvent
           *************************************
         -->
-    <wsdl:operation name="IGuestFileIOEvent_getOffset">
-      <wsdl:input message="vbox:IGuestFileIOEvent_getOffsetRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileIOEvent_getOffsetResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getCreate">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getCreateRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getCreateResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <wsdl:operation name="IGuestFileIOEvent_getProcessed">
-      <wsdl:input message="vbox:IGuestFileIOEvent_getProcessedRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileIOEvent_getProcessedResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getIpv6">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getIpv6RequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getIpv6ResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileOffsetChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileOffsetChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getName">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getNameRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getNameResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileReadEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileReadEvent_getData">
-      <wsdl:input message="vbox:IGuestFileReadEvent_getDataRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileReadEvent_getDataResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getProto">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getProtoRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getProtoResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestFileWriteEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IGuestFileWriteEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getHostIp">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getHostIpRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getHostIpResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVRDEServerChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IVRDEServerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getHostPort">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getHostPortRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getHostPortResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVRDEServerInfoChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IVRDEServerInfoChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getGuestIp">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getGuestIpRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getGuestIpResultMsg"/>
+      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
+      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetworkPortForwardEvent_getGuestPort">
+      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getGuestPortRequestMsg"/>
+      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getGuestPortResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IVideoCaptureChangedEvent
+          operations in portType for interface IHostNameResolutionConfigurationChangeEvent
           *************************************
         -->
-    <wsdl:operation name="IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IVideoCaptureChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IUSBControllerChangedEvent
+          operations in portType for interface IProgressEvent
           *************************************
         -->
-    <wsdl:operation name="IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IUSBControllerChangedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
+    <wsdl:operation name="IProgressEvent_getProgressId">
+      <wsdl:input message="vbox:IProgressEvent_getProgressIdRequestMsg"/>
+      <wsdl:output message="vbox:IProgressEvent_getProgressIdResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IUSBDeviceStateChangedEvent
+          operations in portType for interface IProgressPercentageChangedEvent
           *************************************
         -->
-    <wsdl:operation name="IUSBDeviceStateChangedEvent_getDevice">
-      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getDeviceRequestMsg"/>
-      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getDeviceResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IUSBDeviceStateChangedEvent_getAttached">
-      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getAttachedRequestMsg"/>
-      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getAttachedResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="IUSBDeviceStateChangedEvent_getError">
-      <wsdl:input message="vbox:IUSBDeviceStateChangedEvent_getErrorRequestMsg"/>
-      <wsdl:output message="vbox:IUSBDeviceStateChangedEvent_getErrorResultMsg"/>
+    <wsdl:operation name="IProgressPercentageChangedEvent_getPercent">
+      <wsdl:input message="vbox:IProgressPercentageChangedEvent_getPercentRequestMsg"/>
+      <wsdl:output message="vbox:IProgressPercentageChangedEvent_getPercentResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface ISharedFolderChangedEvent
+          operations in portType for interface IProgressTaskCompletedEvent
           *************************************
         -->
-    <wsdl:operation name="ISharedFolderChangedEvent_getScope">
-      <wsdl:input message="vbox:ISharedFolderChangedEvent_getScopeRequestMsg"/>
-      <wsdl:output message="vbox:ISharedFolderChangedEvent_getScopeResultMsg"/>
+    <wsdl:operation name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <wsdl:input message="vbox:IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
+      <wsdl:output message="vbox:IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
       <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
       <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
     </wsdl:operation>
+  </wsdl:portType>
+  <!--
+      ******************************************************
+      *
+      * one binding for all interfaces
+      *
+      ******************************************************
+    -->
+  <wsdl:binding name="vboxBinding" type="vbox:vboxPortType">
+    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
     <!--
           *************************************
-          operations in portType for interface IRuntimeErrorEvent
+          operations in portType for interface IVirtualBoxErrorInfo
           *************************************
         -->
-    <wsdl:operation name="IRuntimeErrorEvent_getFatal">
-      <wsdl:input message="vbox:IRuntimeErrorEvent_getFatalRequestMsg"/>
-      <wsdl:output message="vbox:IRuntimeErrorEvent_getFatalResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getResultCode">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IRuntimeErrorEvent_getId">
-      <wsdl:input message="vbox:IRuntimeErrorEvent_getIdRequestMsg"/>
-      <wsdl:output message="vbox:IRuntimeErrorEvent_getIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getResultDetail">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IRuntimeErrorEvent_getMessage">
-      <wsdl:input message="vbox:IRuntimeErrorEvent_getMessageRequestMsg"/>
-      <wsdl:output message="vbox:IRuntimeErrorEvent_getMessageResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getInterfaceID">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getComponent">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getText">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IVirtualBoxErrorInfo_getNext">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IEventSourceChangedEvent
+          operations in portType for interface INATNetwork
           *************************************
         -->
-    <wsdl:operation name="IEventSourceChangedEvent_getListener">
-      <wsdl:input message="vbox:IEventSourceChangedEvent_getListenerRequestMsg"/>
-      <wsdl:output message="vbox:IEventSourceChangedEvent_getListenerResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getNetworkName">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_setNetworkName">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_getEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_setEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_getNetwork">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_setNetwork">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_getGateway">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_getIPv6Enabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_setIPv6Enabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="INATNetwork_getIPv6Prefix">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IEventSourceChangedEvent_getAdd">
-      <wsdl:input message="vbox:IEventSourceChangedEvent_getAddRequestMsg"/>
-      <wsdl:output message="vbox:IEventSourceChangedEvent_getAddResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_setIPv6Prefix">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IExtraDataChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IExtraDataChangedEvent_getMachineId">
-      <wsdl:input message="vbox:IExtraDataChangedEvent_getMachineIdRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataChangedEvent_getMachineIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getAdvertiseDefaultIPv6RouteEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IExtraDataChangedEvent_getKey">
-      <wsdl:input message="vbox:IExtraDataChangedEvent_getKeyRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataChangedEvent_getKeyResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_setAdvertiseDefaultIPv6RouteEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IExtraDataChangedEvent_getValue">
-      <wsdl:input message="vbox:IExtraDataChangedEvent_getValueRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataChangedEvent_getValueResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getNeedDhcpServer">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVetoEvent
-          *************************************
-        -->
-    <wsdl:operation name="IVetoEvent_addVeto">
-      <wsdl:input message="vbox:IVetoEvent_addVetoRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_addVetoResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_setNeedDhcpServer">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVetoEvent_isVetoed">
-      <wsdl:input message="vbox:IVetoEvent_isVetoedRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_isVetoedResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getEventSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVetoEvent_getVetos">
-      <wsdl:input message="vbox:IVetoEvent_getVetosRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_getVetosResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getPortForwardRules4">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVetoEvent_addApproval">
-      <wsdl:input message="vbox:IVetoEvent_addApprovalRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_addApprovalResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getLocalMappings">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVetoEvent_isApproved">
-      <wsdl:input message="vbox:IVetoEvent_isApprovedRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_isApprovedResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getLoopbackIp6">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVetoEvent_getApprovals">
-      <wsdl:input message="vbox:IVetoEvent_getApprovalsRequestMsg"/>
-      <wsdl:output message="vbox:IVetoEvent_getApprovalsResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_setLoopbackIp6">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IExtraDataCanChangeEvent
-          *************************************
-        -->
-    <wsdl:operation name="IExtraDataCanChangeEvent_getMachineId">
-      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getMachineIdRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getMachineIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_getPortForwardRules6">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IExtraDataCanChangeEvent_getKey">
-      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getKeyRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getKeyResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_addLocalMapping">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IExtraDataCanChangeEvent_getValue">
-      <wsdl:input message="vbox:IExtraDataCanChangeEvent_getValueRequestMsg"/>
-      <wsdl:output message="vbox:IExtraDataCanChangeEvent_getValueResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_addPortForwardRule">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface ICanShowWindowEvent
-          *************************************
-        -->
-    <wsdl:operation name="ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:ICanShowWindowEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_removePortForwardRule">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IShowWindowEvent
-          *************************************
-        -->
-    <wsdl:operation name="IShowWindowEvent_getWinId">
-      <wsdl:input message="vbox:IShowWindowEvent_getWinIdRequestMsg"/>
-      <wsdl:output message="vbox:IShowWindowEvent_getWinIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_start">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IShowWindowEvent_setWinId">
-      <wsdl:input message="vbox:IShowWindowEvent_setWinIdRequestMsg"/>
-      <wsdl:output message="vbox:IShowWindowEvent_setWinIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="INATNetwork_stop">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface INATRedirectEvent
+          operations in portType for interface IDHCPServer
           *************************************
         -->
-    <wsdl:operation name="INATRedirectEvent_getSlot">
-      <wsdl:input message="vbox:INATRedirectEvent_getSlotRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getSlotResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getRemove">
-      <wsdl:input message="vbox:INATRedirectEvent_getRemoveRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getRemoveResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
-    </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getName">
-      <wsdl:input message="vbox:INATRedirectEvent_getNameRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getNameResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getEventSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getProto">
-      <wsdl:input message="vbox:INATRedirectEvent_getProtoRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getProtoResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getHostIP">
-      <wsdl:input message="vbox:INATRedirectEvent_getHostIPRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getHostIPResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_setEnabled">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getHostPort">
-      <wsdl:input message="vbox:INATRedirectEvent_getHostPortRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getHostPortResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getIPAddress">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getGuestIP">
-      <wsdl:input message="vbox:INATRedirectEvent_getGuestIPRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getGuestIPResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getNetworkMask">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATRedirectEvent_getGuestPort">
-      <wsdl:input message="vbox:INATRedirectEvent_getGuestPortRequestMsg"/>
-      <wsdl:output message="vbox:INATRedirectEvent_getGuestPortResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getNetworkName">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IHostPCIDevicePlugEvent
-          *************************************
-        -->
-    <wsdl:operation name="IHostPCIDevicePlugEvent_getPlugged">
-      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getPluggedRequestMsg"/>
-      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getPluggedResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getLowerIP">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IHostPCIDevicePlugEvent_getSuccess">
-      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getSuccessRequestMsg"/>
-      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getSuccessResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getUpperIP">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IHostPCIDevicePlugEvent_getAttachment">
-      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getAttachmentRequestMsg"/>
-      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getAttachmentResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getGlobalOptions">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IHostPCIDevicePlugEvent_getMessage">
-      <wsdl:input message="vbox:IHostPCIDevicePlugEvent_getMessageRequestMsg"/>
-      <wsdl:output message="vbox:IHostPCIDevicePlugEvent_getMessageResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getVmConfigs">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVBoxSVCAvailabilityChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IVBoxSVCAvailabilityChangedEvent_getAvailable">
-      <wsdl:input message="vbox:IVBoxSVCAvailabilityChangedEvent_getAvailableRequestMsg"/>
-      <wsdl:output message="vbox:IVBoxSVCAvailabilityChangedEvent_getAvailableResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_addGlobalOption">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IBandwidthGroupChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IBandwidthGroupChangedEvent_getBandwidthGroup">
-      <wsdl:input message="vbox:IBandwidthGroupChangedEvent_getBandwidthGroupRequestMsg"/>
-      <wsdl:output message="vbox:IBandwidthGroupChangedEvent_getBandwidthGroupResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_addVmSlotOption">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IGuestMonitorChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IGuestMonitorChangedEvent_getChangeType">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getChangeTypeRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getChangeTypeResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_removeVmSlotOptions">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMonitorChangedEvent_getScreenId">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getScreenIdRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getScreenIdResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getVmSlotOptions">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMonitorChangedEvent_getOriginX">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getOriginXRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getOriginXResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_getMacOptions">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMonitorChangedEvent_getOriginY">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getOriginYRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getOriginYResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_setConfiguration">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMonitorChangedEvent_getWidth">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getWidthRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getWidthResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_start">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestMonitorChangedEvent_getHeight">
-      <wsdl:input message="vbox:IGuestMonitorChangedEvent_getHeightRequestMsg"/>
-      <wsdl:output message="vbox:IGuestMonitorChangedEvent_getHeightResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IDHCPServer_stop">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IGuestUserStateChangedEvent
+          operations in portType for interface IVirtualBox
           *************************************
         -->
-    <wsdl:operation name="IGuestUserStateChangedEvent_getName">
-      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getNameRequestMsg"/>
-      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getNameResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getVersion">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestUserStateChangedEvent_getDomain">
-      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getDomainRequestMsg"/>
-      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getDomainResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getVersionNormalized">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestUserStateChangedEvent_getState">
-      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getStateRequestMsg"/>
-      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getStateResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getRevision">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IGuestUserStateChangedEvent_getStateDetails">
-      <wsdl:input message="vbox:IGuestUserStateChangedEvent_getStateDetailsRequestMsg"/>
-      <wsdl:output message="vbox:IGuestUserStateChangedEvent_getStateDetailsResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getPackageType">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IStorageDeviceChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="IStorageDeviceChangedEvent_getStorageDevice">
-      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getStorageDeviceRequestMsg"/>
-      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getStorageDeviceResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getAPIVersion">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IStorageDeviceChangedEvent_getRemoved">
-      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getRemovedRequestMsg"/>
-      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getRemovedResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getAPIRevision">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IStorageDeviceChangedEvent_getSilent">
-      <wsdl:input message="vbox:IStorageDeviceChangedEvent_getSilentRequestMsg"/>
-      <wsdl:output message="vbox:IStorageDeviceChangedEvent_getSilentResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getHomeFolder">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkChangedEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkChangedEvent_getNetworkName">
-      <wsdl:input message="vbox:INATNetworkChangedEvent_getNetworkNameRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkChangedEvent_getNetworkNameResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getSettingsFilePath">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkStartStopEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkStartStopEvent_getStartEvent">
-      <wsdl:input message="vbox:INATNetworkStartStopEvent_getStartEventRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkStartStopEvent_getStartEventResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getHost">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkAlterEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkAlterEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getSystemProperties">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkCreationDeletionEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkCreationDeletionEvent_getCreationEvent">
-      <wsdl:input message="vbox:INATNetworkCreationDeletionEvent_getCreationEventRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkCreationDeletionEvent_getCreationEventResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getMachines">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkSettingEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkSettingEvent_getEnabled">
-      <wsdl:input message="vbox:INATNetworkSettingEvent_getEnabledRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkSettingEvent_getEnabledResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getMachineGroups">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkSettingEvent_getNetwork">
-      <wsdl:input message="vbox:INATNetworkSettingEvent_getNetworkRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkSettingEvent_getNetworkResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getHardDisks">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkSettingEvent_getGateway">
-      <wsdl:input message="vbox:INATNetworkSettingEvent_getGatewayRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkSettingEvent_getGatewayResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getDVDImages">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabled">
-      <wsdl:input message="vbox:INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkSettingEvent_getAdvertiseDefaultIPv6RouteEnabledResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getFloppyImages">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkSettingEvent_getNeedDhcpServer">
-      <wsdl:input message="vbox:INATNetworkSettingEvent_getNeedDhcpServerRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkSettingEvent_getNeedDhcpServerResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getProgressOperations">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetworkPortForwardEvent
-          *************************************
-        -->
-    <wsdl:operation name="INATNetworkPortForwardEvent_getCreate">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getCreateRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getCreateResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getGuestOSTypes">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getIpv6">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getIpv6RequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getIpv6ResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getSharedFolders">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getName">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getNameRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getNameResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getPerformanceCollector">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getProto">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getProtoRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getProtoResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getDHCPServers">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getHostIp">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getHostIpRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getHostIpResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getNATNetworks">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getHostPort">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getHostPortRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getHostPortResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getEventSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getGuestIp">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getGuestIpRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getGuestIpResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <!--skipping attribute extensionPackManager for it is of a suppressed type-->
+    <wsdl:operation name="IVirtualBox_getInternalNetworks">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetworkPortForwardEvent_getGuestPort">
-      <wsdl:input message="vbox:INATNetworkPortForwardEvent_getGuestPortRequestMsg"/>
-      <wsdl:output message="vbox:INATNetworkPortForwardEvent_getGuestPortResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_getGenericNetworkDrivers">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IHostNameResolutionConfigurationChangeEvent
-          *************************************
-        -->
-    <wsdl:operation name="IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfaces">
-      <wsdl:input message="vbox:IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesRequestMsg"/>
-      <wsdl:output message="vbox:IHostNameResolutionConfigurationChangeEvent_getMidlDoesNotLikeEmptyInterfacesResultMsg"/>
-      <wsdl:fault name="InvalidObjectFault" message="vbox:InvalidObjectFaultMsg"/>
-      <wsdl:fault name="RuntimeFault" message="vbox:RuntimeFaultMsg"/>
+    <wsdl:operation name="IVirtualBox_composeMachineFilename">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
     </wsdl:operation>
-  </wsdl:portType>
-  <!--
-      ******************************************************
-      *
-      * one binding for all interfaces
-      *
-      ******************************************************
-    -->
-  <wsdl:binding name="vboxBinding" type="vbox:vboxPortType">
-    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
-    <!--
-          *************************************
-          operations in portType for interface IVirtualBoxErrorInfo
-          *************************************
-        -->
-    <wsdl:operation name="IVirtualBoxErrorInfo_getResultCode">
+    <wsdl:operation name="IVirtualBox_createMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -38946,7 +43384,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBoxErrorInfo_getResultDetail">
+    <wsdl:operation name="IVirtualBox_openMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -38961,7 +43399,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBoxErrorInfo_getInterfaceID">
+    <wsdl:operation name="IVirtualBox_registerMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -38976,7 +43414,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBoxErrorInfo_getComponent">
+    <wsdl:operation name="IVirtualBox_findMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -38991,7 +43429,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBoxErrorInfo_getText">
+    <wsdl:operation name="IVirtualBox_getMachinesByGroups">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39006,7 +43444,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBoxErrorInfo_getNext">
+    <wsdl:operation name="IVirtualBox_getMachineStates">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39021,12 +43459,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface INATNetwork
-          *************************************
-        -->
-    <wsdl:operation name="INATNetwork_getNetworkName">
+    <wsdl:operation name="IVirtualBox_createAppliance">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39041,7 +43474,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setNetworkName">
+    <wsdl:operation name="IVirtualBox_createUnattendedInstaller">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39056,7 +43489,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getEnabled">
+    <wsdl:operation name="IVirtualBox_createMedium">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39071,7 +43504,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setEnabled">
+    <wsdl:operation name="IVirtualBox_openMedium">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39086,7 +43519,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getNetwork">
+    <wsdl:operation name="IVirtualBox_getGuestOSType">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39101,7 +43534,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setNetwork">
+    <wsdl:operation name="IVirtualBox_createSharedFolder">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39116,7 +43549,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getGateway">
+    <wsdl:operation name="IVirtualBox_removeSharedFolder">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39131,7 +43564,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getIPv6Enabled">
+    <wsdl:operation name="IVirtualBox_getExtraDataKeys">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39146,7 +43579,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setIPv6Enabled">
+    <wsdl:operation name="IVirtualBox_getExtraData">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39161,7 +43594,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getIPv6Prefix">
+    <wsdl:operation name="IVirtualBox_setExtraData">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39176,7 +43609,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setIPv6Prefix">
+    <wsdl:operation name="IVirtualBox_setSettingsSecret">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39191,7 +43624,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getAdvertiseDefaultIPv6RouteEnabled">
+    <wsdl:operation name="IVirtualBox_createDHCPServer">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39206,7 +43639,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setAdvertiseDefaultIPv6RouteEnabled">
+    <wsdl:operation name="IVirtualBox_findDHCPServerByNetworkName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39221,7 +43654,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getNeedDhcpServer">
+    <wsdl:operation name="IVirtualBox_removeDHCPServer">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39236,7 +43669,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setNeedDhcpServer">
+    <wsdl:operation name="IVirtualBox_createNATNetwork">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39251,7 +43684,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getEventSource">
+    <wsdl:operation name="IVirtualBox_findNATNetworkByName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39266,7 +43699,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getPortForwardRules4">
+    <wsdl:operation name="IVirtualBox_removeNATNetwork">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39281,7 +43714,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getLocalMappings">
+    <wsdl:operation name="IVirtualBox_checkFirmwarePresent">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39296,7 +43729,12 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getLoopbackIp6">
+    <!--
+          *************************************
+          operations in portType for interface IVFSExplorer
+          *************************************
+        -->
+    <wsdl:operation name="IVFSExplorer_getPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39311,7 +43749,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_setLoopbackIp6">
+    <wsdl:operation name="IVFSExplorer_getType">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39326,7 +43764,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_getPortForwardRules6">
+    <wsdl:operation name="IVFSExplorer_update">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39341,7 +43779,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_addLocalMapping">
+    <wsdl:operation name="IVFSExplorer_cd">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39356,7 +43794,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_addPortForwardRule">
+    <wsdl:operation name="IVFSExplorer_cdUp">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39371,7 +43809,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_removePortForwardRule">
+    <wsdl:operation name="IVFSExplorer_entryList">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39386,7 +43824,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_start">
+    <wsdl:operation name="IVFSExplorer_exists">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39401,7 +43839,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="INATNetwork_stop">
+    <wsdl:operation name="IVFSExplorer_remove">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39418,10 +43856,10 @@
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IDHCPServer
+          operations in portType for interface ICertificate
           *************************************
         -->
-    <wsdl:operation name="IDHCPServer_getEventSource">
+    <wsdl:operation name="ICertificate_getVersionNumber">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39436,7 +43874,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getEnabled">
+    <wsdl:operation name="ICertificate_getSerialNumber">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39451,7 +43889,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_setEnabled">
+    <wsdl:operation name="ICertificate_getSignatureAlgorithmOID">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39466,7 +43904,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getIPAddress">
+    <wsdl:operation name="ICertificate_getSignatureAlgorithmName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39481,7 +43919,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getNetworkMask">
+    <wsdl:operation name="ICertificate_getIssuerName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39496,7 +43934,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getNetworkName">
+    <wsdl:operation name="ICertificate_getSubjectName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39511,7 +43949,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getLowerIP">
+    <wsdl:operation name="ICertificate_getFriendlyName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39526,7 +43964,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getUpperIP">
+    <wsdl:operation name="ICertificate_getValidityPeriodNotBefore">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39541,7 +43979,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getGlobalOptions">
+    <wsdl:operation name="ICertificate_getValidityPeriodNotAfter">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39556,7 +43994,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getVmConfigs">
+    <wsdl:operation name="ICertificate_getPublicKeyAlgorithmOID">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39571,7 +44009,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_addGlobalOption">
+    <wsdl:operation name="ICertificate_getPublicKeyAlgorithm">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39586,7 +44024,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_addVmSlotOption">
+    <wsdl:operation name="ICertificate_getSubjectPublicKey">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39601,7 +44039,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_removeVmSlotOptions">
+    <wsdl:operation name="ICertificate_getIssuerUniqueIdentifier">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39616,7 +44054,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getVmSlotOptions">
+    <wsdl:operation name="ICertificate_getSubjectUniqueIdentifier">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39631,7 +44069,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_getMacOptions">
+    <wsdl:operation name="ICertificate_getCertificateAuthority">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39646,7 +44084,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_setConfiguration">
+    <wsdl:operation name="ICertificate_getKeyUsage">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39661,7 +44099,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_start">
+    <wsdl:operation name="ICertificate_getExtendedKeyUsage">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39676,7 +44114,82 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IDHCPServer_stop">
+    <wsdl:operation name="ICertificate_getRawCertData">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getSelfSigned">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getTrusted">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_getExpired">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_isCurrentlyExpired">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="ICertificate_queryInfo">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39693,10 +44206,10 @@
     </wsdl:operation>
     <!--
           *************************************
-          operations in portType for interface IVirtualBox
+          operations in portType for interface IAppliance
           *************************************
         -->
-    <wsdl:operation name="IVirtualBox_getVersion">
+    <wsdl:operation name="IAppliance_getPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39711,7 +44224,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getVersionNormalized">
+    <wsdl:operation name="IAppliance_getDisks">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39726,7 +44239,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getRevision">
+    <wsdl:operation name="IAppliance_getVirtualSystemDescriptions">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39741,7 +44254,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getPackageType">
+    <wsdl:operation name="IAppliance_getMachines">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39756,7 +44269,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getAPIVersion">
+    <wsdl:operation name="IAppliance_getCertificate">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39771,7 +44284,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getAPIRevision">
+    <wsdl:operation name="IAppliance_read">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39786,7 +44299,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getHomeFolder">
+    <wsdl:operation name="IAppliance_interpret">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39801,7 +44314,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getSettingsFilePath">
+    <wsdl:operation name="IAppliance_importMachines">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39816,7 +44329,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getHost">
+    <wsdl:operation name="IAppliance_createVFSExplorer">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39831,7 +44344,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getSystemProperties">
+    <wsdl:operation name="IAppliance_write">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39846,7 +44359,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getMachines">
+    <wsdl:operation name="IAppliance_getWarnings">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39861,7 +44374,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getMachineGroups">
+    <wsdl:operation name="IAppliance_getPasswordIds">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39876,7 +44389,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getHardDisks">
+    <wsdl:operation name="IAppliance_getMediumIdsForPasswordId">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39891,7 +44404,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getDVDImages">
+    <wsdl:operation name="IAppliance_addPasswords">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39906,7 +44419,12 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getFloppyImages">
+    <!--
+          *************************************
+          operations in portType for interface IVirtualSystemDescription
+          *************************************
+        -->
+    <wsdl:operation name="IVirtualSystemDescription_getCount">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39921,7 +44439,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getProgressOperations">
+    <wsdl:operation name="IVirtualSystemDescription_getDescription">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39936,7 +44454,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getGuestOSTypes">
+    <wsdl:operation name="IVirtualSystemDescription_getDescriptionByType">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39951,7 +44469,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getSharedFolders">
+    <wsdl:operation name="IVirtualSystemDescription_getValuesByType">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39966,7 +44484,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getPerformanceCollector">
+    <wsdl:operation name="IVirtualSystemDescription_setFinalValues">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39981,7 +44499,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getDHCPServers">
+    <wsdl:operation name="IVirtualSystemDescription_addDescription">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -39996,7 +44514,12 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getNATNetworks">
+    <!--
+          *************************************
+          operations in portType for interface IUnattended
+          *************************************
+        -->
+    <wsdl:operation name="IUnattended_getIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40011,7 +44534,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getEventSource">
+    <wsdl:operation name="IUnattended_setIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40026,8 +44549,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <!--skipping attribute extensionPackManager for it is of a suppressed type-->
-    <wsdl:operation name="IVirtualBox_getInternalNetworks">
+    <wsdl:operation name="IUnattended_getMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40042,7 +44564,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getGenericNetworkDrivers">
+    <wsdl:operation name="IUnattended_setMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40057,7 +44579,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_composeMachineFilename">
+    <wsdl:operation name="IUnattended_getUser">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40072,7 +44594,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createMachine">
+    <wsdl:operation name="IUnattended_setUser">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40087,7 +44609,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_openMachine">
+    <wsdl:operation name="IUnattended_getPassword">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40102,7 +44624,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_registerMachine">
+    <wsdl:operation name="IUnattended_setPassword">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40117,7 +44639,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_findMachine">
+    <wsdl:operation name="IUnattended_getFullUserName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40132,7 +44654,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getMachinesByGroups">
+    <wsdl:operation name="IUnattended_setFullUserName">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40147,7 +44669,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getMachineStates">
+    <wsdl:operation name="IUnattended_getProductKey">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40162,7 +44684,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createAppliance">
+    <wsdl:operation name="IUnattended_setProductKey">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40177,7 +44699,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createMedium">
+    <wsdl:operation name="IUnattended_getAdditionsIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40192,7 +44714,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_openMedium">
+    <wsdl:operation name="IUnattended_setAdditionsIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40207,7 +44729,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getGuestOSType">
+    <wsdl:operation name="IUnattended_getInstallGuestAdditions">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40222,7 +44744,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createSharedFolder">
+    <wsdl:operation name="IUnattended_setInstallGuestAdditions">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40237,7 +44759,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_removeSharedFolder">
+    <wsdl:operation name="IUnattended_getValidationKitIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40252,7 +44774,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getExtraDataKeys">
+    <wsdl:operation name="IUnattended_setValidationKitIsoPath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40267,7 +44789,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_getExtraData">
+    <wsdl:operation name="IUnattended_getInstallTestExecService">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40282,7 +44804,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_setExtraData">
+    <wsdl:operation name="IUnattended_setInstallTestExecService">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40297,7 +44819,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_setSettingsSecret">
+    <wsdl:operation name="IUnattended_getTimeZone">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40312,7 +44834,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createDHCPServer">
+    <wsdl:operation name="IUnattended_setTimeZone">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40327,7 +44849,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_findDHCPServerByNetworkName">
+    <wsdl:operation name="IUnattended_getLocale">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40342,7 +44864,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_removeDHCPServer">
+    <wsdl:operation name="IUnattended_setLocale">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40357,7 +44879,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_createNATNetwork">
+    <wsdl:operation name="IUnattended_getLanguage">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40372,7 +44894,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_findNATNetworkByName">
+    <wsdl:operation name="IUnattended_setLanguage">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40387,7 +44909,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_removeNATNetwork">
+    <wsdl:operation name="IUnattended_getCountry">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40402,7 +44924,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualBox_checkFirmwarePresent">
+    <wsdl:operation name="IUnattended_setCountry">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40417,12 +44939,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVFSExplorer
-          *************************************
-        -->
-    <wsdl:operation name="IVFSExplorer_getPath">
+    <wsdl:operation name="IUnattended_getProxy">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40437,7 +44954,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_getType">
+    <wsdl:operation name="IUnattended_setProxy">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40452,7 +44969,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_update">
+    <wsdl:operation name="IUnattended_getPackageSelectionAdjustments">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40467,7 +44984,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_cd">
+    <wsdl:operation name="IUnattended_setPackageSelectionAdjustments">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40482,7 +44999,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_cdUp">
+    <wsdl:operation name="IUnattended_getHostname">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40497,7 +45014,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_entryList">
+    <wsdl:operation name="IUnattended_setHostname">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40512,7 +45029,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_exists">
+    <wsdl:operation name="IUnattended_getAuxiliaryBasePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40527,7 +45044,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVFSExplorer_remove">
+    <wsdl:operation name="IUnattended_setAuxiliaryBasePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40542,12 +45059,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IAppliance
-          *************************************
-        -->
-    <wsdl:operation name="IAppliance_getPath">
+    <wsdl:operation name="IUnattended_getImageIndex">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40562,7 +45074,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getDisks">
+    <wsdl:operation name="IUnattended_setImageIndex">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40577,7 +45089,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getVirtualSystemDescriptions">
+    <wsdl:operation name="IUnattended_getScriptTemplatePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40592,7 +45104,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getMachines">
+    <wsdl:operation name="IUnattended_setScriptTemplatePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40607,7 +45119,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_read">
+    <wsdl:operation name="IUnattended_getPostInstallScriptTemplatePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40622,7 +45134,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_interpret">
+    <wsdl:operation name="IUnattended_setPostInstallScriptTemplatePath">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40637,7 +45149,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_importMachines">
+    <wsdl:operation name="IUnattended_getPostInstallCommand">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40652,7 +45164,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_createVFSExplorer">
+    <wsdl:operation name="IUnattended_setPostInstallCommand">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40667,7 +45179,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_write">
+    <wsdl:operation name="IUnattended_getExtraInstallKernelParameters">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40682,7 +45194,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getWarnings">
+    <wsdl:operation name="IUnattended_setExtraInstallKernelParameters">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40697,7 +45209,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getPasswordIds">
+    <wsdl:operation name="IUnattended_getDetectedOSTypeId">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40712,7 +45224,22 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_getMediumIdsForPasswordId">
+    <wsdl:operation name="IUnattended_getDetectedOSVersion">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IUnattended_getDetectedOSFlavor">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40727,7 +45254,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IAppliance_addPasswords">
+    <wsdl:operation name="IUnattended_getDetectedOSLanguages">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40742,12 +45269,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <!--
-          *************************************
-          operations in portType for interface IVirtualSystemDescription
-          *************************************
-        -->
-    <wsdl:operation name="IVirtualSystemDescription_getCount">
+    <wsdl:operation name="IUnattended_getDetectedOSHints">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40762,7 +45284,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualSystemDescription_getDescription">
+    <wsdl:operation name="IUnattended_detectIsoOS">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40777,7 +45299,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualSystemDescription_getDescriptionByType">
+    <wsdl:operation name="IUnattended_prepare">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40792,7 +45314,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualSystemDescription_getValuesByType">
+    <wsdl:operation name="IUnattended_constructMedia">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40807,7 +45329,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualSystemDescription_setFinalValues">
+    <wsdl:operation name="IUnattended_reconfigureVM">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -40822,7 +45344,7 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
-    <wsdl:operation name="IVirtualSystemDescription_addDescription">
+    <wsdl:operation name="IUnattended_done">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
         <soap:body use="literal"/>
@@ -41057,6 +45579,36 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IBIOSSettings_getAPICMode">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IBIOSSettings_setAPICMode">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IBIOSSettings_getTimeOffset">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -42527,6 +47079,21 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getSettingsAuxFilePath">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_getSettingsModified">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -43442,6 +48009,66 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getParavirtDebug">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_setParavirtDebug">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_getCPUProfile">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IMachine_setCPUProfile">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_lockMachine">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -44012,6 +48639,21 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IMachine_getCPUIDLeafByOrdinal">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IMachine_getCPUIDLeaf">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -45517,6 +50159,21 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IHostNetworkInterface_getWireless">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IHostNetworkInterface_enableStaticIPConfig">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -46172,6 +50829,36 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IHost_addUSBDeviceSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IHost_removeUSBDeviceSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface ISystemProperties
@@ -49597,6 +54284,21 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IProgress_getEventSource">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IProgress_setCurrentOperationProgress">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -51368,9 +56070,179 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IGuestScreenInfo
+          *************************************
+        -->
+    <wsdl:operation name="IGuestScreenInfo_getScreenId">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getGuestMonitorStatus">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getPrimary">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOrigin">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOriginX">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getOriginY">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getWidth">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getHeight">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getBitsPerPixel">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IGuestScreenInfo_getExtendedInfo">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IDisplay
           *************************************
         -->
+    <wsdl:operation name="IDisplay_getGuestScreenLayout">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IDisplay_getScreenResolution">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -51555,6 +56427,36 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IDisplay_setScreenLayout">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IDisplay_detachScreens">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface INetworkAdapter
@@ -52896,6 +57798,21 @@
       </wsdl:fault>
     </wsdl:operation>
     <!--skipping attribute VM for it is suppressed-->
+    <wsdl:operation name="IMachineDebugger_getUptime">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <wsdl:operation name="IMachineDebugger_dumpGuestCore">
       <soap:operation soapAction="" style="document"/>
       <wsdl:input>
@@ -53586,6 +58503,36 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <wsdl:operation name="IUSBDevice_getDeviceInfo">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IUSBDevice_getBackend">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
     <!--
           *************************************
           operations in portType for interface IUSBDeviceFilter
@@ -53978,6 +58925,41 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IUSBProxyBackend
+          *************************************
+        -->
+    <wsdl:operation name="IUSBProxyBackend_getName">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <wsdl:operation name="IUSBProxyBackend_getType">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface IAudioAdapter
           *************************************
         -->
@@ -56513,6 +61495,26 @@
     </wsdl:operation>
     <!--
           *************************************
+          operations in portType for interface IAudioAdapterChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IAudioAdapterChangedEvent_getAudioAdapter">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <!--
+          *************************************
           operations in portType for interface ISerialPortChangedEvent
           *************************************
         -->
@@ -58551,5 +63553,65 @@
         <soap:fault name="RuntimeFault" use="literal"/>
       </wsdl:fault>
     </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IProgressEvent
+          *************************************
+        -->
+    <wsdl:operation name="IProgressEvent_getProgressId">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IProgressPercentageChangedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IProgressPercentageChangedEvent_getPercent">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
+    <!--
+          *************************************
+          operations in portType for interface IProgressTaskCompletedEvent
+          *************************************
+        -->
+    <wsdl:operation name="IProgressTaskCompletedEvent_getMidlDoesNotLikeEmptyInterfaces">
+      <soap:operation soapAction="" style="document"/>
+      <wsdl:input>
+        <soap:body use="literal"/>
+      </wsdl:input>
+      <wsdl:output>
+        <soap:body use="literal"/>
+      </wsdl:output>
+      <wsdl:fault name="InvalidObjectFault">
+        <soap:fault name="InvalidObjectFault" use="literal"/>
+      </wsdl:fault>
+      <wsdl:fault name="RuntimeFault">
+        <soap:fault name="RuntimeFault" use="literal"/>
+      </wsdl:fault>
+    </wsdl:operation>
   </wsdl:binding>
 </wsdl:definitions>
