#!/bin/sh
#
# Part of XigmaNAS (https://www.xigmanas.com).
# Copyright (c) 2018-2019 XigmaNAS <info@xigmanas.com>.
# All rights reserved.
# 
# LCD Deamon Config
#

# PROVIDE: LCDd
# REQUIRE: DAEMON
# XQUERY: -i "count(//lcdproc/enable) > 0" -o "0" -b
# RCVAR: LCDd

. /etc/rc.subr
. /etc/configxml.subr

name="LCDd"
desc="LCD Deamon Config"
rcvar=LCDd_enable

load_rc_config "${name}"

# Custom commands
start_precmd="LCDd_mkconf"
start_cmd="LCDd_start"
stop_cmd="LCDd_stop"
mkconf_cmd="LCDd_mkconf"
extra_commands="mkconf"

# Defaults
LCDd_enable=${LCDd_enable:-"NO"}
LCDd_conf=${LCDd_conf:-"/var/etc/${name}.conf"}

command="/usr/local/sbin/${name}"
command_args="-c ${LCDd_conf}"

LCDd_mkconf()
{
	# Create config file
	/usr/local/bin/xml sel -t \
		-o '[server]' -n \
		-o 'DriverPath=/usr/local/lib/lcdproc/' -n \
		-v "concat('Driver=', //lcdproc/driver)" -n \
		--if 'string-length(//lcdproc/bind) > 0' \
			-v 'concat("Bind=", //lcdproc/bind)' -n \
		--else \
			-o 'Bind=127.0.0.1' -n \
		--break \
		-v "concat('Port=', //lcdproc/port)" -n \
		-o 'ReportLevel=2' -n \
		-o 'User=nobody' -n \
		-o 'Hello="    Welcome to"' -n \
		-o 'Hello=" XigmaNAS LCDproc!"' -n \
		-v "concat('WaitTime=', //lcdproc/waittime)" -n \
		-v "concat('TitleSpeed=', //lcdproc/titlespeed)" -n \
		-o 'ToggleRotateKey=Enter' -n \
		-o 'PrevScreenKey=Left' -n \
		-o 'NextScreenKey=Right' -n \
		-o '#ScrollUpKey=Up' -n \
		-o '#ScrollDownKey=Down' -n \
		-o 'GoodBye=" Thanks for using"' -n \
		-o 'GoodBye=" XigmaNAS LCDproc!"' -n \
		-m "//xigmanas/lcdproc/auxparam" \
			-v "." -n \
		-b \
		-n \
		-o '[menu]' -n \
		-o 'MenuKey=Escape' -n \
		-o 'EnterKey=Enter' -n \
		-o 'UpKey=Up' -n \
		-o 'DownKey=Down' -n \
		-o '#LeftKey=Left' -n \
		-o '#RightKey=Right' -n \
		-n \
		-v "concat('[', //lcdproc/driver,']')" -n \
		-m "//xigmanas/lcdproc/param" \
			-v "." -n \
		-b \
		${configxml_file} | /usr/local/bin/xml unesc > ${LCDd_conf}
}

LCDd_start()
{
	local _driver=`configxml_get "//lcdproc/driver"`

	if [ ! "$_rc_prefix" = "force" ]; then
		if [ x"$_driver" = x"curses" -o x"$_driver" = x"text" ]; then
			return 0;
		fi
	fi
	unset start_cmd
	run_rc_command "${_rc_prefix}${rc_arg}" ${rc_extra_args}
}

LCDd_stop()
{
	local _driver=`configxml_get "//lcdproc/driver"`

	if [ ! "$_rc_prefix" = "force" ]; then
		if [ x"$_driver" = x"curses" -o x"$_driver" = x"text" ]; then
			return 0;
		fi
	fi
	unset stop_cmd
	run_rc_command "${_rc_prefix}${rc_arg}" ${rc_extra_args}
}

run_rc_command "$1"
